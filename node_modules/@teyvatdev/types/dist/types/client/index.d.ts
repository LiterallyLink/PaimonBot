
/**
 * Client
**/

import * as runtime from '../runtime';

export import DMMF = runtime.DMMF

/**
 * Prisma Errors
 */
export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
export import PrismaClientValidationError = runtime.PrismaClientValidationError

/**
 * Re-export of sql-template-tag
 */
export import sql = runtime.sqltag
export import empty = runtime.empty
export import join = runtime.join
export import raw = runtime.raw
export import Sql = runtime.Sql

/**
 * Decimal.js
 */
export import Decimal = runtime.Decimal

/**
 * Prisma Client JS version: 2.14.0
 * Query Engine version: 5d491261d382a2a5ffdc71de17072b0e409f1cc1
 */
export type PrismaVersion = {
  client: string
}

export const prismaVersion: PrismaVersion 

/**
 * Utility Types
 */

/**
 * From https://github.com/sindresorhus/type-fest/
 * Matches a JSON object.
 * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
 */
export type JsonObject = {[Key in string]?: JsonValue}
 
/**
 * From https://github.com/sindresorhus/type-fest/
 * Matches a JSON array.
 */
export interface JsonArray extends Array<JsonValue> {}
 
/**
 * From https://github.com/sindresorhus/type-fest/
 * Matches any valid JSON value.
 */
export type JsonValue = string | number | boolean | null | JsonObject | JsonArray

/**
 * Same as JsonObject, but allows undefined
 */
export type InputJsonObject = {[Key in string]?: JsonValue}
 
export interface InputJsonArray extends Array<JsonValue> {}
 
export type InputJsonValue = undefined |  string | number | boolean | null | InputJsonObject | InputJsonArray
 type SelectAndInclude = {
  select: any
  include: any
}
type HasSelect = {
  select: any
}
type HasInclude = {
  include: any
}
type CheckSelect<T, S, U> = T extends SelectAndInclude
  ? 'Please either choose `select` or `include`'
  : T extends HasSelect
  ? U
  : T extends HasInclude
  ? U
  : S

/**
 * Get the type of the value, that the Promise holds.
 */
export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

/**
 * Get the return type of a function which returns a Promise.
 */
export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>


export type Enumerable<T> = T | Array<T>;

export type RequiredKeys<T> = {
  [K in keyof T]-?: {} extends Pick<T, K> ? never : K
}[keyof T]

export type TruthyKeys<T> = {
  [key in keyof T]: T[key] extends false | undefined | null ? never : key
}[keyof T]

export type TrueKeys<T> = TruthyKeys<Pick<T, RequiredKeys<T>>>

/**
 * Subset
 * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
 */
export type Subset<T, U> = {
  [key in keyof T]: key extends keyof U ? T[key] : never;
};

/**
 * Subset + Intersection
 * @desc From `T` pick properties that exist in `U` and intersect `K`
 */
export type SubsetIntersection<T, U, K> = {
  [key in keyof T]: key extends keyof U ? T[key] : never
} &
  K

type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

/**
 * XOR is needed to have a real mutually exclusive union type
 * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
 */
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;


/**
 * Is T a Record?
 */
type IsObject<T extends any> = T extends Array<any>
? False
: T extends Date
? False
: T extends Buffer
? False
: T extends BigInt
? False
: T extends object
? True
: False


/**
 * If it's T[], return T
 */
export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

/**
 * From ts-toolbelt
 */

export type Union = any

/** Helper Types for "Merge" **/
export type IntersectOf<U extends Union> = (
  U extends unknown ? (k: U) => void : never
) extends (k: infer I) => void
  ? I
  : never

export type Overwrite<O extends object, O1 extends object> = {
    [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
} & {};

type _Merge<U extends object> = IntersectOf<Overwrite<U, {
    [K in keyof U]-?: At<U, K>;
}>>;

type Key = string | number | symbol;
type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
type AtStrict<O extends object, K extends Key> = O[K & keyof O];
type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
    1: AtStrict<O, K>;
    0: AtLoose<O, K>;
}[strict];

export type ComputeRaw<A extends any> = A extends Function ? A : {
  [K in keyof A]: A[K];
} & {};

export type OptionalFlat<O> = {
  [K in keyof O]?: O[K];
} & {};

type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<Record<Exclude<Keys<_U>, keyof U>, never>> : never;

export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
/** End Helper Types for "Merge" **/

export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

/**
A [[Boolean]]
*/
export type Boolean = True | False

// /**
// 1
// */
export type True = 1

/**
0
*/
export type False = 0

export type Not<B extends Boolean> = {
  0: 1
  1: 0
}[B]

export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
  ? 0 // anything `never` is false
  : A1 extends A2
  ? 1
  : 0

export type Has<U extends Union, U1 extends Union> = Not<
  Extends<Exclude<U1, U>, U1>
>

export type Or<B1 extends Boolean, B2 extends Boolean> = {
  0: {
    0: 0
    1: 1
  }
  1: {
    0: 1
    1: 1
  }
}[B1][B2]

export type Keys<U extends Union> = U extends unknown ? keyof U : never



/**
 * Used by group by
 */

export type GetScalarType<T, O> = O extends object ? {
  [P in keyof T]: P extends keyof O
    ? O[P]
    : never
} : never

type FieldPaths<
  T,
  U = Omit<T, 'avg' | 'sum' | 'count' | 'min' | 'max'>
> = IsObject<T> extends True ? U : T

type GetHavingFields<T> = {
  [K in keyof T]: Or<
    Or<Extends<'OR', K>, Extends<'AND', K>>,
    Extends<'NOT', K>
  > extends True
    ? // infer is only needed to not hit TS limit
      // based on the brilliant idea of Pierre-Antoine Mills
      // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
      T[K] extends infer TK
      ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
      : never
    : {} extends FieldPaths<T[K]>
    ? never
    : K
}[keyof T]

/**
 * Convert tuple to union
 */
type _TupleToUnion<T> = T extends (infer E)[] ? E : never
type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

/**
 * Like `Pick`, but with an array
 */
type PickArray<T, K extends Array<keyof T>> = Pick<T, TupleToUnion<K>>





/**
 * Model User
 */

export type User = {
  id: string
  createdAt: Date
  updatedAt: Date
  email: string
  username: string | null
  slimeColor: string | null
  role: Role
}

/**
 * Model UserSecret
 */

export type UserSecret = {
  id: string
  createdAt: Date
  updatedAt: Date
  token: string | null
  activated: boolean
  activationToken: string | null
  passwordAttempts: number
  password: string
  firstFailedPasswordAttempt: Date | null
  resetPasswordToken: string | null
  resetPasswordTokenGenerated: Date | null
  resetPasswordAttempts: number
  firstFailedResetPasswordAttempt: Date | null
  userId: string
}

/**
 * Model Character
 */

export type Character = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  constellations: Prisma.JsonValue | null
  icon: string | null
  overview: string | null
  rarity: number
  stats: Prisma.JsonValue | null
  characterProfileId: string | null
  weapon: WeaponType | null
}

/**
 * Model CharacterAscension
 */

export type CharacterAscension = {
  id: string
  createdAt: Date
  updatedAt: Date
  level: number
  maxLevel: number
  recipe: Prisma.JsonValue | null
  characterId: string | null
  characterAscensionMaterialId: string | null
}

/**
 * Model CharacterProfile
 */

export type CharacterProfile = {
  id: string
  createdAt: Date
  updatedAt: Date
  affiliation: string | null
  birthday: string | null
  constellation: string | null
  images: Prisma.JsonValue | null
  overview: string | null
  story: Prisma.JsonValue | null
  voiceActor: Prisma.JsonValue | null
  voiceLines: Prisma.JsonValue | null
  regionId: string | null
  elementId: string | null
}

/**
 * Model Talent
 */

export type Talent = {
  id: string
  createdAt: Date
  updatedAt: Date
  description: string | null
  details: Prisma.JsonValue | null
  name: string | null
  type: string | null
  characterId: string
  talentLevelUpMaterialId: string | null
}

/**
 * Model Element
 */

export type Element = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  archon: string | null
  statusEffect: string | null
  theme: string | null
  regionId: string | null
}

/**
 * Model Region
 */

export type Region = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
}

/**
 * Model Weapon
 */

export type Weapon = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  baseStats: Prisma.JsonValue | null
  description: string | null
  image: string | null
  lore: string | null
  passive: Prisma.JsonValue | null
  rarity: number | null
  refinements: Prisma.JsonValue | null
  stats: Prisma.JsonValue | null
  secondaryStatType: WeaponSecondaryStatType | null
  type: WeaponType
}

/**
 * Model WeaponAscension
 */

export type WeaponAscension = {
  id: string
  createdAt: Date
  updatedAt: Date
  level: number
  maxLevel: number
  recipe: Prisma.JsonValue | null
  weaponAscensionMaterialId: string | null
  weaponId: string | null
}

/**
 * Model CommonAscensionMaterial
 */

export type CommonAscensionMaterial = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  description: string | null
  image: string | null
  rarity: number
  group: CommonAscensionMaterialGroup
}

/**
 * Model WeaponAscensionMaterial
 */

export type WeaponAscensionMaterial = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  availability: Prisma.JsonValue | null
  description: string | null
  image: string | null
  rarity: number
  group: WeaponAscensionMaterialGroup
  domainId: string | null
}

/**
 * Model WeaponEnhancementMaterial
 */

export type WeaponEnhancementMaterial = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  description: string | null
  image: string | null
  rarity: number
  source: Prisma.JsonValue | null
  recipeUseId: string | null
}

/**
 * Model CharacterAscensionMaterial
 */

export type CharacterAscensionMaterial = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  description: string | null
  image: string | null
  rarity: number
  source: Prisma.JsonValue | null
  group: WeaponAscensionMaterialGroup
}

/**
 * Model TalentLevelUpMaterial
 */

export type TalentLevelUpMaterial = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  availability: Prisma.JsonValue | null
  description: string | null
  image: string | null
  rarity: number
  group: TalentLevelUpMaterialGroup
  domainId: string | null
}

/**
 * Model CraftingMaterial
 */

export type CraftingMaterial = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  description: string | null
  image: string | null
  rarity: number
  source: Prisma.JsonValue | null
}

/**
 * Model CookingMaterial
 */

export type CookingMaterial = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  description: string | null
  image: string | null
  rarity: number
  source: Prisma.JsonValue | null
}

/**
 * Model CommonMaterial
 */

export type CommonMaterial = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  description: string | null
  image: string | null
  rarity: number
  source: Prisma.JsonValue | null
}

/**
 * Model Domain
 */

export type Domain = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  description: string | null
  levels: Prisma.JsonValue | null
  type: string | null
  regionId: string | null
}

/**
 * Model Consumeable
 */

export type Consumeable = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  description: string | null
  effect: string | null
  image: string | null
  rarity: number
  consumeableType: ConsumableType
  foodType: FoodType
  characterProfileId: string | null
}

/**
 * Model ConsumeableRecipe
 */

export type ConsumeableRecipe = {
  id: string
  createdAt: Date
  updatedAt: Date
  recipe: Prisma.JsonValue | null
  consumeableId: string | null
}

/**
 * Model ProcessRecipe
 */

export type ProcessRecipe = {
  id: string
  createdAt: Date
  updatedAt: Date
  processingTime: number | null
  recipe: Prisma.JsonValue | null
  materialId: string | null
}

/**
 * Model ForgeRecipe
 */

export type ForgeRecipe = {
  id: string
  createdAt: Date
  updatedAt: Date
  craftingTime: number | null
  recipe: Prisma.JsonValue | null
  weaponEnhancementMaterialId: string | null
  weaponId: string | null
}

/**
 * Model ArtifactSet
 */

export type ArtifactSet = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  image: string | null
  maxRarity: number | null
  pieceBonusFour: string | null
  pieceBonusOne: string | null
  pieceBonusTwo: string | null
}

/**
 * Model Artifact
 */

export type Artifact = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  lore: string | null
  minRarity: number
  possibleMainStats: Prisma.JsonValue | null
  possibleSubStats: Prisma.JsonValue | null
  source: Prisma.JsonValue | null
  type: ArtifactType
  artifactSetId: string | null
  domainId: string | null
}

/**
 * Model Gadget
 */

export type Gadget = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  icon: string | null
  effect: string | null
  craftingType: string | null
  source: string | null
  reuseable: string | null
  recipe: Prisma.JsonValue | null
}


/**
 * Enums
 */

// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

export const Role: {
  MEMBER: 'MEMBER',
  ALPHAMEMBER: 'ALPHAMEMBER',
  BETAMEMBER: 'BETAMEMBER',
  ADMIN: 'ADMIN'
};

export type Role = (typeof Role)[keyof typeof Role]


export const WeaponType: {
  Bow: 'Bow',
  Catalyst: 'Catalyst',
  Claymore: 'Claymore',
  Polearm: 'Polearm',
  Sword: 'Sword'
};

export type WeaponType = (typeof WeaponType)[keyof typeof WeaponType]


export const WeaponSecondaryStatType: {
  DEFPercent: 'DEFPercent',
  HPPercent: 'HPPercent',
  ATKPercent: 'ATKPercent',
  CritDMGPercent: 'CritDMGPercent',
  CritRatePercent: 'CritRatePercent',
  ElementalMastery: 'ElementalMastery',
  EnergyRechargePercent: 'EnergyRechargePercent',
  PhysicalDMGPercent: 'PhysicalDMGPercent'
};

export type WeaponSecondaryStatType = (typeof WeaponSecondaryStatType)[keyof typeof WeaponSecondaryStatType]


export const CommonAscensionMaterialGroup: {
  BoneShards: 'BoneShards',
  ChaosParts: 'ChaosParts',
  FatuiInsignias: 'FatuiInsignias',
  FatuiKnives: 'FatuiKnives',
  HilichurlArrowhead: 'HilichurlArrowhead',
  HilichurlHorns: 'HilichurlHorns',
  HilichurlMask: 'HilichurlMask',
  LeyLine: 'LeyLine',
  MistGrass: 'MistGrass',
  SamachurlScrolls: 'SamachurlScrolls',
  Slime: 'Slime',
  TreasureHoarderInsignia: 'TreasureHoarderInsignia',
  WhopperflowerNectar: 'WhopperflowerNectar'
};

export type CommonAscensionMaterialGroup = (typeof CommonAscensionMaterialGroup)[keyof typeof CommonAscensionMaterialGroup]


export const WeaponAscensionMaterialGroup: {
  Aerosiderite: 'Aerosiderite',
  BorealWolf: 'BorealWolf',
  DandelionGladiator: 'DandelionGladiator',
  Decarabian: 'Decarabian',
  Guyun: 'Guyun',
  MistVeiled: 'MistVeiled'
};

export type WeaponAscensionMaterialGroup = (typeof WeaponAscensionMaterialGroup)[keyof typeof WeaponAscensionMaterialGroup]


export const TalentLevelUpMaterialGroup: {
  Ballad: 'Ballad',
  Boreas: 'Boreas',
  Diligence: 'Diligence',
  Dvalin: 'Dvalin',
  Freedom: 'Freedom',
  Gold: 'Gold',
  Prosperity: 'Prosperity',
  Resistance: 'Resistance'
};

export type TalentLevelUpMaterialGroup = (typeof TalentLevelUpMaterialGroup)[keyof typeof TalentLevelUpMaterialGroup]


export const ConsumableType: {
  Food: 'Food',
  Potion: 'Potion'
};

export type ConsumableType = (typeof ConsumableType)[keyof typeof ConsumableType]


export const FoodType: {
  Adventurer: 'Adventurer',
  Guardian: 'Guardian',
  Sage: 'Sage',
  Warrior: 'Warrior'
};

export type FoodType = (typeof FoodType)[keyof typeof FoodType]


export const ArtifactType: {
  CircletOfLogos: 'CircletOfLogos',
  FlowerOfLife: 'FlowerOfLife',
  GobletOfEonothem: 'GobletOfEonothem',
  PlumeOfDeath: 'PlumeOfDeath',
  SandsOfEon: 'SandsOfEon'
};

export type ArtifactType = (typeof ArtifactType)[keyof typeof ArtifactType]


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js (ORM replacement)
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never
      > {
      /**
       * @private
       */
      private fetcher;
      /**
       * @private
       */
      private readonly dmmf;
      /**
       * @private
       */
      private connectionPromise?;
      /**
       * @private
       */
      private disconnectionPromise?;
      /**
       * @private
       */
      private readonly engineConfig;
      /**
       * @private
       */
      private readonly measurePerformance;

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js (ORM replacement)
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: T);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<any>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

  /**
   * Executes a raw query and returns the number of affected rows
   * @example
   * ```
   * // With parameters use prisma.executeRaw``, values will be escaped automatically
   * const result = await prisma.executeRaw`UPDATE User SET cool = ${true} WHERE id = ${1};`
   * // Or
   * const result = await prisma.executeRaw('UPDATE User SET cool = $1 WHERE id = $2 ;', true, 1)
  * ```
  * 
  * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
  */
  $executeRaw < T = any > (query: string | TemplateStringsArray | Prisma.Sql, ...values: any[]): Promise<number>;

  /**
   * Performs a raw query and returns the SELECT data
   * @example
   * ```
   * // With parameters use prisma.queryRaw``, values will be escaped automatically
   * const result = await prisma.queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'ema.il'};`
   * // Or
   * const result = await prisma.queryRaw('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'ema.il')
  * ```
  * 
  * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
  */
  $queryRaw < T = any > (query: string | TemplateStringsArray | Prisma.Sql, ...values: any[]): Promise<T>;

  /**
   * Execute queries in a transaction
   * @example
   * ```
   * const [george, bob, alice] = await prisma.transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   */
  $transaction: PromiseConstructor['all']

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate;

  /**
   * `prisma.userSecret`: Exposes CRUD operations for the **UserSecret** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSecrets
    * const userSecrets = await prisma.userSecret.findMany()
    * ```
    */
  get userSecret(): Prisma.UserSecretDelegate;

  /**
   * `prisma.character`: Exposes CRUD operations for the **Character** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Characters
    * const characters = await prisma.character.findMany()
    * ```
    */
  get character(): Prisma.CharacterDelegate;

  /**
   * `prisma.characterAscension`: Exposes CRUD operations for the **CharacterAscension** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CharacterAscensions
    * const characterAscensions = await prisma.characterAscension.findMany()
    * ```
    */
  get characterAscension(): Prisma.CharacterAscensionDelegate;

  /**
   * `prisma.characterProfile`: Exposes CRUD operations for the **CharacterProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CharacterProfiles
    * const characterProfiles = await prisma.characterProfile.findMany()
    * ```
    */
  get characterProfile(): Prisma.CharacterProfileDelegate;

  /**
   * `prisma.talent`: Exposes CRUD operations for the **Talent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Talents
    * const talents = await prisma.talent.findMany()
    * ```
    */
  get talent(): Prisma.TalentDelegate;

  /**
   * `prisma.element`: Exposes CRUD operations for the **Element** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Elements
    * const elements = await prisma.element.findMany()
    * ```
    */
  get element(): Prisma.ElementDelegate;

  /**
   * `prisma.region`: Exposes CRUD operations for the **Region** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Regions
    * const regions = await prisma.region.findMany()
    * ```
    */
  get region(): Prisma.RegionDelegate;

  /**
   * `prisma.weapon`: Exposes CRUD operations for the **Weapon** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Weapons
    * const weapons = await prisma.weapon.findMany()
    * ```
    */
  get weapon(): Prisma.WeaponDelegate;

  /**
   * `prisma.weaponAscension`: Exposes CRUD operations for the **WeaponAscension** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WeaponAscensions
    * const weaponAscensions = await prisma.weaponAscension.findMany()
    * ```
    */
  get weaponAscension(): Prisma.WeaponAscensionDelegate;

  /**
   * `prisma.commonAscensionMaterial`: Exposes CRUD operations for the **CommonAscensionMaterial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CommonAscensionMaterials
    * const commonAscensionMaterials = await prisma.commonAscensionMaterial.findMany()
    * ```
    */
  get commonAscensionMaterial(): Prisma.CommonAscensionMaterialDelegate;

  /**
   * `prisma.weaponAscensionMaterial`: Exposes CRUD operations for the **WeaponAscensionMaterial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WeaponAscensionMaterials
    * const weaponAscensionMaterials = await prisma.weaponAscensionMaterial.findMany()
    * ```
    */
  get weaponAscensionMaterial(): Prisma.WeaponAscensionMaterialDelegate;

  /**
   * `prisma.weaponEnhancementMaterial`: Exposes CRUD operations for the **WeaponEnhancementMaterial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WeaponEnhancementMaterials
    * const weaponEnhancementMaterials = await prisma.weaponEnhancementMaterial.findMany()
    * ```
    */
  get weaponEnhancementMaterial(): Prisma.WeaponEnhancementMaterialDelegate;

  /**
   * `prisma.characterAscensionMaterial`: Exposes CRUD operations for the **CharacterAscensionMaterial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CharacterAscensionMaterials
    * const characterAscensionMaterials = await prisma.characterAscensionMaterial.findMany()
    * ```
    */
  get characterAscensionMaterial(): Prisma.CharacterAscensionMaterialDelegate;

  /**
   * `prisma.talentLevelUpMaterial`: Exposes CRUD operations for the **TalentLevelUpMaterial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TalentLevelUpMaterials
    * const talentLevelUpMaterials = await prisma.talentLevelUpMaterial.findMany()
    * ```
    */
  get talentLevelUpMaterial(): Prisma.TalentLevelUpMaterialDelegate;

  /**
   * `prisma.craftingMaterial`: Exposes CRUD operations for the **CraftingMaterial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CraftingMaterials
    * const craftingMaterials = await prisma.craftingMaterial.findMany()
    * ```
    */
  get craftingMaterial(): Prisma.CraftingMaterialDelegate;

  /**
   * `prisma.cookingMaterial`: Exposes CRUD operations for the **CookingMaterial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CookingMaterials
    * const cookingMaterials = await prisma.cookingMaterial.findMany()
    * ```
    */
  get cookingMaterial(): Prisma.CookingMaterialDelegate;

  /**
   * `prisma.commonMaterial`: Exposes CRUD operations for the **CommonMaterial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CommonMaterials
    * const commonMaterials = await prisma.commonMaterial.findMany()
    * ```
    */
  get commonMaterial(): Prisma.CommonMaterialDelegate;

  /**
   * `prisma.domain`: Exposes CRUD operations for the **Domain** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Domains
    * const domains = await prisma.domain.findMany()
    * ```
    */
  get domain(): Prisma.DomainDelegate;

  /**
   * `prisma.consumeable`: Exposes CRUD operations for the **Consumeable** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Consumeables
    * const consumeables = await prisma.consumeable.findMany()
    * ```
    */
  get consumeable(): Prisma.ConsumeableDelegate;

  /**
   * `prisma.consumeableRecipe`: Exposes CRUD operations for the **ConsumeableRecipe** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConsumeableRecipes
    * const consumeableRecipes = await prisma.consumeableRecipe.findMany()
    * ```
    */
  get consumeableRecipe(): Prisma.ConsumeableRecipeDelegate;

  /**
   * `prisma.processRecipe`: Exposes CRUD operations for the **ProcessRecipe** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProcessRecipes
    * const processRecipes = await prisma.processRecipe.findMany()
    * ```
    */
  get processRecipe(): Prisma.ProcessRecipeDelegate;

  /**
   * `prisma.forgeRecipe`: Exposes CRUD operations for the **ForgeRecipe** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ForgeRecipes
    * const forgeRecipes = await prisma.forgeRecipe.findMany()
    * ```
    */
  get forgeRecipe(): Prisma.ForgeRecipeDelegate;

  /**
   * `prisma.artifactSet`: Exposes CRUD operations for the **ArtifactSet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ArtifactSets
    * const artifactSets = await prisma.artifactSet.findMany()
    * ```
    */
  get artifactSet(): Prisma.ArtifactSetDelegate;

  /**
   * `prisma.artifact`: Exposes CRUD operations for the **Artifact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Artifacts
    * const artifacts = await prisma.artifact.findMany()
    * ```
    */
  get artifact(): Prisma.ArtifactDelegate;

  /**
   * `prisma.gadget`: Exposes CRUD operations for the **Gadget** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gadgets
    * const gadgets = await prisma.gadget.findMany()
    * ```
    */
  get gadget(): Prisma.GadgetDelegate;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  /**
   * Prisma Client JS version: 2.14.0
   * Query Engine version: 5d491261d382a2a5ffdc71de17072b0e409f1cc1
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}
 
  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}
 
  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | null | JsonObject | JsonArray

  /**
   * Same as JsonObject, but allows undefined
   */
  export type InputJsonObject = {[Key in string]?: JsonValue}
 
  export interface InputJsonArray extends Array<JsonValue> {}
 
  export type InputJsonValue = undefined |  string | number | boolean | null | InputJsonObject | InputJsonArray
   type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = {
    [key in keyof T]: T[key] extends false | undefined | null ? never : key
  }[keyof T]

  export type TrueKeys<T> = TruthyKeys<Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Buffer
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  export type Union = any

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, 'avg' | 'sum' | 'count' | 'min' | 'max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Pick<T, TupleToUnion<K>>

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    User: 'User',
    UserSecret: 'UserSecret',
    Character: 'Character',
    CharacterAscension: 'CharacterAscension',
    CharacterProfile: 'CharacterProfile',
    Talent: 'Talent',
    Element: 'Element',
    Region: 'Region',
    Weapon: 'Weapon',
    WeaponAscension: 'WeaponAscension',
    CommonAscensionMaterial: 'CommonAscensionMaterial',
    WeaponAscensionMaterial: 'WeaponAscensionMaterial',
    WeaponEnhancementMaterial: 'WeaponEnhancementMaterial',
    CharacterAscensionMaterial: 'CharacterAscensionMaterial',
    TalentLevelUpMaterial: 'TalentLevelUpMaterial',
    CraftingMaterial: 'CraftingMaterial',
    CookingMaterial: 'CookingMaterial',
    CommonMaterial: 'CommonMaterial',
    Domain: 'Domain',
    Consumeable: 'Consumeable',
    ConsumeableRecipe: 'ConsumeableRecipe',
    ProcessRecipe: 'ProcessRecipe',
    ForgeRecipe: 'ForgeRecipe',
    ArtifactSet: 'ArtifactSet',
    Artifact: 'Artifact',
    Gadget: 'Gadget'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your prisma.schema file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'

  /**
   * These options are being passed in to the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined; 
  export type Datasource = {
    url?: string
  }


  /**
   * Model User
   */


  export type AggregateUser = {
    count: number | null
    min: UserMinAggregateOutputType | null
    max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    email: string | null
    username: string | null
    slimeColor: string | null
    role: Role | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    email: string | null
    username: string | null
    slimeColor: string | null
    role: Role | null
  }

  export type UserCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    email: number | null
    username: number | null
    slimeColor: number | null
    role: number | null
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    email?: true
    username?: true
    slimeColor?: true
    role?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    email?: true
    username?: true
    slimeColor?: true
    role?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    email?: true
    username?: true
    slimeColor?: true
    role?: true
    _all?: true
  }

  export type AggregateUserArgs = {
    /**
     * Filter which User to aggregate.
    **/
    where?: UserWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Users to fetch.
    **/
    orderBy?: Enumerable<UserOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends AggregateUserArgs> = {
    [P in keyof T]: P extends 'count' ? number : never
  }



    



  export type UserSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    email?: boolean
    username?: boolean
    slimeColor?: boolean
    role?: boolean
    userSecret?: boolean | UserSecretArgs
  }

  export type UserInclude = {
    userSecret?: boolean | UserSecretArgs
  }

  export type UserGetPayload<
    S extends boolean | null | undefined | UserArgs,
    U = keyof S
      > = S extends true
        ? User
    : S extends undefined
    ? never
    : S extends UserArgs | FindManyUserArgs
    ?'include' extends U
    ? User  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'userSecret'
        ? UserSecretGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof User ?User [P]
  : 
          P extends 'userSecret'
        ? UserSecretGetPayload<S['select'][P]> | null : never
  } 
    : User
  : User


  export interface UserDelegate {
    /**
     * Find zero or one User that matches the filter.
     * @param {FindUniqueUserArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueUserArgs>(
      args: Subset<T, FindUniqueUserArgs>
    ): CheckSelect<T, Prisma__UserClient<User | null>, Prisma__UserClient<UserGetPayload<T> | null>>

    /**
     * Find the first User that matches the filter.
     * @param {FindFirstUserArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstUserArgs>(
      args?: Subset<T, FindFirstUserArgs>
    ): CheckSelect<T, Prisma__UserClient<User | null>, Prisma__UserClient<UserGetPayload<T> | null>>

    /**
     * Find zero or more Users that matches the filter.
     * @param {FindManyUserArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyUserArgs>(
      args?: Subset<T, FindManyUserArgs>
    ): CheckSelect<T, Promise<Array<User>>, Promise<Array<UserGetPayload<T>>>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends UserCreateArgs>(
      args: Subset<T, UserCreateArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends UserDeleteArgs>(
      args: Subset<T, UserDeleteArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserUpdateArgs>(
      args: Subset<T, UserUpdateArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserDeleteManyArgs>(
      args?: Subset<T, UserDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more Users.
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserUpdateManyArgs>(
      args: Subset<T, UserUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends UserUpsertArgs>(
      args: Subset<T, UserUpsertArgs>
    ): CheckSelect<T, Prisma__UserClient<User>, Prisma__UserClient<UserGetPayload<T>>>

    /**
     * Find zero or one User that matches the filter.
     * @param {FindUniqueUserArgs} args - Arguments to find a User
     * @deprecated This will be deprecated please use prisma.user.findUnique
     * @example
     * // Get one User
     * const user = await prisma.user.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueUserArgs>(
      args: Subset<T, FindUniqueUserArgs>
    ): CheckSelect<T, Prisma__UserClient<User | null>, Prisma__UserClient<UserGetPayload<T> | null>>

    /**
     * Count the number of Users.
     * @param {FindManyUserArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyUserArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a User.
     * @param {AggregateUserArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateUserArgs>(args: Subset<T, AggregateUserArgs>): Promise<GetUserAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    userSecret<T extends UserSecretArgs = {}>(args?: Subset<T, UserSecretArgs>): CheckSelect<T, Prisma__UserSecretClient<UserSecret | null>, Prisma__UserSecretClient<UserSecretGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * User findUnique
   */
  export type FindUniqueUserArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * Filter, which User to fetch.
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User findFirst
   */
  export type FindFirstUserArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * Filter, which User to fetch.
    **/
    where?: UserWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Users to fetch.
    **/
    orderBy?: Enumerable<UserOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of Users.
    **/
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * User findMany
   */
  export type FindManyUserArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * Filter, which Users to fetch.
    **/
    where?: UserWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Users to fetch.
    **/
    orderBy?: Enumerable<UserOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
    **/
    skip?: number
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * User create
   */
  export type UserCreateArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * The data needed to create a User.
    **/
    data: XOR<UserUncheckedCreateInput, UserCreateInput>
  }


  /**
   * User update
   */
  export type UserUpdateArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * The data needed to update a User.
    **/
    data: XOR<UserUncheckedUpdateInput, UserUpdateInput>
    /**
     * Choose, which User to update.
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User updateMany
   */
  export type UserUpdateManyArgs = {
    data: XOR<UserUncheckedUpdateManyInput, UserUpdateManyMutationInput>
    where?: UserWhereInput
  }


  /**
   * User upsert
   */
  export type UserUpsertArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * The filter to search for the User to update in case it exists.
    **/
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
    **/
    create: XOR<UserUncheckedCreateInput, UserCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<UserUncheckedUpdateInput, UserUpdateInput>
  }


  /**
   * User delete
   */
  export type UserDeleteArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
    /**
     * Filter which User to delete.
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs = {
    where?: UserWhereInput
  }


  /**
   * User without action
   */
  export type UserArgs = {
    /**
     * Select specific fields to fetch from the User
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserInclude | null
  }



  /**
   * Model UserSecret
   */


  export type AggregateUserSecret = {
    count: number | null
    avg: UserSecretAvgAggregateOutputType | null
    sum: UserSecretSumAggregateOutputType | null
    min: UserSecretMinAggregateOutputType | null
    max: UserSecretMaxAggregateOutputType | null
  }

  export type UserSecretAvgAggregateOutputType = {
    passwordAttempts: number
    resetPasswordAttempts: number
  }

  export type UserSecretSumAggregateOutputType = {
    passwordAttempts: number
    resetPasswordAttempts: number
  }

  export type UserSecretMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    token: string | null
    activated: boolean | null
    activationToken: string | null
    passwordAttempts: number
    password: string | null
    firstFailedPasswordAttempt: Date | null
    resetPasswordToken: string | null
    resetPasswordTokenGenerated: Date | null
    resetPasswordAttempts: number
    firstFailedResetPasswordAttempt: Date | null
    userId: string | null
  }

  export type UserSecretMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    token: string | null
    activated: boolean | null
    activationToken: string | null
    passwordAttempts: number
    password: string | null
    firstFailedPasswordAttempt: Date | null
    resetPasswordToken: string | null
    resetPasswordTokenGenerated: Date | null
    resetPasswordAttempts: number
    firstFailedResetPasswordAttempt: Date | null
    userId: string | null
  }

  export type UserSecretCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    token: number | null
    activated: number | null
    activationToken: number | null
    passwordAttempts: number
    password: number | null
    firstFailedPasswordAttempt: number | null
    resetPasswordToken: number | null
    resetPasswordTokenGenerated: number | null
    resetPasswordAttempts: number
    firstFailedResetPasswordAttempt: number | null
    userId: number | null
    _all: number
  }


  export type UserSecretAvgAggregateInputType = {
    passwordAttempts?: true
    resetPasswordAttempts?: true
  }

  export type UserSecretSumAggregateInputType = {
    passwordAttempts?: true
    resetPasswordAttempts?: true
  }

  export type UserSecretMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    token?: true
    activated?: true
    activationToken?: true
    passwordAttempts?: true
    password?: true
    firstFailedPasswordAttempt?: true
    resetPasswordToken?: true
    resetPasswordTokenGenerated?: true
    resetPasswordAttempts?: true
    firstFailedResetPasswordAttempt?: true
    userId?: true
  }

  export type UserSecretMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    token?: true
    activated?: true
    activationToken?: true
    passwordAttempts?: true
    password?: true
    firstFailedPasswordAttempt?: true
    resetPasswordToken?: true
    resetPasswordTokenGenerated?: true
    resetPasswordAttempts?: true
    firstFailedResetPasswordAttempt?: true
    userId?: true
  }

  export type UserSecretCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    token?: true
    activated?: true
    activationToken?: true
    passwordAttempts?: true
    password?: true
    firstFailedPasswordAttempt?: true
    resetPasswordToken?: true
    resetPasswordTokenGenerated?: true
    resetPasswordAttempts?: true
    firstFailedResetPasswordAttempt?: true
    userId?: true
    _all?: true
  }

  export type AggregateUserSecretArgs = {
    /**
     * Filter which UserSecret to aggregate.
    **/
    where?: UserSecretWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of UserSecrets to fetch.
    **/
    orderBy?: Enumerable<UserSecretOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: UserSecretWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSecrets from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSecrets.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSecrets
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: UserSecretAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: UserSecretSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: UserSecretMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: UserSecretMaxAggregateInputType
  }

  export type GetUserSecretAggregateType<T extends AggregateUserSecretArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetUserSecretAggregateScalarType<T[P]>
  }

  export type GetUserSecretAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof UserSecretAvgAggregateOutputType ? UserSecretAvgAggregateOutputType[P] : never
  }

    



  export type UserSecretSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    token?: boolean
    activated?: boolean
    activationToken?: boolean
    passwordAttempts?: boolean
    password?: boolean
    firstFailedPasswordAttempt?: boolean
    resetPasswordToken?: boolean
    resetPasswordTokenGenerated?: boolean
    resetPasswordAttempts?: boolean
    firstFailedResetPasswordAttempt?: boolean
    user?: boolean | UserArgs
    userId?: boolean
  }

  export type UserSecretInclude = {
    user?: boolean | UserArgs
  }

  export type UserSecretGetPayload<
    S extends boolean | null | undefined | UserSecretArgs,
    U = keyof S
      > = S extends true
        ? UserSecret
    : S extends undefined
    ? never
    : S extends UserSecretArgs | FindManyUserSecretArgs
    ?'include' extends U
    ? UserSecret  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'user'
        ? UserGetPayload<S['include'][P]> : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof UserSecret ?UserSecret [P]
  : 
          P extends 'user'
        ? UserGetPayload<S['select'][P]> : never
  } 
    : UserSecret
  : UserSecret


  export interface UserSecretDelegate {
    /**
     * Find zero or one UserSecret that matches the filter.
     * @param {FindUniqueUserSecretArgs} args - Arguments to find a UserSecret
     * @example
     * // Get one UserSecret
     * const userSecret = await prisma.userSecret.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueUserSecretArgs>(
      args: Subset<T, FindUniqueUserSecretArgs>
    ): CheckSelect<T, Prisma__UserSecretClient<UserSecret | null>, Prisma__UserSecretClient<UserSecretGetPayload<T> | null>>

    /**
     * Find the first UserSecret that matches the filter.
     * @param {FindFirstUserSecretArgs} args - Arguments to find a UserSecret
     * @example
     * // Get one UserSecret
     * const userSecret = await prisma.userSecret.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstUserSecretArgs>(
      args?: Subset<T, FindFirstUserSecretArgs>
    ): CheckSelect<T, Prisma__UserSecretClient<UserSecret | null>, Prisma__UserSecretClient<UserSecretGetPayload<T> | null>>

    /**
     * Find zero or more UserSecrets that matches the filter.
     * @param {FindManyUserSecretArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSecrets
     * const userSecrets = await prisma.userSecret.findMany()
     * 
     * // Get first 10 UserSecrets
     * const userSecrets = await prisma.userSecret.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSecretWithIdOnly = await prisma.userSecret.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyUserSecretArgs>(
      args?: Subset<T, FindManyUserSecretArgs>
    ): CheckSelect<T, Promise<Array<UserSecret>>, Promise<Array<UserSecretGetPayload<T>>>>

    /**
     * Create a UserSecret.
     * @param {UserSecretCreateArgs} args - Arguments to create a UserSecret.
     * @example
     * // Create one UserSecret
     * const UserSecret = await prisma.userSecret.create({
     *   data: {
     *     // ... data to create a UserSecret
     *   }
     * })
     * 
    **/
    create<T extends UserSecretCreateArgs>(
      args: Subset<T, UserSecretCreateArgs>
    ): CheckSelect<T, Prisma__UserSecretClient<UserSecret>, Prisma__UserSecretClient<UserSecretGetPayload<T>>>

    /**
     * Delete a UserSecret.
     * @param {UserSecretDeleteArgs} args - Arguments to delete one UserSecret.
     * @example
     * // Delete one UserSecret
     * const UserSecret = await prisma.userSecret.delete({
     *   where: {
     *     // ... filter to delete one UserSecret
     *   }
     * })
     * 
    **/
    delete<T extends UserSecretDeleteArgs>(
      args: Subset<T, UserSecretDeleteArgs>
    ): CheckSelect<T, Prisma__UserSecretClient<UserSecret>, Prisma__UserSecretClient<UserSecretGetPayload<T>>>

    /**
     * Update one UserSecret.
     * @param {UserSecretUpdateArgs} args - Arguments to update one UserSecret.
     * @example
     * // Update one UserSecret
     * const userSecret = await prisma.userSecret.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserSecretUpdateArgs>(
      args: Subset<T, UserSecretUpdateArgs>
    ): CheckSelect<T, Prisma__UserSecretClient<UserSecret>, Prisma__UserSecretClient<UserSecretGetPayload<T>>>

    /**
     * Delete zero or more UserSecrets.
     * @param {UserSecretDeleteManyArgs} args - Arguments to filter UserSecrets to delete.
     * @example
     * // Delete a few UserSecrets
     * const { count } = await prisma.userSecret.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserSecretDeleteManyArgs>(
      args?: Subset<T, UserSecretDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more UserSecrets.
     * @param {UserSecretUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSecrets
     * const userSecret = await prisma.userSecret.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserSecretUpdateManyArgs>(
      args: Subset<T, UserSecretUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one UserSecret.
     * @param {UserSecretUpsertArgs} args - Arguments to update or create a UserSecret.
     * @example
     * // Update or create a UserSecret
     * const userSecret = await prisma.userSecret.upsert({
     *   create: {
     *     // ... data to create a UserSecret
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSecret we want to update
     *   }
     * })
    **/
    upsert<T extends UserSecretUpsertArgs>(
      args: Subset<T, UserSecretUpsertArgs>
    ): CheckSelect<T, Prisma__UserSecretClient<UserSecret>, Prisma__UserSecretClient<UserSecretGetPayload<T>>>

    /**
     * Find zero or one UserSecret that matches the filter.
     * @param {FindUniqueUserSecretArgs} args - Arguments to find a UserSecret
     * @deprecated This will be deprecated please use prisma.userSecret.findUnique
     * @example
     * // Get one UserSecret
     * const userSecret = await prisma.userSecret.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueUserSecretArgs>(
      args: Subset<T, FindUniqueUserSecretArgs>
    ): CheckSelect<T, Prisma__UserSecretClient<UserSecret | null>, Prisma__UserSecretClient<UserSecretGetPayload<T> | null>>

    /**
     * Count the number of UserSecrets.
     * @param {FindManyUserSecretArgs} args - Arguments to filter UserSecrets to count.
     * @example
     * // Count the number of UserSecrets
     * const count = await prisma.userSecret.count({
     *   where: {
     *     // ... the filter for the UserSecrets we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyUserSecretArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a UserSecret.
     * @param {AggregateUserSecretArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateUserSecretArgs>(args: Subset<T, AggregateUserSecretArgs>): Promise<GetUserSecretAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSecret.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserSecretClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user<T extends UserArgs = {}>(args?: Subset<T, UserArgs>): CheckSelect<T, Prisma__UserClient<User | null>, Prisma__UserClient<UserGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * UserSecret findUnique
   */
  export type FindUniqueUserSecretArgs = {
    /**
     * Select specific fields to fetch from the UserSecret
    **/
    select?: UserSecretSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserSecretInclude | null
    /**
     * Filter, which UserSecret to fetch.
    **/
    where: UserSecretWhereUniqueInput
  }


  /**
   * UserSecret findFirst
   */
  export type FindFirstUserSecretArgs = {
    /**
     * Select specific fields to fetch from the UserSecret
    **/
    select?: UserSecretSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserSecretInclude | null
    /**
     * Filter, which UserSecret to fetch.
    **/
    where?: UserSecretWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of UserSecrets to fetch.
    **/
    orderBy?: Enumerable<UserSecretOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSecrets.
    **/
    cursor?: UserSecretWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSecrets from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSecrets.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of UserSecrets.
    **/
    distinct?: Enumerable<UserSecretScalarFieldEnum>
  }


  /**
   * UserSecret findMany
   */
  export type FindManyUserSecretArgs = {
    /**
     * Select specific fields to fetch from the UserSecret
    **/
    select?: UserSecretSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserSecretInclude | null
    /**
     * Filter, which UserSecrets to fetch.
    **/
    where?: UserSecretWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of UserSecrets to fetch.
    **/
    orderBy?: Enumerable<UserSecretOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSecrets.
    **/
    cursor?: UserSecretWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSecrets from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSecrets.
    **/
    skip?: number
    distinct?: Enumerable<UserSecretScalarFieldEnum>
  }


  /**
   * UserSecret create
   */
  export type UserSecretCreateArgs = {
    /**
     * Select specific fields to fetch from the UserSecret
    **/
    select?: UserSecretSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserSecretInclude | null
    /**
     * The data needed to create a UserSecret.
    **/
    data: XOR<UserSecretUncheckedCreateInput, UserSecretCreateInput>
  }


  /**
   * UserSecret update
   */
  export type UserSecretUpdateArgs = {
    /**
     * Select specific fields to fetch from the UserSecret
    **/
    select?: UserSecretSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserSecretInclude | null
    /**
     * The data needed to update a UserSecret.
    **/
    data: XOR<UserSecretUncheckedUpdateInput, UserSecretUpdateInput>
    /**
     * Choose, which UserSecret to update.
    **/
    where: UserSecretWhereUniqueInput
  }


  /**
   * UserSecret updateMany
   */
  export type UserSecretUpdateManyArgs = {
    data: XOR<UserSecretUncheckedUpdateManyInput, UserSecretUpdateManyMutationInput>
    where?: UserSecretWhereInput
  }


  /**
   * UserSecret upsert
   */
  export type UserSecretUpsertArgs = {
    /**
     * Select specific fields to fetch from the UserSecret
    **/
    select?: UserSecretSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserSecretInclude | null
    /**
     * The filter to search for the UserSecret to update in case it exists.
    **/
    where: UserSecretWhereUniqueInput
    /**
     * In case the UserSecret found by the `where` argument doesn't exist, create a new UserSecret with this data.
    **/
    create: XOR<UserSecretUncheckedCreateInput, UserSecretCreateInput>
    /**
     * In case the UserSecret was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<UserSecretUncheckedUpdateInput, UserSecretUpdateInput>
  }


  /**
   * UserSecret delete
   */
  export type UserSecretDeleteArgs = {
    /**
     * Select specific fields to fetch from the UserSecret
    **/
    select?: UserSecretSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserSecretInclude | null
    /**
     * Filter which UserSecret to delete.
    **/
    where: UserSecretWhereUniqueInput
  }


  /**
   * UserSecret deleteMany
   */
  export type UserSecretDeleteManyArgs = {
    where?: UserSecretWhereInput
  }


  /**
   * UserSecret without action
   */
  export type UserSecretArgs = {
    /**
     * Select specific fields to fetch from the UserSecret
    **/
    select?: UserSecretSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: UserSecretInclude | null
  }



  /**
   * Model Character
   */


  export type AggregateCharacter = {
    count: number | null
    avg: CharacterAvgAggregateOutputType | null
    sum: CharacterSumAggregateOutputType | null
    min: CharacterMinAggregateOutputType | null
    max: CharacterMaxAggregateOutputType | null
  }

  export type CharacterAvgAggregateOutputType = {
    rarity: number
  }

  export type CharacterSumAggregateOutputType = {
    rarity: number
  }

  export type CharacterMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    constellations: JsonValue | null
    icon: string | null
    overview: string | null
    rarity: number
    stats: JsonValue | null
    characterProfileId: string | null
    weapon: WeaponType | null
  }

  export type CharacterMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    constellations: JsonValue | null
    icon: string | null
    overview: string | null
    rarity: number
    stats: JsonValue | null
    characterProfileId: string | null
    weapon: WeaponType | null
  }

  export type CharacterCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    constellations: number | null
    icon: number | null
    overview: number | null
    rarity: number
    stats: number | null
    characterProfileId: number | null
    weapon: number | null
    _all: number
  }


  export type CharacterAvgAggregateInputType = {
    rarity?: true
  }

  export type CharacterSumAggregateInputType = {
    rarity?: true
  }

  export type CharacterMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    constellations?: true
    icon?: true
    overview?: true
    rarity?: true
    stats?: true
    characterProfileId?: true
    weapon?: true
  }

  export type CharacterMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    constellations?: true
    icon?: true
    overview?: true
    rarity?: true
    stats?: true
    characterProfileId?: true
    weapon?: true
  }

  export type CharacterCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    constellations?: true
    icon?: true
    overview?: true
    rarity?: true
    stats?: true
    characterProfileId?: true
    weapon?: true
    _all?: true
  }

  export type AggregateCharacterArgs = {
    /**
     * Filter which Character to aggregate.
    **/
    where?: CharacterWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Characters to fetch.
    **/
    orderBy?: Enumerable<CharacterOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: CharacterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Characters from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Characters.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Characters
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: CharacterAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: CharacterSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: CharacterMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: CharacterMaxAggregateInputType
  }

  export type GetCharacterAggregateType<T extends AggregateCharacterArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetCharacterAggregateScalarType<T[P]>
  }

  export type GetCharacterAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof CharacterAvgAggregateOutputType ? CharacterAvgAggregateOutputType[P] : never
  }

    



  export type CharacterSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    constellations?: boolean
    icon?: boolean
    overview?: boolean
    rarity?: boolean
    stats?: boolean
    ascensions?: boolean | FindManyCharacterAscensionArgs
    characterProfile?: boolean | CharacterProfileArgs
    characterProfileId?: boolean
    elements?: boolean | FindManyElementArgs
    talents?: boolean | FindManyTalentArgs
    weapon?: boolean
  }

  export type CharacterInclude = {
    ascensions?: boolean | FindManyCharacterAscensionArgs
    characterProfile?: boolean | CharacterProfileArgs
    elements?: boolean | FindManyElementArgs
    talents?: boolean | FindManyTalentArgs
  }

  export type CharacterGetPayload<
    S extends boolean | null | undefined | CharacterArgs,
    U = keyof S
      > = S extends true
        ? Character
    : S extends undefined
    ? never
    : S extends CharacterArgs | FindManyCharacterArgs
    ?'include' extends U
    ? Character  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'ascensions'
        ? Array < CharacterAscensionGetPayload<S['include'][P]>>  :
        P extends 'characterProfile'
        ? CharacterProfileGetPayload<S['include'][P]> | null :
        P extends 'elements'
        ? Array < ElementGetPayload<S['include'][P]>>  :
        P extends 'talents'
        ? Array < TalentGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Character ?Character [P]
  : 
          P extends 'ascensions'
        ? Array < CharacterAscensionGetPayload<S['select'][P]>>  :
        P extends 'characterProfile'
        ? CharacterProfileGetPayload<S['select'][P]> | null :
        P extends 'elements'
        ? Array < ElementGetPayload<S['select'][P]>>  :
        P extends 'talents'
        ? Array < TalentGetPayload<S['select'][P]>>  : never
  } 
    : Character
  : Character


  export interface CharacterDelegate {
    /**
     * Find zero or one Character that matches the filter.
     * @param {FindUniqueCharacterArgs} args - Arguments to find a Character
     * @example
     * // Get one Character
     * const character = await prisma.character.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueCharacterArgs>(
      args: Subset<T, FindUniqueCharacterArgs>
    ): CheckSelect<T, Prisma__CharacterClient<Character | null>, Prisma__CharacterClient<CharacterGetPayload<T> | null>>

    /**
     * Find the first Character that matches the filter.
     * @param {FindFirstCharacterArgs} args - Arguments to find a Character
     * @example
     * // Get one Character
     * const character = await prisma.character.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstCharacterArgs>(
      args?: Subset<T, FindFirstCharacterArgs>
    ): CheckSelect<T, Prisma__CharacterClient<Character | null>, Prisma__CharacterClient<CharacterGetPayload<T> | null>>

    /**
     * Find zero or more Characters that matches the filter.
     * @param {FindManyCharacterArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Characters
     * const characters = await prisma.character.findMany()
     * 
     * // Get first 10 Characters
     * const characters = await prisma.character.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const characterWithIdOnly = await prisma.character.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyCharacterArgs>(
      args?: Subset<T, FindManyCharacterArgs>
    ): CheckSelect<T, Promise<Array<Character>>, Promise<Array<CharacterGetPayload<T>>>>

    /**
     * Create a Character.
     * @param {CharacterCreateArgs} args - Arguments to create a Character.
     * @example
     * // Create one Character
     * const Character = await prisma.character.create({
     *   data: {
     *     // ... data to create a Character
     *   }
     * })
     * 
    **/
    create<T extends CharacterCreateArgs>(
      args: Subset<T, CharacterCreateArgs>
    ): CheckSelect<T, Prisma__CharacterClient<Character>, Prisma__CharacterClient<CharacterGetPayload<T>>>

    /**
     * Delete a Character.
     * @param {CharacterDeleteArgs} args - Arguments to delete one Character.
     * @example
     * // Delete one Character
     * const Character = await prisma.character.delete({
     *   where: {
     *     // ... filter to delete one Character
     *   }
     * })
     * 
    **/
    delete<T extends CharacterDeleteArgs>(
      args: Subset<T, CharacterDeleteArgs>
    ): CheckSelect<T, Prisma__CharacterClient<Character>, Prisma__CharacterClient<CharacterGetPayload<T>>>

    /**
     * Update one Character.
     * @param {CharacterUpdateArgs} args - Arguments to update one Character.
     * @example
     * // Update one Character
     * const character = await prisma.character.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CharacterUpdateArgs>(
      args: Subset<T, CharacterUpdateArgs>
    ): CheckSelect<T, Prisma__CharacterClient<Character>, Prisma__CharacterClient<CharacterGetPayload<T>>>

    /**
     * Delete zero or more Characters.
     * @param {CharacterDeleteManyArgs} args - Arguments to filter Characters to delete.
     * @example
     * // Delete a few Characters
     * const { count } = await prisma.character.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CharacterDeleteManyArgs>(
      args?: Subset<T, CharacterDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more Characters.
     * @param {CharacterUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Characters
     * const character = await prisma.character.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CharacterUpdateManyArgs>(
      args: Subset<T, CharacterUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one Character.
     * @param {CharacterUpsertArgs} args - Arguments to update or create a Character.
     * @example
     * // Update or create a Character
     * const character = await prisma.character.upsert({
     *   create: {
     *     // ... data to create a Character
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Character we want to update
     *   }
     * })
    **/
    upsert<T extends CharacterUpsertArgs>(
      args: Subset<T, CharacterUpsertArgs>
    ): CheckSelect<T, Prisma__CharacterClient<Character>, Prisma__CharacterClient<CharacterGetPayload<T>>>

    /**
     * Find zero or one Character that matches the filter.
     * @param {FindUniqueCharacterArgs} args - Arguments to find a Character
     * @deprecated This will be deprecated please use prisma.character.findUnique
     * @example
     * // Get one Character
     * const character = await prisma.character.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueCharacterArgs>(
      args: Subset<T, FindUniqueCharacterArgs>
    ): CheckSelect<T, Prisma__CharacterClient<Character | null>, Prisma__CharacterClient<CharacterGetPayload<T> | null>>

    /**
     * Count the number of Characters.
     * @param {FindManyCharacterArgs} args - Arguments to filter Characters to count.
     * @example
     * // Count the number of Characters
     * const count = await prisma.character.count({
     *   where: {
     *     // ... the filter for the Characters we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyCharacterArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a Character.
     * @param {AggregateCharacterArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateCharacterArgs>(args: Subset<T, AggregateCharacterArgs>): Promise<GetCharacterAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Character.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CharacterClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    ascensions<T extends FindManyCharacterAscensionArgs = {}>(args?: Subset<T, FindManyCharacterAscensionArgs>): CheckSelect<T, Promise<Array<CharacterAscension>>, Promise<Array<CharacterAscensionGetPayload<T>>>>;

    characterProfile<T extends CharacterProfileArgs = {}>(args?: Subset<T, CharacterProfileArgs>): CheckSelect<T, Prisma__CharacterProfileClient<CharacterProfile | null>, Prisma__CharacterProfileClient<CharacterProfileGetPayload<T> | null>>;

    elements<T extends FindManyElementArgs = {}>(args?: Subset<T, FindManyElementArgs>): CheckSelect<T, Promise<Array<Element>>, Promise<Array<ElementGetPayload<T>>>>;

    talents<T extends FindManyTalentArgs = {}>(args?: Subset<T, FindManyTalentArgs>): CheckSelect<T, Promise<Array<Talent>>, Promise<Array<TalentGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Character findUnique
   */
  export type FindUniqueCharacterArgs = {
    /**
     * Select specific fields to fetch from the Character
    **/
    select?: CharacterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterInclude | null
    /**
     * Filter, which Character to fetch.
    **/
    where: CharacterWhereUniqueInput
  }


  /**
   * Character findFirst
   */
  export type FindFirstCharacterArgs = {
    /**
     * Select specific fields to fetch from the Character
    **/
    select?: CharacterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterInclude | null
    /**
     * Filter, which Character to fetch.
    **/
    where?: CharacterWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Characters to fetch.
    **/
    orderBy?: Enumerable<CharacterOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Characters.
    **/
    cursor?: CharacterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Characters from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Characters.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of Characters.
    **/
    distinct?: Enumerable<CharacterScalarFieldEnum>
  }


  /**
   * Character findMany
   */
  export type FindManyCharacterArgs = {
    /**
     * Select specific fields to fetch from the Character
    **/
    select?: CharacterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterInclude | null
    /**
     * Filter, which Characters to fetch.
    **/
    where?: CharacterWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Characters to fetch.
    **/
    orderBy?: Enumerable<CharacterOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Characters.
    **/
    cursor?: CharacterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Characters from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Characters.
    **/
    skip?: number
    distinct?: Enumerable<CharacterScalarFieldEnum>
  }


  /**
   * Character create
   */
  export type CharacterCreateArgs = {
    /**
     * Select specific fields to fetch from the Character
    **/
    select?: CharacterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterInclude | null
    /**
     * The data needed to create a Character.
    **/
    data: XOR<CharacterUncheckedCreateInput, CharacterCreateInput>
  }


  /**
   * Character update
   */
  export type CharacterUpdateArgs = {
    /**
     * Select specific fields to fetch from the Character
    **/
    select?: CharacterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterInclude | null
    /**
     * The data needed to update a Character.
    **/
    data: XOR<CharacterUncheckedUpdateInput, CharacterUpdateInput>
    /**
     * Choose, which Character to update.
    **/
    where: CharacterWhereUniqueInput
  }


  /**
   * Character updateMany
   */
  export type CharacterUpdateManyArgs = {
    data: XOR<CharacterUncheckedUpdateManyInput, CharacterUpdateManyMutationInput>
    where?: CharacterWhereInput
  }


  /**
   * Character upsert
   */
  export type CharacterUpsertArgs = {
    /**
     * Select specific fields to fetch from the Character
    **/
    select?: CharacterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterInclude | null
    /**
     * The filter to search for the Character to update in case it exists.
    **/
    where: CharacterWhereUniqueInput
    /**
     * In case the Character found by the `where` argument doesn't exist, create a new Character with this data.
    **/
    create: XOR<CharacterUncheckedCreateInput, CharacterCreateInput>
    /**
     * In case the Character was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<CharacterUncheckedUpdateInput, CharacterUpdateInput>
  }


  /**
   * Character delete
   */
  export type CharacterDeleteArgs = {
    /**
     * Select specific fields to fetch from the Character
    **/
    select?: CharacterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterInclude | null
    /**
     * Filter which Character to delete.
    **/
    where: CharacterWhereUniqueInput
  }


  /**
   * Character deleteMany
   */
  export type CharacterDeleteManyArgs = {
    where?: CharacterWhereInput
  }


  /**
   * Character without action
   */
  export type CharacterArgs = {
    /**
     * Select specific fields to fetch from the Character
    **/
    select?: CharacterSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterInclude | null
  }



  /**
   * Model CharacterAscension
   */


  export type AggregateCharacterAscension = {
    count: number | null
    avg: CharacterAscensionAvgAggregateOutputType | null
    sum: CharacterAscensionSumAggregateOutputType | null
    min: CharacterAscensionMinAggregateOutputType | null
    max: CharacterAscensionMaxAggregateOutputType | null
  }

  export type CharacterAscensionAvgAggregateOutputType = {
    level: number
    maxLevel: number
  }

  export type CharacterAscensionSumAggregateOutputType = {
    level: number
    maxLevel: number
  }

  export type CharacterAscensionMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    level: number
    maxLevel: number
    recipe: JsonValue | null
    characterId: string | null
    characterAscensionMaterialId: string | null
  }

  export type CharacterAscensionMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    level: number
    maxLevel: number
    recipe: JsonValue | null
    characterId: string | null
    characterAscensionMaterialId: string | null
  }

  export type CharacterAscensionCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    level: number
    maxLevel: number
    recipe: number | null
    characterId: number | null
    characterAscensionMaterialId: number | null
    _all: number
  }


  export type CharacterAscensionAvgAggregateInputType = {
    level?: true
    maxLevel?: true
  }

  export type CharacterAscensionSumAggregateInputType = {
    level?: true
    maxLevel?: true
  }

  export type CharacterAscensionMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    level?: true
    maxLevel?: true
    recipe?: true
    characterId?: true
    characterAscensionMaterialId?: true
  }

  export type CharacterAscensionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    level?: true
    maxLevel?: true
    recipe?: true
    characterId?: true
    characterAscensionMaterialId?: true
  }

  export type CharacterAscensionCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    level?: true
    maxLevel?: true
    recipe?: true
    characterId?: true
    characterAscensionMaterialId?: true
    _all?: true
  }

  export type AggregateCharacterAscensionArgs = {
    /**
     * Filter which CharacterAscension to aggregate.
    **/
    where?: CharacterAscensionWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CharacterAscensions to fetch.
    **/
    orderBy?: Enumerable<CharacterAscensionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: CharacterAscensionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CharacterAscensions from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CharacterAscensions.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CharacterAscensions
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: CharacterAscensionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: CharacterAscensionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: CharacterAscensionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: CharacterAscensionMaxAggregateInputType
  }

  export type GetCharacterAscensionAggregateType<T extends AggregateCharacterAscensionArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetCharacterAscensionAggregateScalarType<T[P]>
  }

  export type GetCharacterAscensionAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof CharacterAscensionAvgAggregateOutputType ? CharacterAscensionAvgAggregateOutputType[P] : never
  }

    



  export type CharacterAscensionSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    level?: boolean
    maxLevel?: boolean
    recipe?: boolean
    character?: boolean | CharacterArgs
    characterId?: boolean
    characterAscensionMaterial?: boolean | CharacterAscensionMaterialArgs
    characterAscensionMaterialId?: boolean
    commonAscensionMaterials?: boolean | FindManyCommonAscensionMaterialArgs
  }

  export type CharacterAscensionInclude = {
    character?: boolean | CharacterArgs
    characterAscensionMaterial?: boolean | CharacterAscensionMaterialArgs
    commonAscensionMaterials?: boolean | FindManyCommonAscensionMaterialArgs
  }

  export type CharacterAscensionGetPayload<
    S extends boolean | null | undefined | CharacterAscensionArgs,
    U = keyof S
      > = S extends true
        ? CharacterAscension
    : S extends undefined
    ? never
    : S extends CharacterAscensionArgs | FindManyCharacterAscensionArgs
    ?'include' extends U
    ? CharacterAscension  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'character'
        ? CharacterGetPayload<S['include'][P]> | null :
        P extends 'characterAscensionMaterial'
        ? CharacterAscensionMaterialGetPayload<S['include'][P]> | null :
        P extends 'commonAscensionMaterials'
        ? Array < CommonAscensionMaterialGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof CharacterAscension ?CharacterAscension [P]
  : 
          P extends 'character'
        ? CharacterGetPayload<S['select'][P]> | null :
        P extends 'characterAscensionMaterial'
        ? CharacterAscensionMaterialGetPayload<S['select'][P]> | null :
        P extends 'commonAscensionMaterials'
        ? Array < CommonAscensionMaterialGetPayload<S['select'][P]>>  : never
  } 
    : CharacterAscension
  : CharacterAscension


  export interface CharacterAscensionDelegate {
    /**
     * Find zero or one CharacterAscension that matches the filter.
     * @param {FindUniqueCharacterAscensionArgs} args - Arguments to find a CharacterAscension
     * @example
     * // Get one CharacterAscension
     * const characterAscension = await prisma.characterAscension.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueCharacterAscensionArgs>(
      args: Subset<T, FindUniqueCharacterAscensionArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionClient<CharacterAscension | null>, Prisma__CharacterAscensionClient<CharacterAscensionGetPayload<T> | null>>

    /**
     * Find the first CharacterAscension that matches the filter.
     * @param {FindFirstCharacterAscensionArgs} args - Arguments to find a CharacterAscension
     * @example
     * // Get one CharacterAscension
     * const characterAscension = await prisma.characterAscension.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstCharacterAscensionArgs>(
      args?: Subset<T, FindFirstCharacterAscensionArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionClient<CharacterAscension | null>, Prisma__CharacterAscensionClient<CharacterAscensionGetPayload<T> | null>>

    /**
     * Find zero or more CharacterAscensions that matches the filter.
     * @param {FindManyCharacterAscensionArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CharacterAscensions
     * const characterAscensions = await prisma.characterAscension.findMany()
     * 
     * // Get first 10 CharacterAscensions
     * const characterAscensions = await prisma.characterAscension.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const characterAscensionWithIdOnly = await prisma.characterAscension.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyCharacterAscensionArgs>(
      args?: Subset<T, FindManyCharacterAscensionArgs>
    ): CheckSelect<T, Promise<Array<CharacterAscension>>, Promise<Array<CharacterAscensionGetPayload<T>>>>

    /**
     * Create a CharacterAscension.
     * @param {CharacterAscensionCreateArgs} args - Arguments to create a CharacterAscension.
     * @example
     * // Create one CharacterAscension
     * const CharacterAscension = await prisma.characterAscension.create({
     *   data: {
     *     // ... data to create a CharacterAscension
     *   }
     * })
     * 
    **/
    create<T extends CharacterAscensionCreateArgs>(
      args: Subset<T, CharacterAscensionCreateArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionClient<CharacterAscension>, Prisma__CharacterAscensionClient<CharacterAscensionGetPayload<T>>>

    /**
     * Delete a CharacterAscension.
     * @param {CharacterAscensionDeleteArgs} args - Arguments to delete one CharacterAscension.
     * @example
     * // Delete one CharacterAscension
     * const CharacterAscension = await prisma.characterAscension.delete({
     *   where: {
     *     // ... filter to delete one CharacterAscension
     *   }
     * })
     * 
    **/
    delete<T extends CharacterAscensionDeleteArgs>(
      args: Subset<T, CharacterAscensionDeleteArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionClient<CharacterAscension>, Prisma__CharacterAscensionClient<CharacterAscensionGetPayload<T>>>

    /**
     * Update one CharacterAscension.
     * @param {CharacterAscensionUpdateArgs} args - Arguments to update one CharacterAscension.
     * @example
     * // Update one CharacterAscension
     * const characterAscension = await prisma.characterAscension.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CharacterAscensionUpdateArgs>(
      args: Subset<T, CharacterAscensionUpdateArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionClient<CharacterAscension>, Prisma__CharacterAscensionClient<CharacterAscensionGetPayload<T>>>

    /**
     * Delete zero or more CharacterAscensions.
     * @param {CharacterAscensionDeleteManyArgs} args - Arguments to filter CharacterAscensions to delete.
     * @example
     * // Delete a few CharacterAscensions
     * const { count } = await prisma.characterAscension.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CharacterAscensionDeleteManyArgs>(
      args?: Subset<T, CharacterAscensionDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more CharacterAscensions.
     * @param {CharacterAscensionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CharacterAscensions
     * const characterAscension = await prisma.characterAscension.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CharacterAscensionUpdateManyArgs>(
      args: Subset<T, CharacterAscensionUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one CharacterAscension.
     * @param {CharacterAscensionUpsertArgs} args - Arguments to update or create a CharacterAscension.
     * @example
     * // Update or create a CharacterAscension
     * const characterAscension = await prisma.characterAscension.upsert({
     *   create: {
     *     // ... data to create a CharacterAscension
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CharacterAscension we want to update
     *   }
     * })
    **/
    upsert<T extends CharacterAscensionUpsertArgs>(
      args: Subset<T, CharacterAscensionUpsertArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionClient<CharacterAscension>, Prisma__CharacterAscensionClient<CharacterAscensionGetPayload<T>>>

    /**
     * Find zero or one CharacterAscension that matches the filter.
     * @param {FindUniqueCharacterAscensionArgs} args - Arguments to find a CharacterAscension
     * @deprecated This will be deprecated please use prisma.characterAscension.findUnique
     * @example
     * // Get one CharacterAscension
     * const characterAscension = await prisma.characterAscension.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueCharacterAscensionArgs>(
      args: Subset<T, FindUniqueCharacterAscensionArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionClient<CharacterAscension | null>, Prisma__CharacterAscensionClient<CharacterAscensionGetPayload<T> | null>>

    /**
     * Count the number of CharacterAscensions.
     * @param {FindManyCharacterAscensionArgs} args - Arguments to filter CharacterAscensions to count.
     * @example
     * // Count the number of CharacterAscensions
     * const count = await prisma.characterAscension.count({
     *   where: {
     *     // ... the filter for the CharacterAscensions we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyCharacterAscensionArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a CharacterAscension.
     * @param {AggregateCharacterAscensionArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateCharacterAscensionArgs>(args: Subset<T, AggregateCharacterAscensionArgs>): Promise<GetCharacterAscensionAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for CharacterAscension.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CharacterAscensionClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    character<T extends CharacterArgs = {}>(args?: Subset<T, CharacterArgs>): CheckSelect<T, Prisma__CharacterClient<Character | null>, Prisma__CharacterClient<CharacterGetPayload<T> | null>>;

    characterAscensionMaterial<T extends CharacterAscensionMaterialArgs = {}>(args?: Subset<T, CharacterAscensionMaterialArgs>): CheckSelect<T, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterial | null>, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterialGetPayload<T> | null>>;

    commonAscensionMaterials<T extends FindManyCommonAscensionMaterialArgs = {}>(args?: Subset<T, FindManyCommonAscensionMaterialArgs>): CheckSelect<T, Promise<Array<CommonAscensionMaterial>>, Promise<Array<CommonAscensionMaterialGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * CharacterAscension findUnique
   */
  export type FindUniqueCharacterAscensionArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscension
    **/
    select?: CharacterAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionInclude | null
    /**
     * Filter, which CharacterAscension to fetch.
    **/
    where: CharacterAscensionWhereUniqueInput
  }


  /**
   * CharacterAscension findFirst
   */
  export type FindFirstCharacterAscensionArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscension
    **/
    select?: CharacterAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionInclude | null
    /**
     * Filter, which CharacterAscension to fetch.
    **/
    where?: CharacterAscensionWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CharacterAscensions to fetch.
    **/
    orderBy?: Enumerable<CharacterAscensionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CharacterAscensions.
    **/
    cursor?: CharacterAscensionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CharacterAscensions from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CharacterAscensions.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of CharacterAscensions.
    **/
    distinct?: Enumerable<CharacterAscensionScalarFieldEnum>
  }


  /**
   * CharacterAscension findMany
   */
  export type FindManyCharacterAscensionArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscension
    **/
    select?: CharacterAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionInclude | null
    /**
     * Filter, which CharacterAscensions to fetch.
    **/
    where?: CharacterAscensionWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CharacterAscensions to fetch.
    **/
    orderBy?: Enumerable<CharacterAscensionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CharacterAscensions.
    **/
    cursor?: CharacterAscensionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CharacterAscensions from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CharacterAscensions.
    **/
    skip?: number
    distinct?: Enumerable<CharacterAscensionScalarFieldEnum>
  }


  /**
   * CharacterAscension create
   */
  export type CharacterAscensionCreateArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscension
    **/
    select?: CharacterAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionInclude | null
    /**
     * The data needed to create a CharacterAscension.
    **/
    data: XOR<CharacterAscensionUncheckedCreateInput, CharacterAscensionCreateInput>
  }


  /**
   * CharacterAscension update
   */
  export type CharacterAscensionUpdateArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscension
    **/
    select?: CharacterAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionInclude | null
    /**
     * The data needed to update a CharacterAscension.
    **/
    data: XOR<CharacterAscensionUncheckedUpdateInput, CharacterAscensionUpdateInput>
    /**
     * Choose, which CharacterAscension to update.
    **/
    where: CharacterAscensionWhereUniqueInput
  }


  /**
   * CharacterAscension updateMany
   */
  export type CharacterAscensionUpdateManyArgs = {
    data: XOR<CharacterAscensionUncheckedUpdateManyInput, CharacterAscensionUpdateManyMutationInput>
    where?: CharacterAscensionWhereInput
  }


  /**
   * CharacterAscension upsert
   */
  export type CharacterAscensionUpsertArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscension
    **/
    select?: CharacterAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionInclude | null
    /**
     * The filter to search for the CharacterAscension to update in case it exists.
    **/
    where: CharacterAscensionWhereUniqueInput
    /**
     * In case the CharacterAscension found by the `where` argument doesn't exist, create a new CharacterAscension with this data.
    **/
    create: XOR<CharacterAscensionUncheckedCreateInput, CharacterAscensionCreateInput>
    /**
     * In case the CharacterAscension was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<CharacterAscensionUncheckedUpdateInput, CharacterAscensionUpdateInput>
  }


  /**
   * CharacterAscension delete
   */
  export type CharacterAscensionDeleteArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscension
    **/
    select?: CharacterAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionInclude | null
    /**
     * Filter which CharacterAscension to delete.
    **/
    where: CharacterAscensionWhereUniqueInput
  }


  /**
   * CharacterAscension deleteMany
   */
  export type CharacterAscensionDeleteManyArgs = {
    where?: CharacterAscensionWhereInput
  }


  /**
   * CharacterAscension without action
   */
  export type CharacterAscensionArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscension
    **/
    select?: CharacterAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionInclude | null
  }



  /**
   * Model CharacterProfile
   */


  export type AggregateCharacterProfile = {
    count: number | null
    min: CharacterProfileMinAggregateOutputType | null
    max: CharacterProfileMaxAggregateOutputType | null
  }

  export type CharacterProfileMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    affiliation: string | null
    birthday: string | null
    constellation: string | null
    images: JsonValue | null
    overview: string | null
    story: JsonValue | null
    voiceActor: JsonValue | null
    voiceLines: JsonValue | null
    regionId: string | null
    elementId: string | null
  }

  export type CharacterProfileMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    affiliation: string | null
    birthday: string | null
    constellation: string | null
    images: JsonValue | null
    overview: string | null
    story: JsonValue | null
    voiceActor: JsonValue | null
    voiceLines: JsonValue | null
    regionId: string | null
    elementId: string | null
  }

  export type CharacterProfileCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    affiliation: number | null
    birthday: number | null
    constellation: number | null
    images: number | null
    overview: number | null
    story: number | null
    voiceActor: number | null
    voiceLines: number | null
    regionId: number | null
    elementId: number | null
    _all: number
  }


  export type CharacterProfileMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    affiliation?: true
    birthday?: true
    constellation?: true
    images?: true
    overview?: true
    story?: true
    voiceActor?: true
    voiceLines?: true
    regionId?: true
    elementId?: true
  }

  export type CharacterProfileMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    affiliation?: true
    birthday?: true
    constellation?: true
    images?: true
    overview?: true
    story?: true
    voiceActor?: true
    voiceLines?: true
    regionId?: true
    elementId?: true
  }

  export type CharacterProfileCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    affiliation?: true
    birthday?: true
    constellation?: true
    images?: true
    overview?: true
    story?: true
    voiceActor?: true
    voiceLines?: true
    regionId?: true
    elementId?: true
    _all?: true
  }

  export type AggregateCharacterProfileArgs = {
    /**
     * Filter which CharacterProfile to aggregate.
    **/
    where?: CharacterProfileWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CharacterProfiles to fetch.
    **/
    orderBy?: Enumerable<CharacterProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: CharacterProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CharacterProfiles from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CharacterProfiles.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CharacterProfiles
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: CharacterProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: CharacterProfileMaxAggregateInputType
  }

  export type GetCharacterProfileAggregateType<T extends AggregateCharacterProfileArgs> = {
    [P in keyof T]: P extends 'count' ? number : never
  }



    



  export type CharacterProfileSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    affiliation?: boolean
    birthday?: boolean
    constellation?: boolean
    images?: boolean
    overview?: boolean
    story?: boolean
    voiceActor?: boolean
    voiceLines?: boolean
    region?: boolean | RegionArgs
    regionId?: boolean
    specialtyDish?: boolean | ConsumeableArgs
    vision?: boolean | ElementArgs
    elementId?: boolean
    character?: boolean | CharacterArgs
  }

  export type CharacterProfileInclude = {
    region?: boolean | RegionArgs
    specialtyDish?: boolean | ConsumeableArgs
    vision?: boolean | ElementArgs
    character?: boolean | CharacterArgs
  }

  export type CharacterProfileGetPayload<
    S extends boolean | null | undefined | CharacterProfileArgs,
    U = keyof S
      > = S extends true
        ? CharacterProfile
    : S extends undefined
    ? never
    : S extends CharacterProfileArgs | FindManyCharacterProfileArgs
    ?'include' extends U
    ? CharacterProfile  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'region'
        ? RegionGetPayload<S['include'][P]> | null :
        P extends 'specialtyDish'
        ? ConsumeableGetPayload<S['include'][P]> | null :
        P extends 'vision'
        ? ElementGetPayload<S['include'][P]> | null :
        P extends 'character'
        ? CharacterGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof CharacterProfile ?CharacterProfile [P]
  : 
          P extends 'region'
        ? RegionGetPayload<S['select'][P]> | null :
        P extends 'specialtyDish'
        ? ConsumeableGetPayload<S['select'][P]> | null :
        P extends 'vision'
        ? ElementGetPayload<S['select'][P]> | null :
        P extends 'character'
        ? CharacterGetPayload<S['select'][P]> | null : never
  } 
    : CharacterProfile
  : CharacterProfile


  export interface CharacterProfileDelegate {
    /**
     * Find zero or one CharacterProfile that matches the filter.
     * @param {FindUniqueCharacterProfileArgs} args - Arguments to find a CharacterProfile
     * @example
     * // Get one CharacterProfile
     * const characterProfile = await prisma.characterProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueCharacterProfileArgs>(
      args: Subset<T, FindUniqueCharacterProfileArgs>
    ): CheckSelect<T, Prisma__CharacterProfileClient<CharacterProfile | null>, Prisma__CharacterProfileClient<CharacterProfileGetPayload<T> | null>>

    /**
     * Find the first CharacterProfile that matches the filter.
     * @param {FindFirstCharacterProfileArgs} args - Arguments to find a CharacterProfile
     * @example
     * // Get one CharacterProfile
     * const characterProfile = await prisma.characterProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstCharacterProfileArgs>(
      args?: Subset<T, FindFirstCharacterProfileArgs>
    ): CheckSelect<T, Prisma__CharacterProfileClient<CharacterProfile | null>, Prisma__CharacterProfileClient<CharacterProfileGetPayload<T> | null>>

    /**
     * Find zero or more CharacterProfiles that matches the filter.
     * @param {FindManyCharacterProfileArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CharacterProfiles
     * const characterProfiles = await prisma.characterProfile.findMany()
     * 
     * // Get first 10 CharacterProfiles
     * const characterProfiles = await prisma.characterProfile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const characterProfileWithIdOnly = await prisma.characterProfile.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyCharacterProfileArgs>(
      args?: Subset<T, FindManyCharacterProfileArgs>
    ): CheckSelect<T, Promise<Array<CharacterProfile>>, Promise<Array<CharacterProfileGetPayload<T>>>>

    /**
     * Create a CharacterProfile.
     * @param {CharacterProfileCreateArgs} args - Arguments to create a CharacterProfile.
     * @example
     * // Create one CharacterProfile
     * const CharacterProfile = await prisma.characterProfile.create({
     *   data: {
     *     // ... data to create a CharacterProfile
     *   }
     * })
     * 
    **/
    create<T extends CharacterProfileCreateArgs>(
      args: Subset<T, CharacterProfileCreateArgs>
    ): CheckSelect<T, Prisma__CharacterProfileClient<CharacterProfile>, Prisma__CharacterProfileClient<CharacterProfileGetPayload<T>>>

    /**
     * Delete a CharacterProfile.
     * @param {CharacterProfileDeleteArgs} args - Arguments to delete one CharacterProfile.
     * @example
     * // Delete one CharacterProfile
     * const CharacterProfile = await prisma.characterProfile.delete({
     *   where: {
     *     // ... filter to delete one CharacterProfile
     *   }
     * })
     * 
    **/
    delete<T extends CharacterProfileDeleteArgs>(
      args: Subset<T, CharacterProfileDeleteArgs>
    ): CheckSelect<T, Prisma__CharacterProfileClient<CharacterProfile>, Prisma__CharacterProfileClient<CharacterProfileGetPayload<T>>>

    /**
     * Update one CharacterProfile.
     * @param {CharacterProfileUpdateArgs} args - Arguments to update one CharacterProfile.
     * @example
     * // Update one CharacterProfile
     * const characterProfile = await prisma.characterProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CharacterProfileUpdateArgs>(
      args: Subset<T, CharacterProfileUpdateArgs>
    ): CheckSelect<T, Prisma__CharacterProfileClient<CharacterProfile>, Prisma__CharacterProfileClient<CharacterProfileGetPayload<T>>>

    /**
     * Delete zero or more CharacterProfiles.
     * @param {CharacterProfileDeleteManyArgs} args - Arguments to filter CharacterProfiles to delete.
     * @example
     * // Delete a few CharacterProfiles
     * const { count } = await prisma.characterProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CharacterProfileDeleteManyArgs>(
      args?: Subset<T, CharacterProfileDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more CharacterProfiles.
     * @param {CharacterProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CharacterProfiles
     * const characterProfile = await prisma.characterProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CharacterProfileUpdateManyArgs>(
      args: Subset<T, CharacterProfileUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one CharacterProfile.
     * @param {CharacterProfileUpsertArgs} args - Arguments to update or create a CharacterProfile.
     * @example
     * // Update or create a CharacterProfile
     * const characterProfile = await prisma.characterProfile.upsert({
     *   create: {
     *     // ... data to create a CharacterProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CharacterProfile we want to update
     *   }
     * })
    **/
    upsert<T extends CharacterProfileUpsertArgs>(
      args: Subset<T, CharacterProfileUpsertArgs>
    ): CheckSelect<T, Prisma__CharacterProfileClient<CharacterProfile>, Prisma__CharacterProfileClient<CharacterProfileGetPayload<T>>>

    /**
     * Find zero or one CharacterProfile that matches the filter.
     * @param {FindUniqueCharacterProfileArgs} args - Arguments to find a CharacterProfile
     * @deprecated This will be deprecated please use prisma.characterProfile.findUnique
     * @example
     * // Get one CharacterProfile
     * const characterProfile = await prisma.characterProfile.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueCharacterProfileArgs>(
      args: Subset<T, FindUniqueCharacterProfileArgs>
    ): CheckSelect<T, Prisma__CharacterProfileClient<CharacterProfile | null>, Prisma__CharacterProfileClient<CharacterProfileGetPayload<T> | null>>

    /**
     * Count the number of CharacterProfiles.
     * @param {FindManyCharacterProfileArgs} args - Arguments to filter CharacterProfiles to count.
     * @example
     * // Count the number of CharacterProfiles
     * const count = await prisma.characterProfile.count({
     *   where: {
     *     // ... the filter for the CharacterProfiles we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyCharacterProfileArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a CharacterProfile.
     * @param {AggregateCharacterProfileArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateCharacterProfileArgs>(args: Subset<T, AggregateCharacterProfileArgs>): Promise<GetCharacterProfileAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for CharacterProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CharacterProfileClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    region<T extends RegionArgs = {}>(args?: Subset<T, RegionArgs>): CheckSelect<T, Prisma__RegionClient<Region | null>, Prisma__RegionClient<RegionGetPayload<T> | null>>;

    specialtyDish<T extends ConsumeableArgs = {}>(args?: Subset<T, ConsumeableArgs>): CheckSelect<T, Prisma__ConsumeableClient<Consumeable | null>, Prisma__ConsumeableClient<ConsumeableGetPayload<T> | null>>;

    vision<T extends ElementArgs = {}>(args?: Subset<T, ElementArgs>): CheckSelect<T, Prisma__ElementClient<Element | null>, Prisma__ElementClient<ElementGetPayload<T> | null>>;

    character<T extends CharacterArgs = {}>(args?: Subset<T, CharacterArgs>): CheckSelect<T, Prisma__CharacterClient<Character | null>, Prisma__CharacterClient<CharacterGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * CharacterProfile findUnique
   */
  export type FindUniqueCharacterProfileArgs = {
    /**
     * Select specific fields to fetch from the CharacterProfile
    **/
    select?: CharacterProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterProfileInclude | null
    /**
     * Filter, which CharacterProfile to fetch.
    **/
    where: CharacterProfileWhereUniqueInput
  }


  /**
   * CharacterProfile findFirst
   */
  export type FindFirstCharacterProfileArgs = {
    /**
     * Select specific fields to fetch from the CharacterProfile
    **/
    select?: CharacterProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterProfileInclude | null
    /**
     * Filter, which CharacterProfile to fetch.
    **/
    where?: CharacterProfileWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CharacterProfiles to fetch.
    **/
    orderBy?: Enumerable<CharacterProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CharacterProfiles.
    **/
    cursor?: CharacterProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CharacterProfiles from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CharacterProfiles.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of CharacterProfiles.
    **/
    distinct?: Enumerable<CharacterProfileScalarFieldEnum>
  }


  /**
   * CharacterProfile findMany
   */
  export type FindManyCharacterProfileArgs = {
    /**
     * Select specific fields to fetch from the CharacterProfile
    **/
    select?: CharacterProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterProfileInclude | null
    /**
     * Filter, which CharacterProfiles to fetch.
    **/
    where?: CharacterProfileWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CharacterProfiles to fetch.
    **/
    orderBy?: Enumerable<CharacterProfileOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CharacterProfiles.
    **/
    cursor?: CharacterProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CharacterProfiles from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CharacterProfiles.
    **/
    skip?: number
    distinct?: Enumerable<CharacterProfileScalarFieldEnum>
  }


  /**
   * CharacterProfile create
   */
  export type CharacterProfileCreateArgs = {
    /**
     * Select specific fields to fetch from the CharacterProfile
    **/
    select?: CharacterProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterProfileInclude | null
    /**
     * The data needed to create a CharacterProfile.
    **/
    data: XOR<CharacterProfileUncheckedCreateInput, CharacterProfileCreateInput>
  }


  /**
   * CharacterProfile update
   */
  export type CharacterProfileUpdateArgs = {
    /**
     * Select specific fields to fetch from the CharacterProfile
    **/
    select?: CharacterProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterProfileInclude | null
    /**
     * The data needed to update a CharacterProfile.
    **/
    data: XOR<CharacterProfileUncheckedUpdateInput, CharacterProfileUpdateInput>
    /**
     * Choose, which CharacterProfile to update.
    **/
    where: CharacterProfileWhereUniqueInput
  }


  /**
   * CharacterProfile updateMany
   */
  export type CharacterProfileUpdateManyArgs = {
    data: XOR<CharacterProfileUncheckedUpdateManyInput, CharacterProfileUpdateManyMutationInput>
    where?: CharacterProfileWhereInput
  }


  /**
   * CharacterProfile upsert
   */
  export type CharacterProfileUpsertArgs = {
    /**
     * Select specific fields to fetch from the CharacterProfile
    **/
    select?: CharacterProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterProfileInclude | null
    /**
     * The filter to search for the CharacterProfile to update in case it exists.
    **/
    where: CharacterProfileWhereUniqueInput
    /**
     * In case the CharacterProfile found by the `where` argument doesn't exist, create a new CharacterProfile with this data.
    **/
    create: XOR<CharacterProfileUncheckedCreateInput, CharacterProfileCreateInput>
    /**
     * In case the CharacterProfile was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<CharacterProfileUncheckedUpdateInput, CharacterProfileUpdateInput>
  }


  /**
   * CharacterProfile delete
   */
  export type CharacterProfileDeleteArgs = {
    /**
     * Select specific fields to fetch from the CharacterProfile
    **/
    select?: CharacterProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterProfileInclude | null
    /**
     * Filter which CharacterProfile to delete.
    **/
    where: CharacterProfileWhereUniqueInput
  }


  /**
   * CharacterProfile deleteMany
   */
  export type CharacterProfileDeleteManyArgs = {
    where?: CharacterProfileWhereInput
  }


  /**
   * CharacterProfile without action
   */
  export type CharacterProfileArgs = {
    /**
     * Select specific fields to fetch from the CharacterProfile
    **/
    select?: CharacterProfileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterProfileInclude | null
  }



  /**
   * Model Talent
   */


  export type AggregateTalent = {
    count: number | null
    min: TalentMinAggregateOutputType | null
    max: TalentMaxAggregateOutputType | null
  }

  export type TalentMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    description: string | null
    details: JsonValue | null
    name: string | null
    type: string | null
    characterId: string | null
    talentLevelUpMaterialId: string | null
  }

  export type TalentMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    description: string | null
    details: JsonValue | null
    name: string | null
    type: string | null
    characterId: string | null
    talentLevelUpMaterialId: string | null
  }

  export type TalentCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    description: number | null
    details: number | null
    name: number | null
    type: number | null
    characterId: number | null
    talentLevelUpMaterialId: number | null
    _all: number
  }


  export type TalentMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    description?: true
    details?: true
    name?: true
    type?: true
    characterId?: true
    talentLevelUpMaterialId?: true
  }

  export type TalentMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    description?: true
    details?: true
    name?: true
    type?: true
    characterId?: true
    talentLevelUpMaterialId?: true
  }

  export type TalentCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    description?: true
    details?: true
    name?: true
    type?: true
    characterId?: true
    talentLevelUpMaterialId?: true
    _all?: true
  }

  export type AggregateTalentArgs = {
    /**
     * Filter which Talent to aggregate.
    **/
    where?: TalentWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Talents to fetch.
    **/
    orderBy?: Enumerable<TalentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: TalentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Talents from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Talents.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Talents
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: TalentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: TalentMaxAggregateInputType
  }

  export type GetTalentAggregateType<T extends AggregateTalentArgs> = {
    [P in keyof T]: P extends 'count' ? number : never
  }



    



  export type TalentSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    description?: boolean
    details?: boolean
    name?: boolean
    type?: boolean
    character?: boolean | CharacterArgs
    characterId?: boolean
    talentLevelUpMaterial?: boolean | TalentLevelUpMaterialArgs
    talentLevelUpMaterialId?: boolean
  }

  export type TalentInclude = {
    character?: boolean | CharacterArgs
    talentLevelUpMaterial?: boolean | TalentLevelUpMaterialArgs
  }

  export type TalentGetPayload<
    S extends boolean | null | undefined | TalentArgs,
    U = keyof S
      > = S extends true
        ? Talent
    : S extends undefined
    ? never
    : S extends TalentArgs | FindManyTalentArgs
    ?'include' extends U
    ? Talent  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'character'
        ? CharacterGetPayload<S['include'][P]> :
        P extends 'talentLevelUpMaterial'
        ? TalentLevelUpMaterialGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Talent ?Talent [P]
  : 
          P extends 'character'
        ? CharacterGetPayload<S['select'][P]> :
        P extends 'talentLevelUpMaterial'
        ? TalentLevelUpMaterialGetPayload<S['select'][P]> | null : never
  } 
    : Talent
  : Talent


  export interface TalentDelegate {
    /**
     * Find zero or one Talent that matches the filter.
     * @param {FindUniqueTalentArgs} args - Arguments to find a Talent
     * @example
     * // Get one Talent
     * const talent = await prisma.talent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueTalentArgs>(
      args: Subset<T, FindUniqueTalentArgs>
    ): CheckSelect<T, Prisma__TalentClient<Talent | null>, Prisma__TalentClient<TalentGetPayload<T> | null>>

    /**
     * Find the first Talent that matches the filter.
     * @param {FindFirstTalentArgs} args - Arguments to find a Talent
     * @example
     * // Get one Talent
     * const talent = await prisma.talent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstTalentArgs>(
      args?: Subset<T, FindFirstTalentArgs>
    ): CheckSelect<T, Prisma__TalentClient<Talent | null>, Prisma__TalentClient<TalentGetPayload<T> | null>>

    /**
     * Find zero or more Talents that matches the filter.
     * @param {FindManyTalentArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Talents
     * const talents = await prisma.talent.findMany()
     * 
     * // Get first 10 Talents
     * const talents = await prisma.talent.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const talentWithIdOnly = await prisma.talent.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyTalentArgs>(
      args?: Subset<T, FindManyTalentArgs>
    ): CheckSelect<T, Promise<Array<Talent>>, Promise<Array<TalentGetPayload<T>>>>

    /**
     * Create a Talent.
     * @param {TalentCreateArgs} args - Arguments to create a Talent.
     * @example
     * // Create one Talent
     * const Talent = await prisma.talent.create({
     *   data: {
     *     // ... data to create a Talent
     *   }
     * })
     * 
    **/
    create<T extends TalentCreateArgs>(
      args: Subset<T, TalentCreateArgs>
    ): CheckSelect<T, Prisma__TalentClient<Talent>, Prisma__TalentClient<TalentGetPayload<T>>>

    /**
     * Delete a Talent.
     * @param {TalentDeleteArgs} args - Arguments to delete one Talent.
     * @example
     * // Delete one Talent
     * const Talent = await prisma.talent.delete({
     *   where: {
     *     // ... filter to delete one Talent
     *   }
     * })
     * 
    **/
    delete<T extends TalentDeleteArgs>(
      args: Subset<T, TalentDeleteArgs>
    ): CheckSelect<T, Prisma__TalentClient<Talent>, Prisma__TalentClient<TalentGetPayload<T>>>

    /**
     * Update one Talent.
     * @param {TalentUpdateArgs} args - Arguments to update one Talent.
     * @example
     * // Update one Talent
     * const talent = await prisma.talent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TalentUpdateArgs>(
      args: Subset<T, TalentUpdateArgs>
    ): CheckSelect<T, Prisma__TalentClient<Talent>, Prisma__TalentClient<TalentGetPayload<T>>>

    /**
     * Delete zero or more Talents.
     * @param {TalentDeleteManyArgs} args - Arguments to filter Talents to delete.
     * @example
     * // Delete a few Talents
     * const { count } = await prisma.talent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TalentDeleteManyArgs>(
      args?: Subset<T, TalentDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more Talents.
     * @param {TalentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Talents
     * const talent = await prisma.talent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TalentUpdateManyArgs>(
      args: Subset<T, TalentUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one Talent.
     * @param {TalentUpsertArgs} args - Arguments to update or create a Talent.
     * @example
     * // Update or create a Talent
     * const talent = await prisma.talent.upsert({
     *   create: {
     *     // ... data to create a Talent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Talent we want to update
     *   }
     * })
    **/
    upsert<T extends TalentUpsertArgs>(
      args: Subset<T, TalentUpsertArgs>
    ): CheckSelect<T, Prisma__TalentClient<Talent>, Prisma__TalentClient<TalentGetPayload<T>>>

    /**
     * Find zero or one Talent that matches the filter.
     * @param {FindUniqueTalentArgs} args - Arguments to find a Talent
     * @deprecated This will be deprecated please use prisma.talent.findUnique
     * @example
     * // Get one Talent
     * const talent = await prisma.talent.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueTalentArgs>(
      args: Subset<T, FindUniqueTalentArgs>
    ): CheckSelect<T, Prisma__TalentClient<Talent | null>, Prisma__TalentClient<TalentGetPayload<T> | null>>

    /**
     * Count the number of Talents.
     * @param {FindManyTalentArgs} args - Arguments to filter Talents to count.
     * @example
     * // Count the number of Talents
     * const count = await prisma.talent.count({
     *   where: {
     *     // ... the filter for the Talents we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyTalentArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a Talent.
     * @param {AggregateTalentArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateTalentArgs>(args: Subset<T, AggregateTalentArgs>): Promise<GetTalentAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Talent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TalentClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    character<T extends CharacterArgs = {}>(args?: Subset<T, CharacterArgs>): CheckSelect<T, Prisma__CharacterClient<Character | null>, Prisma__CharacterClient<CharacterGetPayload<T> | null>>;

    talentLevelUpMaterial<T extends TalentLevelUpMaterialArgs = {}>(args?: Subset<T, TalentLevelUpMaterialArgs>): CheckSelect<T, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterial | null>, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterialGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Talent findUnique
   */
  export type FindUniqueTalentArgs = {
    /**
     * Select specific fields to fetch from the Talent
    **/
    select?: TalentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentInclude | null
    /**
     * Filter, which Talent to fetch.
    **/
    where: TalentWhereUniqueInput
  }


  /**
   * Talent findFirst
   */
  export type FindFirstTalentArgs = {
    /**
     * Select specific fields to fetch from the Talent
    **/
    select?: TalentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentInclude | null
    /**
     * Filter, which Talent to fetch.
    **/
    where?: TalentWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Talents to fetch.
    **/
    orderBy?: Enumerable<TalentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Talents.
    **/
    cursor?: TalentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Talents from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Talents.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of Talents.
    **/
    distinct?: Enumerable<TalentScalarFieldEnum>
  }


  /**
   * Talent findMany
   */
  export type FindManyTalentArgs = {
    /**
     * Select specific fields to fetch from the Talent
    **/
    select?: TalentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentInclude | null
    /**
     * Filter, which Talents to fetch.
    **/
    where?: TalentWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Talents to fetch.
    **/
    orderBy?: Enumerable<TalentOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Talents.
    **/
    cursor?: TalentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Talents from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Talents.
    **/
    skip?: number
    distinct?: Enumerable<TalentScalarFieldEnum>
  }


  /**
   * Talent create
   */
  export type TalentCreateArgs = {
    /**
     * Select specific fields to fetch from the Talent
    **/
    select?: TalentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentInclude | null
    /**
     * The data needed to create a Talent.
    **/
    data: XOR<TalentUncheckedCreateInput, TalentCreateInput>
  }


  /**
   * Talent update
   */
  export type TalentUpdateArgs = {
    /**
     * Select specific fields to fetch from the Talent
    **/
    select?: TalentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentInclude | null
    /**
     * The data needed to update a Talent.
    **/
    data: XOR<TalentUncheckedUpdateInput, TalentUpdateInput>
    /**
     * Choose, which Talent to update.
    **/
    where: TalentWhereUniqueInput
  }


  /**
   * Talent updateMany
   */
  export type TalentUpdateManyArgs = {
    data: XOR<TalentUncheckedUpdateManyInput, TalentUpdateManyMutationInput>
    where?: TalentWhereInput
  }


  /**
   * Talent upsert
   */
  export type TalentUpsertArgs = {
    /**
     * Select specific fields to fetch from the Talent
    **/
    select?: TalentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentInclude | null
    /**
     * The filter to search for the Talent to update in case it exists.
    **/
    where: TalentWhereUniqueInput
    /**
     * In case the Talent found by the `where` argument doesn't exist, create a new Talent with this data.
    **/
    create: XOR<TalentUncheckedCreateInput, TalentCreateInput>
    /**
     * In case the Talent was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<TalentUncheckedUpdateInput, TalentUpdateInput>
  }


  /**
   * Talent delete
   */
  export type TalentDeleteArgs = {
    /**
     * Select specific fields to fetch from the Talent
    **/
    select?: TalentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentInclude | null
    /**
     * Filter which Talent to delete.
    **/
    where: TalentWhereUniqueInput
  }


  /**
   * Talent deleteMany
   */
  export type TalentDeleteManyArgs = {
    where?: TalentWhereInput
  }


  /**
   * Talent without action
   */
  export type TalentArgs = {
    /**
     * Select specific fields to fetch from the Talent
    **/
    select?: TalentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentInclude | null
  }



  /**
   * Model Element
   */


  export type AggregateElement = {
    count: number | null
    min: ElementMinAggregateOutputType | null
    max: ElementMaxAggregateOutputType | null
  }

  export type ElementMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    archon: string | null
    statusEffect: string | null
    theme: string | null
    regionId: string | null
  }

  export type ElementMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    archon: string | null
    statusEffect: string | null
    theme: string | null
    regionId: string | null
  }

  export type ElementCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    archon: number | null
    statusEffect: number | null
    theme: number | null
    regionId: number | null
    _all: number
  }


  export type ElementMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    archon?: true
    statusEffect?: true
    theme?: true
    regionId?: true
  }

  export type ElementMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    archon?: true
    statusEffect?: true
    theme?: true
    regionId?: true
  }

  export type ElementCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    archon?: true
    statusEffect?: true
    theme?: true
    regionId?: true
    _all?: true
  }

  export type AggregateElementArgs = {
    /**
     * Filter which Element to aggregate.
    **/
    where?: ElementWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Elements to fetch.
    **/
    orderBy?: Enumerable<ElementOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ElementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Elements from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Elements.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Elements
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ElementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ElementMaxAggregateInputType
  }

  export type GetElementAggregateType<T extends AggregateElementArgs> = {
    [P in keyof T]: P extends 'count' ? number : never
  }



    



  export type ElementSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    archon?: boolean
    statusEffect?: boolean
    theme?: boolean
    characters?: boolean | FindManyCharacterArgs
    characterProfiles?: boolean | FindManyCharacterProfileArgs
    region?: boolean | RegionArgs
    regionId?: boolean
  }

  export type ElementInclude = {
    characters?: boolean | FindManyCharacterArgs
    characterProfiles?: boolean | FindManyCharacterProfileArgs
    region?: boolean | RegionArgs
  }

  export type ElementGetPayload<
    S extends boolean | null | undefined | ElementArgs,
    U = keyof S
      > = S extends true
        ? Element
    : S extends undefined
    ? never
    : S extends ElementArgs | FindManyElementArgs
    ?'include' extends U
    ? Element  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'characters'
        ? Array < CharacterGetPayload<S['include'][P]>>  :
        P extends 'characterProfiles'
        ? Array < CharacterProfileGetPayload<S['include'][P]>>  :
        P extends 'region'
        ? RegionGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Element ?Element [P]
  : 
          P extends 'characters'
        ? Array < CharacterGetPayload<S['select'][P]>>  :
        P extends 'characterProfiles'
        ? Array < CharacterProfileGetPayload<S['select'][P]>>  :
        P extends 'region'
        ? RegionGetPayload<S['select'][P]> | null : never
  } 
    : Element
  : Element


  export interface ElementDelegate {
    /**
     * Find zero or one Element that matches the filter.
     * @param {FindUniqueElementArgs} args - Arguments to find a Element
     * @example
     * // Get one Element
     * const element = await prisma.element.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueElementArgs>(
      args: Subset<T, FindUniqueElementArgs>
    ): CheckSelect<T, Prisma__ElementClient<Element | null>, Prisma__ElementClient<ElementGetPayload<T> | null>>

    /**
     * Find the first Element that matches the filter.
     * @param {FindFirstElementArgs} args - Arguments to find a Element
     * @example
     * // Get one Element
     * const element = await prisma.element.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstElementArgs>(
      args?: Subset<T, FindFirstElementArgs>
    ): CheckSelect<T, Prisma__ElementClient<Element | null>, Prisma__ElementClient<ElementGetPayload<T> | null>>

    /**
     * Find zero or more Elements that matches the filter.
     * @param {FindManyElementArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Elements
     * const elements = await prisma.element.findMany()
     * 
     * // Get first 10 Elements
     * const elements = await prisma.element.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const elementWithIdOnly = await prisma.element.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyElementArgs>(
      args?: Subset<T, FindManyElementArgs>
    ): CheckSelect<T, Promise<Array<Element>>, Promise<Array<ElementGetPayload<T>>>>

    /**
     * Create a Element.
     * @param {ElementCreateArgs} args - Arguments to create a Element.
     * @example
     * // Create one Element
     * const Element = await prisma.element.create({
     *   data: {
     *     // ... data to create a Element
     *   }
     * })
     * 
    **/
    create<T extends ElementCreateArgs>(
      args: Subset<T, ElementCreateArgs>
    ): CheckSelect<T, Prisma__ElementClient<Element>, Prisma__ElementClient<ElementGetPayload<T>>>

    /**
     * Delete a Element.
     * @param {ElementDeleteArgs} args - Arguments to delete one Element.
     * @example
     * // Delete one Element
     * const Element = await prisma.element.delete({
     *   where: {
     *     // ... filter to delete one Element
     *   }
     * })
     * 
    **/
    delete<T extends ElementDeleteArgs>(
      args: Subset<T, ElementDeleteArgs>
    ): CheckSelect<T, Prisma__ElementClient<Element>, Prisma__ElementClient<ElementGetPayload<T>>>

    /**
     * Update one Element.
     * @param {ElementUpdateArgs} args - Arguments to update one Element.
     * @example
     * // Update one Element
     * const element = await prisma.element.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ElementUpdateArgs>(
      args: Subset<T, ElementUpdateArgs>
    ): CheckSelect<T, Prisma__ElementClient<Element>, Prisma__ElementClient<ElementGetPayload<T>>>

    /**
     * Delete zero or more Elements.
     * @param {ElementDeleteManyArgs} args - Arguments to filter Elements to delete.
     * @example
     * // Delete a few Elements
     * const { count } = await prisma.element.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ElementDeleteManyArgs>(
      args?: Subset<T, ElementDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more Elements.
     * @param {ElementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Elements
     * const element = await prisma.element.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ElementUpdateManyArgs>(
      args: Subset<T, ElementUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one Element.
     * @param {ElementUpsertArgs} args - Arguments to update or create a Element.
     * @example
     * // Update or create a Element
     * const element = await prisma.element.upsert({
     *   create: {
     *     // ... data to create a Element
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Element we want to update
     *   }
     * })
    **/
    upsert<T extends ElementUpsertArgs>(
      args: Subset<T, ElementUpsertArgs>
    ): CheckSelect<T, Prisma__ElementClient<Element>, Prisma__ElementClient<ElementGetPayload<T>>>

    /**
     * Find zero or one Element that matches the filter.
     * @param {FindUniqueElementArgs} args - Arguments to find a Element
     * @deprecated This will be deprecated please use prisma.element.findUnique
     * @example
     * // Get one Element
     * const element = await prisma.element.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueElementArgs>(
      args: Subset<T, FindUniqueElementArgs>
    ): CheckSelect<T, Prisma__ElementClient<Element | null>, Prisma__ElementClient<ElementGetPayload<T> | null>>

    /**
     * Count the number of Elements.
     * @param {FindManyElementArgs} args - Arguments to filter Elements to count.
     * @example
     * // Count the number of Elements
     * const count = await prisma.element.count({
     *   where: {
     *     // ... the filter for the Elements we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyElementArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a Element.
     * @param {AggregateElementArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateElementArgs>(args: Subset<T, AggregateElementArgs>): Promise<GetElementAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Element.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ElementClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    characters<T extends FindManyCharacterArgs = {}>(args?: Subset<T, FindManyCharacterArgs>): CheckSelect<T, Promise<Array<Character>>, Promise<Array<CharacterGetPayload<T>>>>;

    characterProfiles<T extends FindManyCharacterProfileArgs = {}>(args?: Subset<T, FindManyCharacterProfileArgs>): CheckSelect<T, Promise<Array<CharacterProfile>>, Promise<Array<CharacterProfileGetPayload<T>>>>;

    region<T extends RegionArgs = {}>(args?: Subset<T, RegionArgs>): CheckSelect<T, Prisma__RegionClient<Region | null>, Prisma__RegionClient<RegionGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Element findUnique
   */
  export type FindUniqueElementArgs = {
    /**
     * Select specific fields to fetch from the Element
    **/
    select?: ElementSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ElementInclude | null
    /**
     * Filter, which Element to fetch.
    **/
    where: ElementWhereUniqueInput
  }


  /**
   * Element findFirst
   */
  export type FindFirstElementArgs = {
    /**
     * Select specific fields to fetch from the Element
    **/
    select?: ElementSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ElementInclude | null
    /**
     * Filter, which Element to fetch.
    **/
    where?: ElementWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Elements to fetch.
    **/
    orderBy?: Enumerable<ElementOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Elements.
    **/
    cursor?: ElementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Elements from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Elements.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of Elements.
    **/
    distinct?: Enumerable<ElementScalarFieldEnum>
  }


  /**
   * Element findMany
   */
  export type FindManyElementArgs = {
    /**
     * Select specific fields to fetch from the Element
    **/
    select?: ElementSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ElementInclude | null
    /**
     * Filter, which Elements to fetch.
    **/
    where?: ElementWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Elements to fetch.
    **/
    orderBy?: Enumerable<ElementOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Elements.
    **/
    cursor?: ElementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Elements from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Elements.
    **/
    skip?: number
    distinct?: Enumerable<ElementScalarFieldEnum>
  }


  /**
   * Element create
   */
  export type ElementCreateArgs = {
    /**
     * Select specific fields to fetch from the Element
    **/
    select?: ElementSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ElementInclude | null
    /**
     * The data needed to create a Element.
    **/
    data: XOR<ElementUncheckedCreateInput, ElementCreateInput>
  }


  /**
   * Element update
   */
  export type ElementUpdateArgs = {
    /**
     * Select specific fields to fetch from the Element
    **/
    select?: ElementSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ElementInclude | null
    /**
     * The data needed to update a Element.
    **/
    data: XOR<ElementUncheckedUpdateInput, ElementUpdateInput>
    /**
     * Choose, which Element to update.
    **/
    where: ElementWhereUniqueInput
  }


  /**
   * Element updateMany
   */
  export type ElementUpdateManyArgs = {
    data: XOR<ElementUncheckedUpdateManyInput, ElementUpdateManyMutationInput>
    where?: ElementWhereInput
  }


  /**
   * Element upsert
   */
  export type ElementUpsertArgs = {
    /**
     * Select specific fields to fetch from the Element
    **/
    select?: ElementSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ElementInclude | null
    /**
     * The filter to search for the Element to update in case it exists.
    **/
    where: ElementWhereUniqueInput
    /**
     * In case the Element found by the `where` argument doesn't exist, create a new Element with this data.
    **/
    create: XOR<ElementUncheckedCreateInput, ElementCreateInput>
    /**
     * In case the Element was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ElementUncheckedUpdateInput, ElementUpdateInput>
  }


  /**
   * Element delete
   */
  export type ElementDeleteArgs = {
    /**
     * Select specific fields to fetch from the Element
    **/
    select?: ElementSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ElementInclude | null
    /**
     * Filter which Element to delete.
    **/
    where: ElementWhereUniqueInput
  }


  /**
   * Element deleteMany
   */
  export type ElementDeleteManyArgs = {
    where?: ElementWhereInput
  }


  /**
   * Element without action
   */
  export type ElementArgs = {
    /**
     * Select specific fields to fetch from the Element
    **/
    select?: ElementSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ElementInclude | null
  }



  /**
   * Model Region
   */


  export type AggregateRegion = {
    count: number | null
    min: RegionMinAggregateOutputType | null
    max: RegionMaxAggregateOutputType | null
  }

  export type RegionMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
  }

  export type RegionMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
  }

  export type RegionCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    _all: number
  }


  export type RegionMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
  }

  export type RegionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
  }

  export type RegionCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    _all?: true
  }

  export type AggregateRegionArgs = {
    /**
     * Filter which Region to aggregate.
    **/
    where?: RegionWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Regions to fetch.
    **/
    orderBy?: Enumerable<RegionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Regions
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: RegionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: RegionMaxAggregateInputType
  }

  export type GetRegionAggregateType<T extends AggregateRegionArgs> = {
    [P in keyof T]: P extends 'count' ? number : never
  }



    



  export type RegionSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    characterProfiles?: boolean | FindManyCharacterProfileArgs
    domains?: boolean | FindManyDomainArgs
    element?: boolean | ElementArgs
  }

  export type RegionInclude = {
    characterProfiles?: boolean | FindManyCharacterProfileArgs
    domains?: boolean | FindManyDomainArgs
    element?: boolean | ElementArgs
  }

  export type RegionGetPayload<
    S extends boolean | null | undefined | RegionArgs,
    U = keyof S
      > = S extends true
        ? Region
    : S extends undefined
    ? never
    : S extends RegionArgs | FindManyRegionArgs
    ?'include' extends U
    ? Region  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'characterProfiles'
        ? Array < CharacterProfileGetPayload<S['include'][P]>>  :
        P extends 'domains'
        ? Array < DomainGetPayload<S['include'][P]>>  :
        P extends 'element'
        ? ElementGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Region ?Region [P]
  : 
          P extends 'characterProfiles'
        ? Array < CharacterProfileGetPayload<S['select'][P]>>  :
        P extends 'domains'
        ? Array < DomainGetPayload<S['select'][P]>>  :
        P extends 'element'
        ? ElementGetPayload<S['select'][P]> | null : never
  } 
    : Region
  : Region


  export interface RegionDelegate {
    /**
     * Find zero or one Region that matches the filter.
     * @param {FindUniqueRegionArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueRegionArgs>(
      args: Subset<T, FindUniqueRegionArgs>
    ): CheckSelect<T, Prisma__RegionClient<Region | null>, Prisma__RegionClient<RegionGetPayload<T> | null>>

    /**
     * Find the first Region that matches the filter.
     * @param {FindFirstRegionArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstRegionArgs>(
      args?: Subset<T, FindFirstRegionArgs>
    ): CheckSelect<T, Prisma__RegionClient<Region | null>, Prisma__RegionClient<RegionGetPayload<T> | null>>

    /**
     * Find zero or more Regions that matches the filter.
     * @param {FindManyRegionArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Regions
     * const regions = await prisma.region.findMany()
     * 
     * // Get first 10 Regions
     * const regions = await prisma.region.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const regionWithIdOnly = await prisma.region.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyRegionArgs>(
      args?: Subset<T, FindManyRegionArgs>
    ): CheckSelect<T, Promise<Array<Region>>, Promise<Array<RegionGetPayload<T>>>>

    /**
     * Create a Region.
     * @param {RegionCreateArgs} args - Arguments to create a Region.
     * @example
     * // Create one Region
     * const Region = await prisma.region.create({
     *   data: {
     *     // ... data to create a Region
     *   }
     * })
     * 
    **/
    create<T extends RegionCreateArgs>(
      args: Subset<T, RegionCreateArgs>
    ): CheckSelect<T, Prisma__RegionClient<Region>, Prisma__RegionClient<RegionGetPayload<T>>>

    /**
     * Delete a Region.
     * @param {RegionDeleteArgs} args - Arguments to delete one Region.
     * @example
     * // Delete one Region
     * const Region = await prisma.region.delete({
     *   where: {
     *     // ... filter to delete one Region
     *   }
     * })
     * 
    **/
    delete<T extends RegionDeleteArgs>(
      args: Subset<T, RegionDeleteArgs>
    ): CheckSelect<T, Prisma__RegionClient<Region>, Prisma__RegionClient<RegionGetPayload<T>>>

    /**
     * Update one Region.
     * @param {RegionUpdateArgs} args - Arguments to update one Region.
     * @example
     * // Update one Region
     * const region = await prisma.region.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends RegionUpdateArgs>(
      args: Subset<T, RegionUpdateArgs>
    ): CheckSelect<T, Prisma__RegionClient<Region>, Prisma__RegionClient<RegionGetPayload<T>>>

    /**
     * Delete zero or more Regions.
     * @param {RegionDeleteManyArgs} args - Arguments to filter Regions to delete.
     * @example
     * // Delete a few Regions
     * const { count } = await prisma.region.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends RegionDeleteManyArgs>(
      args?: Subset<T, RegionDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more Regions.
     * @param {RegionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Regions
     * const region = await prisma.region.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends RegionUpdateManyArgs>(
      args: Subset<T, RegionUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one Region.
     * @param {RegionUpsertArgs} args - Arguments to update or create a Region.
     * @example
     * // Update or create a Region
     * const region = await prisma.region.upsert({
     *   create: {
     *     // ... data to create a Region
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Region we want to update
     *   }
     * })
    **/
    upsert<T extends RegionUpsertArgs>(
      args: Subset<T, RegionUpsertArgs>
    ): CheckSelect<T, Prisma__RegionClient<Region>, Prisma__RegionClient<RegionGetPayload<T>>>

    /**
     * Find zero or one Region that matches the filter.
     * @param {FindUniqueRegionArgs} args - Arguments to find a Region
     * @deprecated This will be deprecated please use prisma.region.findUnique
     * @example
     * // Get one Region
     * const region = await prisma.region.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueRegionArgs>(
      args: Subset<T, FindUniqueRegionArgs>
    ): CheckSelect<T, Prisma__RegionClient<Region | null>, Prisma__RegionClient<RegionGetPayload<T> | null>>

    /**
     * Count the number of Regions.
     * @param {FindManyRegionArgs} args - Arguments to filter Regions to count.
     * @example
     * // Count the number of Regions
     * const count = await prisma.region.count({
     *   where: {
     *     // ... the filter for the Regions we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyRegionArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a Region.
     * @param {AggregateRegionArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateRegionArgs>(args: Subset<T, AggregateRegionArgs>): Promise<GetRegionAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Region.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__RegionClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    characterProfiles<T extends FindManyCharacterProfileArgs = {}>(args?: Subset<T, FindManyCharacterProfileArgs>): CheckSelect<T, Promise<Array<CharacterProfile>>, Promise<Array<CharacterProfileGetPayload<T>>>>;

    domains<T extends FindManyDomainArgs = {}>(args?: Subset<T, FindManyDomainArgs>): CheckSelect<T, Promise<Array<Domain>>, Promise<Array<DomainGetPayload<T>>>>;

    element<T extends ElementArgs = {}>(args?: Subset<T, ElementArgs>): CheckSelect<T, Prisma__ElementClient<Element | null>, Prisma__ElementClient<ElementGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Region findUnique
   */
  export type FindUniqueRegionArgs = {
    /**
     * Select specific fields to fetch from the Region
    **/
    select?: RegionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: RegionInclude | null
    /**
     * Filter, which Region to fetch.
    **/
    where: RegionWhereUniqueInput
  }


  /**
   * Region findFirst
   */
  export type FindFirstRegionArgs = {
    /**
     * Select specific fields to fetch from the Region
    **/
    select?: RegionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: RegionInclude | null
    /**
     * Filter, which Region to fetch.
    **/
    where?: RegionWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Regions to fetch.
    **/
    orderBy?: Enumerable<RegionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Regions.
    **/
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of Regions.
    **/
    distinct?: Enumerable<RegionScalarFieldEnum>
  }


  /**
   * Region findMany
   */
  export type FindManyRegionArgs = {
    /**
     * Select specific fields to fetch from the Region
    **/
    select?: RegionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: RegionInclude | null
    /**
     * Filter, which Regions to fetch.
    **/
    where?: RegionWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Regions to fetch.
    **/
    orderBy?: Enumerable<RegionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Regions.
    **/
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
    **/
    skip?: number
    distinct?: Enumerable<RegionScalarFieldEnum>
  }


  /**
   * Region create
   */
  export type RegionCreateArgs = {
    /**
     * Select specific fields to fetch from the Region
    **/
    select?: RegionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: RegionInclude | null
    /**
     * The data needed to create a Region.
    **/
    data: XOR<RegionUncheckedCreateInput, RegionCreateInput>
  }


  /**
   * Region update
   */
  export type RegionUpdateArgs = {
    /**
     * Select specific fields to fetch from the Region
    **/
    select?: RegionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: RegionInclude | null
    /**
     * The data needed to update a Region.
    **/
    data: XOR<RegionUncheckedUpdateInput, RegionUpdateInput>
    /**
     * Choose, which Region to update.
    **/
    where: RegionWhereUniqueInput
  }


  /**
   * Region updateMany
   */
  export type RegionUpdateManyArgs = {
    data: XOR<RegionUncheckedUpdateManyInput, RegionUpdateManyMutationInput>
    where?: RegionWhereInput
  }


  /**
   * Region upsert
   */
  export type RegionUpsertArgs = {
    /**
     * Select specific fields to fetch from the Region
    **/
    select?: RegionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: RegionInclude | null
    /**
     * The filter to search for the Region to update in case it exists.
    **/
    where: RegionWhereUniqueInput
    /**
     * In case the Region found by the `where` argument doesn't exist, create a new Region with this data.
    **/
    create: XOR<RegionUncheckedCreateInput, RegionCreateInput>
    /**
     * In case the Region was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<RegionUncheckedUpdateInput, RegionUpdateInput>
  }


  /**
   * Region delete
   */
  export type RegionDeleteArgs = {
    /**
     * Select specific fields to fetch from the Region
    **/
    select?: RegionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: RegionInclude | null
    /**
     * Filter which Region to delete.
    **/
    where: RegionWhereUniqueInput
  }


  /**
   * Region deleteMany
   */
  export type RegionDeleteManyArgs = {
    where?: RegionWhereInput
  }


  /**
   * Region without action
   */
  export type RegionArgs = {
    /**
     * Select specific fields to fetch from the Region
    **/
    select?: RegionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: RegionInclude | null
  }



  /**
   * Model Weapon
   */


  export type AggregateWeapon = {
    count: number | null
    avg: WeaponAvgAggregateOutputType | null
    sum: WeaponSumAggregateOutputType | null
    min: WeaponMinAggregateOutputType | null
    max: WeaponMaxAggregateOutputType | null
  }

  export type WeaponAvgAggregateOutputType = {
    rarity: number | null
  }

  export type WeaponSumAggregateOutputType = {
    rarity: number | null
  }

  export type WeaponMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    baseStats: JsonValue | null
    description: string | null
    image: string | null
    lore: string | null
    passive: JsonValue | null
    rarity: number | null
    refinements: JsonValue | null
    stats: JsonValue | null
    secondaryStatType: WeaponSecondaryStatType | null
    type: WeaponType | null
  }

  export type WeaponMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    baseStats: JsonValue | null
    description: string | null
    image: string | null
    lore: string | null
    passive: JsonValue | null
    rarity: number | null
    refinements: JsonValue | null
    stats: JsonValue | null
    secondaryStatType: WeaponSecondaryStatType | null
    type: WeaponType | null
  }

  export type WeaponCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    baseStats: number | null
    description: number | null
    image: number | null
    lore: number | null
    passive: number | null
    rarity: number | null
    refinements: number | null
    stats: number | null
    secondaryStatType: number | null
    type: number | null
    _all: number
  }


  export type WeaponAvgAggregateInputType = {
    rarity?: true
  }

  export type WeaponSumAggregateInputType = {
    rarity?: true
  }

  export type WeaponMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    baseStats?: true
    description?: true
    image?: true
    lore?: true
    passive?: true
    rarity?: true
    refinements?: true
    stats?: true
    secondaryStatType?: true
    type?: true
  }

  export type WeaponMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    baseStats?: true
    description?: true
    image?: true
    lore?: true
    passive?: true
    rarity?: true
    refinements?: true
    stats?: true
    secondaryStatType?: true
    type?: true
  }

  export type WeaponCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    baseStats?: true
    description?: true
    image?: true
    lore?: true
    passive?: true
    rarity?: true
    refinements?: true
    stats?: true
    secondaryStatType?: true
    type?: true
    _all?: true
  }

  export type AggregateWeaponArgs = {
    /**
     * Filter which Weapon to aggregate.
    **/
    where?: WeaponWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Weapons to fetch.
    **/
    orderBy?: Enumerable<WeaponOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WeaponWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Weapons from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Weapons.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Weapons
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: WeaponAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: WeaponSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WeaponMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WeaponMaxAggregateInputType
  }

  export type GetWeaponAggregateType<T extends AggregateWeaponArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetWeaponAggregateScalarType<T[P]>
  }

  export type GetWeaponAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof WeaponAvgAggregateOutputType ? WeaponAvgAggregateOutputType[P] : never
  }

    



  export type WeaponSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    baseStats?: boolean
    description?: boolean
    image?: boolean
    lore?: boolean
    passive?: boolean
    rarity?: boolean
    refinements?: boolean
    stats?: boolean
    secondaryStatType?: boolean
    type?: boolean
    ascensions?: boolean | FindManyWeaponAscensionArgs
    forgeRecipe?: boolean | ForgeRecipeArgs
  }

  export type WeaponInclude = {
    ascensions?: boolean | FindManyWeaponAscensionArgs
    forgeRecipe?: boolean | ForgeRecipeArgs
  }

  export type WeaponGetPayload<
    S extends boolean | null | undefined | WeaponArgs,
    U = keyof S
      > = S extends true
        ? Weapon
    : S extends undefined
    ? never
    : S extends WeaponArgs | FindManyWeaponArgs
    ?'include' extends U
    ? Weapon  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'ascensions'
        ? Array < WeaponAscensionGetPayload<S['include'][P]>>  :
        P extends 'forgeRecipe'
        ? ForgeRecipeGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Weapon ?Weapon [P]
  : 
          P extends 'ascensions'
        ? Array < WeaponAscensionGetPayload<S['select'][P]>>  :
        P extends 'forgeRecipe'
        ? ForgeRecipeGetPayload<S['select'][P]> | null : never
  } 
    : Weapon
  : Weapon


  export interface WeaponDelegate {
    /**
     * Find zero or one Weapon that matches the filter.
     * @param {FindUniqueWeaponArgs} args - Arguments to find a Weapon
     * @example
     * // Get one Weapon
     * const weapon = await prisma.weapon.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueWeaponArgs>(
      args: Subset<T, FindUniqueWeaponArgs>
    ): CheckSelect<T, Prisma__WeaponClient<Weapon | null>, Prisma__WeaponClient<WeaponGetPayload<T> | null>>

    /**
     * Find the first Weapon that matches the filter.
     * @param {FindFirstWeaponArgs} args - Arguments to find a Weapon
     * @example
     * // Get one Weapon
     * const weapon = await prisma.weapon.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstWeaponArgs>(
      args?: Subset<T, FindFirstWeaponArgs>
    ): CheckSelect<T, Prisma__WeaponClient<Weapon | null>, Prisma__WeaponClient<WeaponGetPayload<T> | null>>

    /**
     * Find zero or more Weapons that matches the filter.
     * @param {FindManyWeaponArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Weapons
     * const weapons = await prisma.weapon.findMany()
     * 
     * // Get first 10 Weapons
     * const weapons = await prisma.weapon.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const weaponWithIdOnly = await prisma.weapon.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyWeaponArgs>(
      args?: Subset<T, FindManyWeaponArgs>
    ): CheckSelect<T, Promise<Array<Weapon>>, Promise<Array<WeaponGetPayload<T>>>>

    /**
     * Create a Weapon.
     * @param {WeaponCreateArgs} args - Arguments to create a Weapon.
     * @example
     * // Create one Weapon
     * const Weapon = await prisma.weapon.create({
     *   data: {
     *     // ... data to create a Weapon
     *   }
     * })
     * 
    **/
    create<T extends WeaponCreateArgs>(
      args: Subset<T, WeaponCreateArgs>
    ): CheckSelect<T, Prisma__WeaponClient<Weapon>, Prisma__WeaponClient<WeaponGetPayload<T>>>

    /**
     * Delete a Weapon.
     * @param {WeaponDeleteArgs} args - Arguments to delete one Weapon.
     * @example
     * // Delete one Weapon
     * const Weapon = await prisma.weapon.delete({
     *   where: {
     *     // ... filter to delete one Weapon
     *   }
     * })
     * 
    **/
    delete<T extends WeaponDeleteArgs>(
      args: Subset<T, WeaponDeleteArgs>
    ): CheckSelect<T, Prisma__WeaponClient<Weapon>, Prisma__WeaponClient<WeaponGetPayload<T>>>

    /**
     * Update one Weapon.
     * @param {WeaponUpdateArgs} args - Arguments to update one Weapon.
     * @example
     * // Update one Weapon
     * const weapon = await prisma.weapon.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WeaponUpdateArgs>(
      args: Subset<T, WeaponUpdateArgs>
    ): CheckSelect<T, Prisma__WeaponClient<Weapon>, Prisma__WeaponClient<WeaponGetPayload<T>>>

    /**
     * Delete zero or more Weapons.
     * @param {WeaponDeleteManyArgs} args - Arguments to filter Weapons to delete.
     * @example
     * // Delete a few Weapons
     * const { count } = await prisma.weapon.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WeaponDeleteManyArgs>(
      args?: Subset<T, WeaponDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more Weapons.
     * @param {WeaponUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Weapons
     * const weapon = await prisma.weapon.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WeaponUpdateManyArgs>(
      args: Subset<T, WeaponUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one Weapon.
     * @param {WeaponUpsertArgs} args - Arguments to update or create a Weapon.
     * @example
     * // Update or create a Weapon
     * const weapon = await prisma.weapon.upsert({
     *   create: {
     *     // ... data to create a Weapon
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Weapon we want to update
     *   }
     * })
    **/
    upsert<T extends WeaponUpsertArgs>(
      args: Subset<T, WeaponUpsertArgs>
    ): CheckSelect<T, Prisma__WeaponClient<Weapon>, Prisma__WeaponClient<WeaponGetPayload<T>>>

    /**
     * Find zero or one Weapon that matches the filter.
     * @param {FindUniqueWeaponArgs} args - Arguments to find a Weapon
     * @deprecated This will be deprecated please use prisma.weapon.findUnique
     * @example
     * // Get one Weapon
     * const weapon = await prisma.weapon.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueWeaponArgs>(
      args: Subset<T, FindUniqueWeaponArgs>
    ): CheckSelect<T, Prisma__WeaponClient<Weapon | null>, Prisma__WeaponClient<WeaponGetPayload<T> | null>>

    /**
     * Count the number of Weapons.
     * @param {FindManyWeaponArgs} args - Arguments to filter Weapons to count.
     * @example
     * // Count the number of Weapons
     * const count = await prisma.weapon.count({
     *   where: {
     *     // ... the filter for the Weapons we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyWeaponArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a Weapon.
     * @param {AggregateWeaponArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateWeaponArgs>(args: Subset<T, AggregateWeaponArgs>): Promise<GetWeaponAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Weapon.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WeaponClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    ascensions<T extends FindManyWeaponAscensionArgs = {}>(args?: Subset<T, FindManyWeaponAscensionArgs>): CheckSelect<T, Promise<Array<WeaponAscension>>, Promise<Array<WeaponAscensionGetPayload<T>>>>;

    forgeRecipe<T extends ForgeRecipeArgs = {}>(args?: Subset<T, ForgeRecipeArgs>): CheckSelect<T, Prisma__ForgeRecipeClient<ForgeRecipe | null>, Prisma__ForgeRecipeClient<ForgeRecipeGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Weapon findUnique
   */
  export type FindUniqueWeaponArgs = {
    /**
     * Select specific fields to fetch from the Weapon
    **/
    select?: WeaponSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponInclude | null
    /**
     * Filter, which Weapon to fetch.
    **/
    where: WeaponWhereUniqueInput
  }


  /**
   * Weapon findFirst
   */
  export type FindFirstWeaponArgs = {
    /**
     * Select specific fields to fetch from the Weapon
    **/
    select?: WeaponSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponInclude | null
    /**
     * Filter, which Weapon to fetch.
    **/
    where?: WeaponWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Weapons to fetch.
    **/
    orderBy?: Enumerable<WeaponOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Weapons.
    **/
    cursor?: WeaponWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Weapons from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Weapons.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of Weapons.
    **/
    distinct?: Enumerable<WeaponScalarFieldEnum>
  }


  /**
   * Weapon findMany
   */
  export type FindManyWeaponArgs = {
    /**
     * Select specific fields to fetch from the Weapon
    **/
    select?: WeaponSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponInclude | null
    /**
     * Filter, which Weapons to fetch.
    **/
    where?: WeaponWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Weapons to fetch.
    **/
    orderBy?: Enumerable<WeaponOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Weapons.
    **/
    cursor?: WeaponWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Weapons from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Weapons.
    **/
    skip?: number
    distinct?: Enumerable<WeaponScalarFieldEnum>
  }


  /**
   * Weapon create
   */
  export type WeaponCreateArgs = {
    /**
     * Select specific fields to fetch from the Weapon
    **/
    select?: WeaponSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponInclude | null
    /**
     * The data needed to create a Weapon.
    **/
    data: XOR<WeaponUncheckedCreateInput, WeaponCreateInput>
  }


  /**
   * Weapon update
   */
  export type WeaponUpdateArgs = {
    /**
     * Select specific fields to fetch from the Weapon
    **/
    select?: WeaponSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponInclude | null
    /**
     * The data needed to update a Weapon.
    **/
    data: XOR<WeaponUncheckedUpdateInput, WeaponUpdateInput>
    /**
     * Choose, which Weapon to update.
    **/
    where: WeaponWhereUniqueInput
  }


  /**
   * Weapon updateMany
   */
  export type WeaponUpdateManyArgs = {
    data: XOR<WeaponUncheckedUpdateManyInput, WeaponUpdateManyMutationInput>
    where?: WeaponWhereInput
  }


  /**
   * Weapon upsert
   */
  export type WeaponUpsertArgs = {
    /**
     * Select specific fields to fetch from the Weapon
    **/
    select?: WeaponSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponInclude | null
    /**
     * The filter to search for the Weapon to update in case it exists.
    **/
    where: WeaponWhereUniqueInput
    /**
     * In case the Weapon found by the `where` argument doesn't exist, create a new Weapon with this data.
    **/
    create: XOR<WeaponUncheckedCreateInput, WeaponCreateInput>
    /**
     * In case the Weapon was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WeaponUncheckedUpdateInput, WeaponUpdateInput>
  }


  /**
   * Weapon delete
   */
  export type WeaponDeleteArgs = {
    /**
     * Select specific fields to fetch from the Weapon
    **/
    select?: WeaponSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponInclude | null
    /**
     * Filter which Weapon to delete.
    **/
    where: WeaponWhereUniqueInput
  }


  /**
   * Weapon deleteMany
   */
  export type WeaponDeleteManyArgs = {
    where?: WeaponWhereInput
  }


  /**
   * Weapon without action
   */
  export type WeaponArgs = {
    /**
     * Select specific fields to fetch from the Weapon
    **/
    select?: WeaponSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponInclude | null
  }



  /**
   * Model WeaponAscension
   */


  export type AggregateWeaponAscension = {
    count: number | null
    avg: WeaponAscensionAvgAggregateOutputType | null
    sum: WeaponAscensionSumAggregateOutputType | null
    min: WeaponAscensionMinAggregateOutputType | null
    max: WeaponAscensionMaxAggregateOutputType | null
  }

  export type WeaponAscensionAvgAggregateOutputType = {
    level: number
    maxLevel: number
  }

  export type WeaponAscensionSumAggregateOutputType = {
    level: number
    maxLevel: number
  }

  export type WeaponAscensionMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    level: number
    maxLevel: number
    recipe: JsonValue | null
    weaponAscensionMaterialId: string | null
    weaponId: string | null
  }

  export type WeaponAscensionMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    level: number
    maxLevel: number
    recipe: JsonValue | null
    weaponAscensionMaterialId: string | null
    weaponId: string | null
  }

  export type WeaponAscensionCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    level: number
    maxLevel: number
    recipe: number | null
    weaponAscensionMaterialId: number | null
    weaponId: number | null
    _all: number
  }


  export type WeaponAscensionAvgAggregateInputType = {
    level?: true
    maxLevel?: true
  }

  export type WeaponAscensionSumAggregateInputType = {
    level?: true
    maxLevel?: true
  }

  export type WeaponAscensionMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    level?: true
    maxLevel?: true
    recipe?: true
    weaponAscensionMaterialId?: true
    weaponId?: true
  }

  export type WeaponAscensionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    level?: true
    maxLevel?: true
    recipe?: true
    weaponAscensionMaterialId?: true
    weaponId?: true
  }

  export type WeaponAscensionCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    level?: true
    maxLevel?: true
    recipe?: true
    weaponAscensionMaterialId?: true
    weaponId?: true
    _all?: true
  }

  export type AggregateWeaponAscensionArgs = {
    /**
     * Filter which WeaponAscension to aggregate.
    **/
    where?: WeaponAscensionWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of WeaponAscensions to fetch.
    **/
    orderBy?: Enumerable<WeaponAscensionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WeaponAscensionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeaponAscensions from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeaponAscensions.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WeaponAscensions
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: WeaponAscensionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: WeaponAscensionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WeaponAscensionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WeaponAscensionMaxAggregateInputType
  }

  export type GetWeaponAscensionAggregateType<T extends AggregateWeaponAscensionArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetWeaponAscensionAggregateScalarType<T[P]>
  }

  export type GetWeaponAscensionAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof WeaponAscensionAvgAggregateOutputType ? WeaponAscensionAvgAggregateOutputType[P] : never
  }

    



  export type WeaponAscensionSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    level?: boolean
    maxLevel?: boolean
    recipe?: boolean
    commonAscensionMaterials?: boolean | FindManyCommonAscensionMaterialArgs
    weaponAscensionMaterial?: boolean | WeaponAscensionMaterialArgs
    weaponAscensionMaterialId?: boolean
    weapon?: boolean | WeaponArgs
    weaponId?: boolean
  }

  export type WeaponAscensionInclude = {
    commonAscensionMaterials?: boolean | FindManyCommonAscensionMaterialArgs
    weaponAscensionMaterial?: boolean | WeaponAscensionMaterialArgs
    weapon?: boolean | WeaponArgs
  }

  export type WeaponAscensionGetPayload<
    S extends boolean | null | undefined | WeaponAscensionArgs,
    U = keyof S
      > = S extends true
        ? WeaponAscension
    : S extends undefined
    ? never
    : S extends WeaponAscensionArgs | FindManyWeaponAscensionArgs
    ?'include' extends U
    ? WeaponAscension  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'commonAscensionMaterials'
        ? Array < CommonAscensionMaterialGetPayload<S['include'][P]>>  :
        P extends 'weaponAscensionMaterial'
        ? WeaponAscensionMaterialGetPayload<S['include'][P]> | null :
        P extends 'weapon'
        ? WeaponGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WeaponAscension ?WeaponAscension [P]
  : 
          P extends 'commonAscensionMaterials'
        ? Array < CommonAscensionMaterialGetPayload<S['select'][P]>>  :
        P extends 'weaponAscensionMaterial'
        ? WeaponAscensionMaterialGetPayload<S['select'][P]> | null :
        P extends 'weapon'
        ? WeaponGetPayload<S['select'][P]> | null : never
  } 
    : WeaponAscension
  : WeaponAscension


  export interface WeaponAscensionDelegate {
    /**
     * Find zero or one WeaponAscension that matches the filter.
     * @param {FindUniqueWeaponAscensionArgs} args - Arguments to find a WeaponAscension
     * @example
     * // Get one WeaponAscension
     * const weaponAscension = await prisma.weaponAscension.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueWeaponAscensionArgs>(
      args: Subset<T, FindUniqueWeaponAscensionArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionClient<WeaponAscension | null>, Prisma__WeaponAscensionClient<WeaponAscensionGetPayload<T> | null>>

    /**
     * Find the first WeaponAscension that matches the filter.
     * @param {FindFirstWeaponAscensionArgs} args - Arguments to find a WeaponAscension
     * @example
     * // Get one WeaponAscension
     * const weaponAscension = await prisma.weaponAscension.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstWeaponAscensionArgs>(
      args?: Subset<T, FindFirstWeaponAscensionArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionClient<WeaponAscension | null>, Prisma__WeaponAscensionClient<WeaponAscensionGetPayload<T> | null>>

    /**
     * Find zero or more WeaponAscensions that matches the filter.
     * @param {FindManyWeaponAscensionArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WeaponAscensions
     * const weaponAscensions = await prisma.weaponAscension.findMany()
     * 
     * // Get first 10 WeaponAscensions
     * const weaponAscensions = await prisma.weaponAscension.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const weaponAscensionWithIdOnly = await prisma.weaponAscension.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyWeaponAscensionArgs>(
      args?: Subset<T, FindManyWeaponAscensionArgs>
    ): CheckSelect<T, Promise<Array<WeaponAscension>>, Promise<Array<WeaponAscensionGetPayload<T>>>>

    /**
     * Create a WeaponAscension.
     * @param {WeaponAscensionCreateArgs} args - Arguments to create a WeaponAscension.
     * @example
     * // Create one WeaponAscension
     * const WeaponAscension = await prisma.weaponAscension.create({
     *   data: {
     *     // ... data to create a WeaponAscension
     *   }
     * })
     * 
    **/
    create<T extends WeaponAscensionCreateArgs>(
      args: Subset<T, WeaponAscensionCreateArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionClient<WeaponAscension>, Prisma__WeaponAscensionClient<WeaponAscensionGetPayload<T>>>

    /**
     * Delete a WeaponAscension.
     * @param {WeaponAscensionDeleteArgs} args - Arguments to delete one WeaponAscension.
     * @example
     * // Delete one WeaponAscension
     * const WeaponAscension = await prisma.weaponAscension.delete({
     *   where: {
     *     // ... filter to delete one WeaponAscension
     *   }
     * })
     * 
    **/
    delete<T extends WeaponAscensionDeleteArgs>(
      args: Subset<T, WeaponAscensionDeleteArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionClient<WeaponAscension>, Prisma__WeaponAscensionClient<WeaponAscensionGetPayload<T>>>

    /**
     * Update one WeaponAscension.
     * @param {WeaponAscensionUpdateArgs} args - Arguments to update one WeaponAscension.
     * @example
     * // Update one WeaponAscension
     * const weaponAscension = await prisma.weaponAscension.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WeaponAscensionUpdateArgs>(
      args: Subset<T, WeaponAscensionUpdateArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionClient<WeaponAscension>, Prisma__WeaponAscensionClient<WeaponAscensionGetPayload<T>>>

    /**
     * Delete zero or more WeaponAscensions.
     * @param {WeaponAscensionDeleteManyArgs} args - Arguments to filter WeaponAscensions to delete.
     * @example
     * // Delete a few WeaponAscensions
     * const { count } = await prisma.weaponAscension.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WeaponAscensionDeleteManyArgs>(
      args?: Subset<T, WeaponAscensionDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more WeaponAscensions.
     * @param {WeaponAscensionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WeaponAscensions
     * const weaponAscension = await prisma.weaponAscension.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WeaponAscensionUpdateManyArgs>(
      args: Subset<T, WeaponAscensionUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one WeaponAscension.
     * @param {WeaponAscensionUpsertArgs} args - Arguments to update or create a WeaponAscension.
     * @example
     * // Update or create a WeaponAscension
     * const weaponAscension = await prisma.weaponAscension.upsert({
     *   create: {
     *     // ... data to create a WeaponAscension
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WeaponAscension we want to update
     *   }
     * })
    **/
    upsert<T extends WeaponAscensionUpsertArgs>(
      args: Subset<T, WeaponAscensionUpsertArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionClient<WeaponAscension>, Prisma__WeaponAscensionClient<WeaponAscensionGetPayload<T>>>

    /**
     * Find zero or one WeaponAscension that matches the filter.
     * @param {FindUniqueWeaponAscensionArgs} args - Arguments to find a WeaponAscension
     * @deprecated This will be deprecated please use prisma.weaponAscension.findUnique
     * @example
     * // Get one WeaponAscension
     * const weaponAscension = await prisma.weaponAscension.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueWeaponAscensionArgs>(
      args: Subset<T, FindUniqueWeaponAscensionArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionClient<WeaponAscension | null>, Prisma__WeaponAscensionClient<WeaponAscensionGetPayload<T> | null>>

    /**
     * Count the number of WeaponAscensions.
     * @param {FindManyWeaponAscensionArgs} args - Arguments to filter WeaponAscensions to count.
     * @example
     * // Count the number of WeaponAscensions
     * const count = await prisma.weaponAscension.count({
     *   where: {
     *     // ... the filter for the WeaponAscensions we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyWeaponAscensionArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a WeaponAscension.
     * @param {AggregateWeaponAscensionArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateWeaponAscensionArgs>(args: Subset<T, AggregateWeaponAscensionArgs>): Promise<GetWeaponAscensionAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WeaponAscension.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WeaponAscensionClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    commonAscensionMaterials<T extends FindManyCommonAscensionMaterialArgs = {}>(args?: Subset<T, FindManyCommonAscensionMaterialArgs>): CheckSelect<T, Promise<Array<CommonAscensionMaterial>>, Promise<Array<CommonAscensionMaterialGetPayload<T>>>>;

    weaponAscensionMaterial<T extends WeaponAscensionMaterialArgs = {}>(args?: Subset<T, WeaponAscensionMaterialArgs>): CheckSelect<T, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterial | null>, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterialGetPayload<T> | null>>;

    weapon<T extends WeaponArgs = {}>(args?: Subset<T, WeaponArgs>): CheckSelect<T, Prisma__WeaponClient<Weapon | null>, Prisma__WeaponClient<WeaponGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WeaponAscension findUnique
   */
  export type FindUniqueWeaponAscensionArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscension
    **/
    select?: WeaponAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionInclude | null
    /**
     * Filter, which WeaponAscension to fetch.
    **/
    where: WeaponAscensionWhereUniqueInput
  }


  /**
   * WeaponAscension findFirst
   */
  export type FindFirstWeaponAscensionArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscension
    **/
    select?: WeaponAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionInclude | null
    /**
     * Filter, which WeaponAscension to fetch.
    **/
    where?: WeaponAscensionWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of WeaponAscensions to fetch.
    **/
    orderBy?: Enumerable<WeaponAscensionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WeaponAscensions.
    **/
    cursor?: WeaponAscensionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeaponAscensions from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeaponAscensions.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of WeaponAscensions.
    **/
    distinct?: Enumerable<WeaponAscensionScalarFieldEnum>
  }


  /**
   * WeaponAscension findMany
   */
  export type FindManyWeaponAscensionArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscension
    **/
    select?: WeaponAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionInclude | null
    /**
     * Filter, which WeaponAscensions to fetch.
    **/
    where?: WeaponAscensionWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of WeaponAscensions to fetch.
    **/
    orderBy?: Enumerable<WeaponAscensionOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WeaponAscensions.
    **/
    cursor?: WeaponAscensionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeaponAscensions from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeaponAscensions.
    **/
    skip?: number
    distinct?: Enumerable<WeaponAscensionScalarFieldEnum>
  }


  /**
   * WeaponAscension create
   */
  export type WeaponAscensionCreateArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscension
    **/
    select?: WeaponAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionInclude | null
    /**
     * The data needed to create a WeaponAscension.
    **/
    data: XOR<WeaponAscensionUncheckedCreateInput, WeaponAscensionCreateInput>
  }


  /**
   * WeaponAscension update
   */
  export type WeaponAscensionUpdateArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscension
    **/
    select?: WeaponAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionInclude | null
    /**
     * The data needed to update a WeaponAscension.
    **/
    data: XOR<WeaponAscensionUncheckedUpdateInput, WeaponAscensionUpdateInput>
    /**
     * Choose, which WeaponAscension to update.
    **/
    where: WeaponAscensionWhereUniqueInput
  }


  /**
   * WeaponAscension updateMany
   */
  export type WeaponAscensionUpdateManyArgs = {
    data: XOR<WeaponAscensionUncheckedUpdateManyInput, WeaponAscensionUpdateManyMutationInput>
    where?: WeaponAscensionWhereInput
  }


  /**
   * WeaponAscension upsert
   */
  export type WeaponAscensionUpsertArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscension
    **/
    select?: WeaponAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionInclude | null
    /**
     * The filter to search for the WeaponAscension to update in case it exists.
    **/
    where: WeaponAscensionWhereUniqueInput
    /**
     * In case the WeaponAscension found by the `where` argument doesn't exist, create a new WeaponAscension with this data.
    **/
    create: XOR<WeaponAscensionUncheckedCreateInput, WeaponAscensionCreateInput>
    /**
     * In case the WeaponAscension was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WeaponAscensionUncheckedUpdateInput, WeaponAscensionUpdateInput>
  }


  /**
   * WeaponAscension delete
   */
  export type WeaponAscensionDeleteArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscension
    **/
    select?: WeaponAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionInclude | null
    /**
     * Filter which WeaponAscension to delete.
    **/
    where: WeaponAscensionWhereUniqueInput
  }


  /**
   * WeaponAscension deleteMany
   */
  export type WeaponAscensionDeleteManyArgs = {
    where?: WeaponAscensionWhereInput
  }


  /**
   * WeaponAscension without action
   */
  export type WeaponAscensionArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscension
    **/
    select?: WeaponAscensionSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionInclude | null
  }



  /**
   * Model CommonAscensionMaterial
   */


  export type AggregateCommonAscensionMaterial = {
    count: number | null
    avg: CommonAscensionMaterialAvgAggregateOutputType | null
    sum: CommonAscensionMaterialSumAggregateOutputType | null
    min: CommonAscensionMaterialMinAggregateOutputType | null
    max: CommonAscensionMaterialMaxAggregateOutputType | null
  }

  export type CommonAscensionMaterialAvgAggregateOutputType = {
    rarity: number
  }

  export type CommonAscensionMaterialSumAggregateOutputType = {
    rarity: number
  }

  export type CommonAscensionMaterialMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    group: CommonAscensionMaterialGroup | null
  }

  export type CommonAscensionMaterialMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    group: CommonAscensionMaterialGroup | null
  }

  export type CommonAscensionMaterialCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    description: number | null
    image: number | null
    rarity: number
    group: number | null
    _all: number
  }


  export type CommonAscensionMaterialAvgAggregateInputType = {
    rarity?: true
  }

  export type CommonAscensionMaterialSumAggregateInputType = {
    rarity?: true
  }

  export type CommonAscensionMaterialMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    group?: true
  }

  export type CommonAscensionMaterialMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    group?: true
  }

  export type CommonAscensionMaterialCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    group?: true
    _all?: true
  }

  export type AggregateCommonAscensionMaterialArgs = {
    /**
     * Filter which CommonAscensionMaterial to aggregate.
    **/
    where?: CommonAscensionMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CommonAscensionMaterials to fetch.
    **/
    orderBy?: Enumerable<CommonAscensionMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: CommonAscensionMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommonAscensionMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommonAscensionMaterials.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CommonAscensionMaterials
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: CommonAscensionMaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: CommonAscensionMaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: CommonAscensionMaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: CommonAscensionMaterialMaxAggregateInputType
  }

  export type GetCommonAscensionMaterialAggregateType<T extends AggregateCommonAscensionMaterialArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetCommonAscensionMaterialAggregateScalarType<T[P]>
  }

  export type GetCommonAscensionMaterialAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof CommonAscensionMaterialAvgAggregateOutputType ? CommonAscensionMaterialAvgAggregateOutputType[P] : never
  }

    



  export type CommonAscensionMaterialSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    rarity?: boolean
    group?: boolean
    characterAscensions?: boolean | FindManyCharacterAscensionArgs
    weaponAscensions?: boolean | FindManyWeaponAscensionArgs
  }

  export type CommonAscensionMaterialInclude = {
    characterAscensions?: boolean | FindManyCharacterAscensionArgs
    weaponAscensions?: boolean | FindManyWeaponAscensionArgs
  }

  export type CommonAscensionMaterialGetPayload<
    S extends boolean | null | undefined | CommonAscensionMaterialArgs,
    U = keyof S
      > = S extends true
        ? CommonAscensionMaterial
    : S extends undefined
    ? never
    : S extends CommonAscensionMaterialArgs | FindManyCommonAscensionMaterialArgs
    ?'include' extends U
    ? CommonAscensionMaterial  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'characterAscensions'
        ? Array < CharacterAscensionGetPayload<S['include'][P]>>  :
        P extends 'weaponAscensions'
        ? Array < WeaponAscensionGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof CommonAscensionMaterial ?CommonAscensionMaterial [P]
  : 
          P extends 'characterAscensions'
        ? Array < CharacterAscensionGetPayload<S['select'][P]>>  :
        P extends 'weaponAscensions'
        ? Array < WeaponAscensionGetPayload<S['select'][P]>>  : never
  } 
    : CommonAscensionMaterial
  : CommonAscensionMaterial


  export interface CommonAscensionMaterialDelegate {
    /**
     * Find zero or one CommonAscensionMaterial that matches the filter.
     * @param {FindUniqueCommonAscensionMaterialArgs} args - Arguments to find a CommonAscensionMaterial
     * @example
     * // Get one CommonAscensionMaterial
     * const commonAscensionMaterial = await prisma.commonAscensionMaterial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueCommonAscensionMaterialArgs>(
      args: Subset<T, FindUniqueCommonAscensionMaterialArgs>
    ): CheckSelect<T, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterial | null>, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterialGetPayload<T> | null>>

    /**
     * Find the first CommonAscensionMaterial that matches the filter.
     * @param {FindFirstCommonAscensionMaterialArgs} args - Arguments to find a CommonAscensionMaterial
     * @example
     * // Get one CommonAscensionMaterial
     * const commonAscensionMaterial = await prisma.commonAscensionMaterial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstCommonAscensionMaterialArgs>(
      args?: Subset<T, FindFirstCommonAscensionMaterialArgs>
    ): CheckSelect<T, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterial | null>, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterialGetPayload<T> | null>>

    /**
     * Find zero or more CommonAscensionMaterials that matches the filter.
     * @param {FindManyCommonAscensionMaterialArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CommonAscensionMaterials
     * const commonAscensionMaterials = await prisma.commonAscensionMaterial.findMany()
     * 
     * // Get first 10 CommonAscensionMaterials
     * const commonAscensionMaterials = await prisma.commonAscensionMaterial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commonAscensionMaterialWithIdOnly = await prisma.commonAscensionMaterial.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyCommonAscensionMaterialArgs>(
      args?: Subset<T, FindManyCommonAscensionMaterialArgs>
    ): CheckSelect<T, Promise<Array<CommonAscensionMaterial>>, Promise<Array<CommonAscensionMaterialGetPayload<T>>>>

    /**
     * Create a CommonAscensionMaterial.
     * @param {CommonAscensionMaterialCreateArgs} args - Arguments to create a CommonAscensionMaterial.
     * @example
     * // Create one CommonAscensionMaterial
     * const CommonAscensionMaterial = await prisma.commonAscensionMaterial.create({
     *   data: {
     *     // ... data to create a CommonAscensionMaterial
     *   }
     * })
     * 
    **/
    create<T extends CommonAscensionMaterialCreateArgs>(
      args: Subset<T, CommonAscensionMaterialCreateArgs>
    ): CheckSelect<T, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterial>, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterialGetPayload<T>>>

    /**
     * Delete a CommonAscensionMaterial.
     * @param {CommonAscensionMaterialDeleteArgs} args - Arguments to delete one CommonAscensionMaterial.
     * @example
     * // Delete one CommonAscensionMaterial
     * const CommonAscensionMaterial = await prisma.commonAscensionMaterial.delete({
     *   where: {
     *     // ... filter to delete one CommonAscensionMaterial
     *   }
     * })
     * 
    **/
    delete<T extends CommonAscensionMaterialDeleteArgs>(
      args: Subset<T, CommonAscensionMaterialDeleteArgs>
    ): CheckSelect<T, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterial>, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterialGetPayload<T>>>

    /**
     * Update one CommonAscensionMaterial.
     * @param {CommonAscensionMaterialUpdateArgs} args - Arguments to update one CommonAscensionMaterial.
     * @example
     * // Update one CommonAscensionMaterial
     * const commonAscensionMaterial = await prisma.commonAscensionMaterial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CommonAscensionMaterialUpdateArgs>(
      args: Subset<T, CommonAscensionMaterialUpdateArgs>
    ): CheckSelect<T, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterial>, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterialGetPayload<T>>>

    /**
     * Delete zero or more CommonAscensionMaterials.
     * @param {CommonAscensionMaterialDeleteManyArgs} args - Arguments to filter CommonAscensionMaterials to delete.
     * @example
     * // Delete a few CommonAscensionMaterials
     * const { count } = await prisma.commonAscensionMaterial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CommonAscensionMaterialDeleteManyArgs>(
      args?: Subset<T, CommonAscensionMaterialDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more CommonAscensionMaterials.
     * @param {CommonAscensionMaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CommonAscensionMaterials
     * const commonAscensionMaterial = await prisma.commonAscensionMaterial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CommonAscensionMaterialUpdateManyArgs>(
      args: Subset<T, CommonAscensionMaterialUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one CommonAscensionMaterial.
     * @param {CommonAscensionMaterialUpsertArgs} args - Arguments to update or create a CommonAscensionMaterial.
     * @example
     * // Update or create a CommonAscensionMaterial
     * const commonAscensionMaterial = await prisma.commonAscensionMaterial.upsert({
     *   create: {
     *     // ... data to create a CommonAscensionMaterial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CommonAscensionMaterial we want to update
     *   }
     * })
    **/
    upsert<T extends CommonAscensionMaterialUpsertArgs>(
      args: Subset<T, CommonAscensionMaterialUpsertArgs>
    ): CheckSelect<T, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterial>, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterialGetPayload<T>>>

    /**
     * Find zero or one CommonAscensionMaterial that matches the filter.
     * @param {FindUniqueCommonAscensionMaterialArgs} args - Arguments to find a CommonAscensionMaterial
     * @deprecated This will be deprecated please use prisma.commonAscensionMaterial.findUnique
     * @example
     * // Get one CommonAscensionMaterial
     * const commonAscensionMaterial = await prisma.commonAscensionMaterial.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueCommonAscensionMaterialArgs>(
      args: Subset<T, FindUniqueCommonAscensionMaterialArgs>
    ): CheckSelect<T, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterial | null>, Prisma__CommonAscensionMaterialClient<CommonAscensionMaterialGetPayload<T> | null>>

    /**
     * Count the number of CommonAscensionMaterials.
     * @param {FindManyCommonAscensionMaterialArgs} args - Arguments to filter CommonAscensionMaterials to count.
     * @example
     * // Count the number of CommonAscensionMaterials
     * const count = await prisma.commonAscensionMaterial.count({
     *   where: {
     *     // ... the filter for the CommonAscensionMaterials we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyCommonAscensionMaterialArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a CommonAscensionMaterial.
     * @param {AggregateCommonAscensionMaterialArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateCommonAscensionMaterialArgs>(args: Subset<T, AggregateCommonAscensionMaterialArgs>): Promise<GetCommonAscensionMaterialAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for CommonAscensionMaterial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CommonAscensionMaterialClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    characterAscensions<T extends FindManyCharacterAscensionArgs = {}>(args?: Subset<T, FindManyCharacterAscensionArgs>): CheckSelect<T, Promise<Array<CharacterAscension>>, Promise<Array<CharacterAscensionGetPayload<T>>>>;

    weaponAscensions<T extends FindManyWeaponAscensionArgs = {}>(args?: Subset<T, FindManyWeaponAscensionArgs>): CheckSelect<T, Promise<Array<WeaponAscension>>, Promise<Array<WeaponAscensionGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * CommonAscensionMaterial findUnique
   */
  export type FindUniqueCommonAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the CommonAscensionMaterial
    **/
    select?: CommonAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CommonAscensionMaterialInclude | null
    /**
     * Filter, which CommonAscensionMaterial to fetch.
    **/
    where: CommonAscensionMaterialWhereUniqueInput
  }


  /**
   * CommonAscensionMaterial findFirst
   */
  export type FindFirstCommonAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the CommonAscensionMaterial
    **/
    select?: CommonAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CommonAscensionMaterialInclude | null
    /**
     * Filter, which CommonAscensionMaterial to fetch.
    **/
    where?: CommonAscensionMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CommonAscensionMaterials to fetch.
    **/
    orderBy?: Enumerable<CommonAscensionMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommonAscensionMaterials.
    **/
    cursor?: CommonAscensionMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommonAscensionMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommonAscensionMaterials.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of CommonAscensionMaterials.
    **/
    distinct?: Enumerable<CommonAscensionMaterialScalarFieldEnum>
  }


  /**
   * CommonAscensionMaterial findMany
   */
  export type FindManyCommonAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the CommonAscensionMaterial
    **/
    select?: CommonAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CommonAscensionMaterialInclude | null
    /**
     * Filter, which CommonAscensionMaterials to fetch.
    **/
    where?: CommonAscensionMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CommonAscensionMaterials to fetch.
    **/
    orderBy?: Enumerable<CommonAscensionMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CommonAscensionMaterials.
    **/
    cursor?: CommonAscensionMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommonAscensionMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommonAscensionMaterials.
    **/
    skip?: number
    distinct?: Enumerable<CommonAscensionMaterialScalarFieldEnum>
  }


  /**
   * CommonAscensionMaterial create
   */
  export type CommonAscensionMaterialCreateArgs = {
    /**
     * Select specific fields to fetch from the CommonAscensionMaterial
    **/
    select?: CommonAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CommonAscensionMaterialInclude | null
    /**
     * The data needed to create a CommonAscensionMaterial.
    **/
    data: XOR<CommonAscensionMaterialUncheckedCreateInput, CommonAscensionMaterialCreateInput>
  }


  /**
   * CommonAscensionMaterial update
   */
  export type CommonAscensionMaterialUpdateArgs = {
    /**
     * Select specific fields to fetch from the CommonAscensionMaterial
    **/
    select?: CommonAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CommonAscensionMaterialInclude | null
    /**
     * The data needed to update a CommonAscensionMaterial.
    **/
    data: XOR<CommonAscensionMaterialUncheckedUpdateInput, CommonAscensionMaterialUpdateInput>
    /**
     * Choose, which CommonAscensionMaterial to update.
    **/
    where: CommonAscensionMaterialWhereUniqueInput
  }


  /**
   * CommonAscensionMaterial updateMany
   */
  export type CommonAscensionMaterialUpdateManyArgs = {
    data: XOR<CommonAscensionMaterialUncheckedUpdateManyInput, CommonAscensionMaterialUpdateManyMutationInput>
    where?: CommonAscensionMaterialWhereInput
  }


  /**
   * CommonAscensionMaterial upsert
   */
  export type CommonAscensionMaterialUpsertArgs = {
    /**
     * Select specific fields to fetch from the CommonAscensionMaterial
    **/
    select?: CommonAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CommonAscensionMaterialInclude | null
    /**
     * The filter to search for the CommonAscensionMaterial to update in case it exists.
    **/
    where: CommonAscensionMaterialWhereUniqueInput
    /**
     * In case the CommonAscensionMaterial found by the `where` argument doesn't exist, create a new CommonAscensionMaterial with this data.
    **/
    create: XOR<CommonAscensionMaterialUncheckedCreateInput, CommonAscensionMaterialCreateInput>
    /**
     * In case the CommonAscensionMaterial was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<CommonAscensionMaterialUncheckedUpdateInput, CommonAscensionMaterialUpdateInput>
  }


  /**
   * CommonAscensionMaterial delete
   */
  export type CommonAscensionMaterialDeleteArgs = {
    /**
     * Select specific fields to fetch from the CommonAscensionMaterial
    **/
    select?: CommonAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CommonAscensionMaterialInclude | null
    /**
     * Filter which CommonAscensionMaterial to delete.
    **/
    where: CommonAscensionMaterialWhereUniqueInput
  }


  /**
   * CommonAscensionMaterial deleteMany
   */
  export type CommonAscensionMaterialDeleteManyArgs = {
    where?: CommonAscensionMaterialWhereInput
  }


  /**
   * CommonAscensionMaterial without action
   */
  export type CommonAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the CommonAscensionMaterial
    **/
    select?: CommonAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CommonAscensionMaterialInclude | null
  }



  /**
   * Model WeaponAscensionMaterial
   */


  export type AggregateWeaponAscensionMaterial = {
    count: number | null
    avg: WeaponAscensionMaterialAvgAggregateOutputType | null
    sum: WeaponAscensionMaterialSumAggregateOutputType | null
    min: WeaponAscensionMaterialMinAggregateOutputType | null
    max: WeaponAscensionMaterialMaxAggregateOutputType | null
  }

  export type WeaponAscensionMaterialAvgAggregateOutputType = {
    rarity: number
  }

  export type WeaponAscensionMaterialSumAggregateOutputType = {
    rarity: number
  }

  export type WeaponAscensionMaterialMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    availability: JsonValue | null
    description: string | null
    image: string | null
    rarity: number
    group: WeaponAscensionMaterialGroup | null
    domainId: string | null
  }

  export type WeaponAscensionMaterialMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    availability: JsonValue | null
    description: string | null
    image: string | null
    rarity: number
    group: WeaponAscensionMaterialGroup | null
    domainId: string | null
  }

  export type WeaponAscensionMaterialCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    availability: number | null
    description: number | null
    image: number | null
    rarity: number
    group: number | null
    domainId: number | null
    _all: number
  }


  export type WeaponAscensionMaterialAvgAggregateInputType = {
    rarity?: true
  }

  export type WeaponAscensionMaterialSumAggregateInputType = {
    rarity?: true
  }

  export type WeaponAscensionMaterialMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    availability?: true
    description?: true
    image?: true
    rarity?: true
    group?: true
    domainId?: true
  }

  export type WeaponAscensionMaterialMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    availability?: true
    description?: true
    image?: true
    rarity?: true
    group?: true
    domainId?: true
  }

  export type WeaponAscensionMaterialCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    availability?: true
    description?: true
    image?: true
    rarity?: true
    group?: true
    domainId?: true
    _all?: true
  }

  export type AggregateWeaponAscensionMaterialArgs = {
    /**
     * Filter which WeaponAscensionMaterial to aggregate.
    **/
    where?: WeaponAscensionMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of WeaponAscensionMaterials to fetch.
    **/
    orderBy?: Enumerable<WeaponAscensionMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WeaponAscensionMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeaponAscensionMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeaponAscensionMaterials.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WeaponAscensionMaterials
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: WeaponAscensionMaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: WeaponAscensionMaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WeaponAscensionMaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WeaponAscensionMaterialMaxAggregateInputType
  }

  export type GetWeaponAscensionMaterialAggregateType<T extends AggregateWeaponAscensionMaterialArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetWeaponAscensionMaterialAggregateScalarType<T[P]>
  }

  export type GetWeaponAscensionMaterialAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof WeaponAscensionMaterialAvgAggregateOutputType ? WeaponAscensionMaterialAvgAggregateOutputType[P] : never
  }

    



  export type WeaponAscensionMaterialSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    availability?: boolean
    description?: boolean
    image?: boolean
    rarity?: boolean
    group?: boolean
    domain?: boolean | DomainArgs
    domainId?: boolean
    weaponAscensions?: boolean | FindManyWeaponAscensionArgs
  }

  export type WeaponAscensionMaterialInclude = {
    domain?: boolean | DomainArgs
    weaponAscensions?: boolean | FindManyWeaponAscensionArgs
  }

  export type WeaponAscensionMaterialGetPayload<
    S extends boolean | null | undefined | WeaponAscensionMaterialArgs,
    U = keyof S
      > = S extends true
        ? WeaponAscensionMaterial
    : S extends undefined
    ? never
    : S extends WeaponAscensionMaterialArgs | FindManyWeaponAscensionMaterialArgs
    ?'include' extends U
    ? WeaponAscensionMaterial  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'domain'
        ? DomainGetPayload<S['include'][P]> | null :
        P extends 'weaponAscensions'
        ? Array < WeaponAscensionGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WeaponAscensionMaterial ?WeaponAscensionMaterial [P]
  : 
          P extends 'domain'
        ? DomainGetPayload<S['select'][P]> | null :
        P extends 'weaponAscensions'
        ? Array < WeaponAscensionGetPayload<S['select'][P]>>  : never
  } 
    : WeaponAscensionMaterial
  : WeaponAscensionMaterial


  export interface WeaponAscensionMaterialDelegate {
    /**
     * Find zero or one WeaponAscensionMaterial that matches the filter.
     * @param {FindUniqueWeaponAscensionMaterialArgs} args - Arguments to find a WeaponAscensionMaterial
     * @example
     * // Get one WeaponAscensionMaterial
     * const weaponAscensionMaterial = await prisma.weaponAscensionMaterial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueWeaponAscensionMaterialArgs>(
      args: Subset<T, FindUniqueWeaponAscensionMaterialArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterial | null>, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterialGetPayload<T> | null>>

    /**
     * Find the first WeaponAscensionMaterial that matches the filter.
     * @param {FindFirstWeaponAscensionMaterialArgs} args - Arguments to find a WeaponAscensionMaterial
     * @example
     * // Get one WeaponAscensionMaterial
     * const weaponAscensionMaterial = await prisma.weaponAscensionMaterial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstWeaponAscensionMaterialArgs>(
      args?: Subset<T, FindFirstWeaponAscensionMaterialArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterial | null>, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterialGetPayload<T> | null>>

    /**
     * Find zero or more WeaponAscensionMaterials that matches the filter.
     * @param {FindManyWeaponAscensionMaterialArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WeaponAscensionMaterials
     * const weaponAscensionMaterials = await prisma.weaponAscensionMaterial.findMany()
     * 
     * // Get first 10 WeaponAscensionMaterials
     * const weaponAscensionMaterials = await prisma.weaponAscensionMaterial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const weaponAscensionMaterialWithIdOnly = await prisma.weaponAscensionMaterial.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyWeaponAscensionMaterialArgs>(
      args?: Subset<T, FindManyWeaponAscensionMaterialArgs>
    ): CheckSelect<T, Promise<Array<WeaponAscensionMaterial>>, Promise<Array<WeaponAscensionMaterialGetPayload<T>>>>

    /**
     * Create a WeaponAscensionMaterial.
     * @param {WeaponAscensionMaterialCreateArgs} args - Arguments to create a WeaponAscensionMaterial.
     * @example
     * // Create one WeaponAscensionMaterial
     * const WeaponAscensionMaterial = await prisma.weaponAscensionMaterial.create({
     *   data: {
     *     // ... data to create a WeaponAscensionMaterial
     *   }
     * })
     * 
    **/
    create<T extends WeaponAscensionMaterialCreateArgs>(
      args: Subset<T, WeaponAscensionMaterialCreateArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterial>, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterialGetPayload<T>>>

    /**
     * Delete a WeaponAscensionMaterial.
     * @param {WeaponAscensionMaterialDeleteArgs} args - Arguments to delete one WeaponAscensionMaterial.
     * @example
     * // Delete one WeaponAscensionMaterial
     * const WeaponAscensionMaterial = await prisma.weaponAscensionMaterial.delete({
     *   where: {
     *     // ... filter to delete one WeaponAscensionMaterial
     *   }
     * })
     * 
    **/
    delete<T extends WeaponAscensionMaterialDeleteArgs>(
      args: Subset<T, WeaponAscensionMaterialDeleteArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterial>, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterialGetPayload<T>>>

    /**
     * Update one WeaponAscensionMaterial.
     * @param {WeaponAscensionMaterialUpdateArgs} args - Arguments to update one WeaponAscensionMaterial.
     * @example
     * // Update one WeaponAscensionMaterial
     * const weaponAscensionMaterial = await prisma.weaponAscensionMaterial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WeaponAscensionMaterialUpdateArgs>(
      args: Subset<T, WeaponAscensionMaterialUpdateArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterial>, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterialGetPayload<T>>>

    /**
     * Delete zero or more WeaponAscensionMaterials.
     * @param {WeaponAscensionMaterialDeleteManyArgs} args - Arguments to filter WeaponAscensionMaterials to delete.
     * @example
     * // Delete a few WeaponAscensionMaterials
     * const { count } = await prisma.weaponAscensionMaterial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WeaponAscensionMaterialDeleteManyArgs>(
      args?: Subset<T, WeaponAscensionMaterialDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more WeaponAscensionMaterials.
     * @param {WeaponAscensionMaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WeaponAscensionMaterials
     * const weaponAscensionMaterial = await prisma.weaponAscensionMaterial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WeaponAscensionMaterialUpdateManyArgs>(
      args: Subset<T, WeaponAscensionMaterialUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one WeaponAscensionMaterial.
     * @param {WeaponAscensionMaterialUpsertArgs} args - Arguments to update or create a WeaponAscensionMaterial.
     * @example
     * // Update or create a WeaponAscensionMaterial
     * const weaponAscensionMaterial = await prisma.weaponAscensionMaterial.upsert({
     *   create: {
     *     // ... data to create a WeaponAscensionMaterial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WeaponAscensionMaterial we want to update
     *   }
     * })
    **/
    upsert<T extends WeaponAscensionMaterialUpsertArgs>(
      args: Subset<T, WeaponAscensionMaterialUpsertArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterial>, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterialGetPayload<T>>>

    /**
     * Find zero or one WeaponAscensionMaterial that matches the filter.
     * @param {FindUniqueWeaponAscensionMaterialArgs} args - Arguments to find a WeaponAscensionMaterial
     * @deprecated This will be deprecated please use prisma.weaponAscensionMaterial.findUnique
     * @example
     * // Get one WeaponAscensionMaterial
     * const weaponAscensionMaterial = await prisma.weaponAscensionMaterial.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueWeaponAscensionMaterialArgs>(
      args: Subset<T, FindUniqueWeaponAscensionMaterialArgs>
    ): CheckSelect<T, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterial | null>, Prisma__WeaponAscensionMaterialClient<WeaponAscensionMaterialGetPayload<T> | null>>

    /**
     * Count the number of WeaponAscensionMaterials.
     * @param {FindManyWeaponAscensionMaterialArgs} args - Arguments to filter WeaponAscensionMaterials to count.
     * @example
     * // Count the number of WeaponAscensionMaterials
     * const count = await prisma.weaponAscensionMaterial.count({
     *   where: {
     *     // ... the filter for the WeaponAscensionMaterials we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyWeaponAscensionMaterialArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a WeaponAscensionMaterial.
     * @param {AggregateWeaponAscensionMaterialArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateWeaponAscensionMaterialArgs>(args: Subset<T, AggregateWeaponAscensionMaterialArgs>): Promise<GetWeaponAscensionMaterialAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WeaponAscensionMaterial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WeaponAscensionMaterialClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    domain<T extends DomainArgs = {}>(args?: Subset<T, DomainArgs>): CheckSelect<T, Prisma__DomainClient<Domain | null>, Prisma__DomainClient<DomainGetPayload<T> | null>>;

    weaponAscensions<T extends FindManyWeaponAscensionArgs = {}>(args?: Subset<T, FindManyWeaponAscensionArgs>): CheckSelect<T, Promise<Array<WeaponAscension>>, Promise<Array<WeaponAscensionGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WeaponAscensionMaterial findUnique
   */
  export type FindUniqueWeaponAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscensionMaterial
    **/
    select?: WeaponAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionMaterialInclude | null
    /**
     * Filter, which WeaponAscensionMaterial to fetch.
    **/
    where: WeaponAscensionMaterialWhereUniqueInput
  }


  /**
   * WeaponAscensionMaterial findFirst
   */
  export type FindFirstWeaponAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscensionMaterial
    **/
    select?: WeaponAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionMaterialInclude | null
    /**
     * Filter, which WeaponAscensionMaterial to fetch.
    **/
    where?: WeaponAscensionMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of WeaponAscensionMaterials to fetch.
    **/
    orderBy?: Enumerable<WeaponAscensionMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WeaponAscensionMaterials.
    **/
    cursor?: WeaponAscensionMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeaponAscensionMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeaponAscensionMaterials.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of WeaponAscensionMaterials.
    **/
    distinct?: Enumerable<WeaponAscensionMaterialScalarFieldEnum>
  }


  /**
   * WeaponAscensionMaterial findMany
   */
  export type FindManyWeaponAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscensionMaterial
    **/
    select?: WeaponAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionMaterialInclude | null
    /**
     * Filter, which WeaponAscensionMaterials to fetch.
    **/
    where?: WeaponAscensionMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of WeaponAscensionMaterials to fetch.
    **/
    orderBy?: Enumerable<WeaponAscensionMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WeaponAscensionMaterials.
    **/
    cursor?: WeaponAscensionMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeaponAscensionMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeaponAscensionMaterials.
    **/
    skip?: number
    distinct?: Enumerable<WeaponAscensionMaterialScalarFieldEnum>
  }


  /**
   * WeaponAscensionMaterial create
   */
  export type WeaponAscensionMaterialCreateArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscensionMaterial
    **/
    select?: WeaponAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionMaterialInclude | null
    /**
     * The data needed to create a WeaponAscensionMaterial.
    **/
    data: XOR<WeaponAscensionMaterialUncheckedCreateInput, WeaponAscensionMaterialCreateInput>
  }


  /**
   * WeaponAscensionMaterial update
   */
  export type WeaponAscensionMaterialUpdateArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscensionMaterial
    **/
    select?: WeaponAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionMaterialInclude | null
    /**
     * The data needed to update a WeaponAscensionMaterial.
    **/
    data: XOR<WeaponAscensionMaterialUncheckedUpdateInput, WeaponAscensionMaterialUpdateInput>
    /**
     * Choose, which WeaponAscensionMaterial to update.
    **/
    where: WeaponAscensionMaterialWhereUniqueInput
  }


  /**
   * WeaponAscensionMaterial updateMany
   */
  export type WeaponAscensionMaterialUpdateManyArgs = {
    data: XOR<WeaponAscensionMaterialUncheckedUpdateManyInput, WeaponAscensionMaterialUpdateManyMutationInput>
    where?: WeaponAscensionMaterialWhereInput
  }


  /**
   * WeaponAscensionMaterial upsert
   */
  export type WeaponAscensionMaterialUpsertArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscensionMaterial
    **/
    select?: WeaponAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionMaterialInclude | null
    /**
     * The filter to search for the WeaponAscensionMaterial to update in case it exists.
    **/
    where: WeaponAscensionMaterialWhereUniqueInput
    /**
     * In case the WeaponAscensionMaterial found by the `where` argument doesn't exist, create a new WeaponAscensionMaterial with this data.
    **/
    create: XOR<WeaponAscensionMaterialUncheckedCreateInput, WeaponAscensionMaterialCreateInput>
    /**
     * In case the WeaponAscensionMaterial was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WeaponAscensionMaterialUncheckedUpdateInput, WeaponAscensionMaterialUpdateInput>
  }


  /**
   * WeaponAscensionMaterial delete
   */
  export type WeaponAscensionMaterialDeleteArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscensionMaterial
    **/
    select?: WeaponAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionMaterialInclude | null
    /**
     * Filter which WeaponAscensionMaterial to delete.
    **/
    where: WeaponAscensionMaterialWhereUniqueInput
  }


  /**
   * WeaponAscensionMaterial deleteMany
   */
  export type WeaponAscensionMaterialDeleteManyArgs = {
    where?: WeaponAscensionMaterialWhereInput
  }


  /**
   * WeaponAscensionMaterial without action
   */
  export type WeaponAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the WeaponAscensionMaterial
    **/
    select?: WeaponAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponAscensionMaterialInclude | null
  }



  /**
   * Model WeaponEnhancementMaterial
   */


  export type AggregateWeaponEnhancementMaterial = {
    count: number | null
    avg: WeaponEnhancementMaterialAvgAggregateOutputType | null
    sum: WeaponEnhancementMaterialSumAggregateOutputType | null
    min: WeaponEnhancementMaterialMinAggregateOutputType | null
    max: WeaponEnhancementMaterialMaxAggregateOutputType | null
  }

  export type WeaponEnhancementMaterialAvgAggregateOutputType = {
    rarity: number
  }

  export type WeaponEnhancementMaterialSumAggregateOutputType = {
    rarity: number
  }

  export type WeaponEnhancementMaterialMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    source: JsonValue | null
    recipeUseId: string | null
  }

  export type WeaponEnhancementMaterialMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    source: JsonValue | null
    recipeUseId: string | null
  }

  export type WeaponEnhancementMaterialCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    description: number | null
    image: number | null
    rarity: number
    source: number | null
    recipeUseId: number | null
    _all: number
  }


  export type WeaponEnhancementMaterialAvgAggregateInputType = {
    rarity?: true
  }

  export type WeaponEnhancementMaterialSumAggregateInputType = {
    rarity?: true
  }

  export type WeaponEnhancementMaterialMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
    recipeUseId?: true
  }

  export type WeaponEnhancementMaterialMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
    recipeUseId?: true
  }

  export type WeaponEnhancementMaterialCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
    recipeUseId?: true
    _all?: true
  }

  export type AggregateWeaponEnhancementMaterialArgs = {
    /**
     * Filter which WeaponEnhancementMaterial to aggregate.
    **/
    where?: WeaponEnhancementMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of WeaponEnhancementMaterials to fetch.
    **/
    orderBy?: Enumerable<WeaponEnhancementMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: WeaponEnhancementMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeaponEnhancementMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeaponEnhancementMaterials.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WeaponEnhancementMaterials
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: WeaponEnhancementMaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: WeaponEnhancementMaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: WeaponEnhancementMaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: WeaponEnhancementMaterialMaxAggregateInputType
  }

  export type GetWeaponEnhancementMaterialAggregateType<T extends AggregateWeaponEnhancementMaterialArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetWeaponEnhancementMaterialAggregateScalarType<T[P]>
  }

  export type GetWeaponEnhancementMaterialAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof WeaponEnhancementMaterialAvgAggregateOutputType ? WeaponEnhancementMaterialAvgAggregateOutputType[P] : never
  }

    



  export type WeaponEnhancementMaterialSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    rarity?: boolean
    source?: boolean
    recipeCreate?: boolean | ForgeRecipeArgs
    recipeUse?: boolean | ForgeRecipeArgs
    recipeUseId?: boolean
  }

  export type WeaponEnhancementMaterialInclude = {
    recipeCreate?: boolean | ForgeRecipeArgs
    recipeUse?: boolean | ForgeRecipeArgs
  }

  export type WeaponEnhancementMaterialGetPayload<
    S extends boolean | null | undefined | WeaponEnhancementMaterialArgs,
    U = keyof S
      > = S extends true
        ? WeaponEnhancementMaterial
    : S extends undefined
    ? never
    : S extends WeaponEnhancementMaterialArgs | FindManyWeaponEnhancementMaterialArgs
    ?'include' extends U
    ? WeaponEnhancementMaterial  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'recipeCreate'
        ? ForgeRecipeGetPayload<S['include'][P]> | null :
        P extends 'recipeUse'
        ? ForgeRecipeGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof WeaponEnhancementMaterial ?WeaponEnhancementMaterial [P]
  : 
          P extends 'recipeCreate'
        ? ForgeRecipeGetPayload<S['select'][P]> | null :
        P extends 'recipeUse'
        ? ForgeRecipeGetPayload<S['select'][P]> | null : never
  } 
    : WeaponEnhancementMaterial
  : WeaponEnhancementMaterial


  export interface WeaponEnhancementMaterialDelegate {
    /**
     * Find zero or one WeaponEnhancementMaterial that matches the filter.
     * @param {FindUniqueWeaponEnhancementMaterialArgs} args - Arguments to find a WeaponEnhancementMaterial
     * @example
     * // Get one WeaponEnhancementMaterial
     * const weaponEnhancementMaterial = await prisma.weaponEnhancementMaterial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueWeaponEnhancementMaterialArgs>(
      args: Subset<T, FindUniqueWeaponEnhancementMaterialArgs>
    ): CheckSelect<T, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterial | null>, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterialGetPayload<T> | null>>

    /**
     * Find the first WeaponEnhancementMaterial that matches the filter.
     * @param {FindFirstWeaponEnhancementMaterialArgs} args - Arguments to find a WeaponEnhancementMaterial
     * @example
     * // Get one WeaponEnhancementMaterial
     * const weaponEnhancementMaterial = await prisma.weaponEnhancementMaterial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstWeaponEnhancementMaterialArgs>(
      args?: Subset<T, FindFirstWeaponEnhancementMaterialArgs>
    ): CheckSelect<T, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterial | null>, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterialGetPayload<T> | null>>

    /**
     * Find zero or more WeaponEnhancementMaterials that matches the filter.
     * @param {FindManyWeaponEnhancementMaterialArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WeaponEnhancementMaterials
     * const weaponEnhancementMaterials = await prisma.weaponEnhancementMaterial.findMany()
     * 
     * // Get first 10 WeaponEnhancementMaterials
     * const weaponEnhancementMaterials = await prisma.weaponEnhancementMaterial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const weaponEnhancementMaterialWithIdOnly = await prisma.weaponEnhancementMaterial.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyWeaponEnhancementMaterialArgs>(
      args?: Subset<T, FindManyWeaponEnhancementMaterialArgs>
    ): CheckSelect<T, Promise<Array<WeaponEnhancementMaterial>>, Promise<Array<WeaponEnhancementMaterialGetPayload<T>>>>

    /**
     * Create a WeaponEnhancementMaterial.
     * @param {WeaponEnhancementMaterialCreateArgs} args - Arguments to create a WeaponEnhancementMaterial.
     * @example
     * // Create one WeaponEnhancementMaterial
     * const WeaponEnhancementMaterial = await prisma.weaponEnhancementMaterial.create({
     *   data: {
     *     // ... data to create a WeaponEnhancementMaterial
     *   }
     * })
     * 
    **/
    create<T extends WeaponEnhancementMaterialCreateArgs>(
      args: Subset<T, WeaponEnhancementMaterialCreateArgs>
    ): CheckSelect<T, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterial>, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterialGetPayload<T>>>

    /**
     * Delete a WeaponEnhancementMaterial.
     * @param {WeaponEnhancementMaterialDeleteArgs} args - Arguments to delete one WeaponEnhancementMaterial.
     * @example
     * // Delete one WeaponEnhancementMaterial
     * const WeaponEnhancementMaterial = await prisma.weaponEnhancementMaterial.delete({
     *   where: {
     *     // ... filter to delete one WeaponEnhancementMaterial
     *   }
     * })
     * 
    **/
    delete<T extends WeaponEnhancementMaterialDeleteArgs>(
      args: Subset<T, WeaponEnhancementMaterialDeleteArgs>
    ): CheckSelect<T, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterial>, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterialGetPayload<T>>>

    /**
     * Update one WeaponEnhancementMaterial.
     * @param {WeaponEnhancementMaterialUpdateArgs} args - Arguments to update one WeaponEnhancementMaterial.
     * @example
     * // Update one WeaponEnhancementMaterial
     * const weaponEnhancementMaterial = await prisma.weaponEnhancementMaterial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends WeaponEnhancementMaterialUpdateArgs>(
      args: Subset<T, WeaponEnhancementMaterialUpdateArgs>
    ): CheckSelect<T, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterial>, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterialGetPayload<T>>>

    /**
     * Delete zero or more WeaponEnhancementMaterials.
     * @param {WeaponEnhancementMaterialDeleteManyArgs} args - Arguments to filter WeaponEnhancementMaterials to delete.
     * @example
     * // Delete a few WeaponEnhancementMaterials
     * const { count } = await prisma.weaponEnhancementMaterial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends WeaponEnhancementMaterialDeleteManyArgs>(
      args?: Subset<T, WeaponEnhancementMaterialDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more WeaponEnhancementMaterials.
     * @param {WeaponEnhancementMaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WeaponEnhancementMaterials
     * const weaponEnhancementMaterial = await prisma.weaponEnhancementMaterial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends WeaponEnhancementMaterialUpdateManyArgs>(
      args: Subset<T, WeaponEnhancementMaterialUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one WeaponEnhancementMaterial.
     * @param {WeaponEnhancementMaterialUpsertArgs} args - Arguments to update or create a WeaponEnhancementMaterial.
     * @example
     * // Update or create a WeaponEnhancementMaterial
     * const weaponEnhancementMaterial = await prisma.weaponEnhancementMaterial.upsert({
     *   create: {
     *     // ... data to create a WeaponEnhancementMaterial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WeaponEnhancementMaterial we want to update
     *   }
     * })
    **/
    upsert<T extends WeaponEnhancementMaterialUpsertArgs>(
      args: Subset<T, WeaponEnhancementMaterialUpsertArgs>
    ): CheckSelect<T, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterial>, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterialGetPayload<T>>>

    /**
     * Find zero or one WeaponEnhancementMaterial that matches the filter.
     * @param {FindUniqueWeaponEnhancementMaterialArgs} args - Arguments to find a WeaponEnhancementMaterial
     * @deprecated This will be deprecated please use prisma.weaponEnhancementMaterial.findUnique
     * @example
     * // Get one WeaponEnhancementMaterial
     * const weaponEnhancementMaterial = await prisma.weaponEnhancementMaterial.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueWeaponEnhancementMaterialArgs>(
      args: Subset<T, FindUniqueWeaponEnhancementMaterialArgs>
    ): CheckSelect<T, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterial | null>, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterialGetPayload<T> | null>>

    /**
     * Count the number of WeaponEnhancementMaterials.
     * @param {FindManyWeaponEnhancementMaterialArgs} args - Arguments to filter WeaponEnhancementMaterials to count.
     * @example
     * // Count the number of WeaponEnhancementMaterials
     * const count = await prisma.weaponEnhancementMaterial.count({
     *   where: {
     *     // ... the filter for the WeaponEnhancementMaterials we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyWeaponEnhancementMaterialArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a WeaponEnhancementMaterial.
     * @param {AggregateWeaponEnhancementMaterialArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateWeaponEnhancementMaterialArgs>(args: Subset<T, AggregateWeaponEnhancementMaterialArgs>): Promise<GetWeaponEnhancementMaterialAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for WeaponEnhancementMaterial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__WeaponEnhancementMaterialClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    recipeCreate<T extends ForgeRecipeArgs = {}>(args?: Subset<T, ForgeRecipeArgs>): CheckSelect<T, Prisma__ForgeRecipeClient<ForgeRecipe | null>, Prisma__ForgeRecipeClient<ForgeRecipeGetPayload<T> | null>>;

    recipeUse<T extends ForgeRecipeArgs = {}>(args?: Subset<T, ForgeRecipeArgs>): CheckSelect<T, Prisma__ForgeRecipeClient<ForgeRecipe | null>, Prisma__ForgeRecipeClient<ForgeRecipeGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * WeaponEnhancementMaterial findUnique
   */
  export type FindUniqueWeaponEnhancementMaterialArgs = {
    /**
     * Select specific fields to fetch from the WeaponEnhancementMaterial
    **/
    select?: WeaponEnhancementMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponEnhancementMaterialInclude | null
    /**
     * Filter, which WeaponEnhancementMaterial to fetch.
    **/
    where: WeaponEnhancementMaterialWhereUniqueInput
  }


  /**
   * WeaponEnhancementMaterial findFirst
   */
  export type FindFirstWeaponEnhancementMaterialArgs = {
    /**
     * Select specific fields to fetch from the WeaponEnhancementMaterial
    **/
    select?: WeaponEnhancementMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponEnhancementMaterialInclude | null
    /**
     * Filter, which WeaponEnhancementMaterial to fetch.
    **/
    where?: WeaponEnhancementMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of WeaponEnhancementMaterials to fetch.
    **/
    orderBy?: Enumerable<WeaponEnhancementMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WeaponEnhancementMaterials.
    **/
    cursor?: WeaponEnhancementMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeaponEnhancementMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeaponEnhancementMaterials.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of WeaponEnhancementMaterials.
    **/
    distinct?: Enumerable<WeaponEnhancementMaterialScalarFieldEnum>
  }


  /**
   * WeaponEnhancementMaterial findMany
   */
  export type FindManyWeaponEnhancementMaterialArgs = {
    /**
     * Select specific fields to fetch from the WeaponEnhancementMaterial
    **/
    select?: WeaponEnhancementMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponEnhancementMaterialInclude | null
    /**
     * Filter, which WeaponEnhancementMaterials to fetch.
    **/
    where?: WeaponEnhancementMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of WeaponEnhancementMaterials to fetch.
    **/
    orderBy?: Enumerable<WeaponEnhancementMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WeaponEnhancementMaterials.
    **/
    cursor?: WeaponEnhancementMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WeaponEnhancementMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WeaponEnhancementMaterials.
    **/
    skip?: number
    distinct?: Enumerable<WeaponEnhancementMaterialScalarFieldEnum>
  }


  /**
   * WeaponEnhancementMaterial create
   */
  export type WeaponEnhancementMaterialCreateArgs = {
    /**
     * Select specific fields to fetch from the WeaponEnhancementMaterial
    **/
    select?: WeaponEnhancementMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponEnhancementMaterialInclude | null
    /**
     * The data needed to create a WeaponEnhancementMaterial.
    **/
    data: XOR<WeaponEnhancementMaterialUncheckedCreateInput, WeaponEnhancementMaterialCreateInput>
  }


  /**
   * WeaponEnhancementMaterial update
   */
  export type WeaponEnhancementMaterialUpdateArgs = {
    /**
     * Select specific fields to fetch from the WeaponEnhancementMaterial
    **/
    select?: WeaponEnhancementMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponEnhancementMaterialInclude | null
    /**
     * The data needed to update a WeaponEnhancementMaterial.
    **/
    data: XOR<WeaponEnhancementMaterialUncheckedUpdateInput, WeaponEnhancementMaterialUpdateInput>
    /**
     * Choose, which WeaponEnhancementMaterial to update.
    **/
    where: WeaponEnhancementMaterialWhereUniqueInput
  }


  /**
   * WeaponEnhancementMaterial updateMany
   */
  export type WeaponEnhancementMaterialUpdateManyArgs = {
    data: XOR<WeaponEnhancementMaterialUncheckedUpdateManyInput, WeaponEnhancementMaterialUpdateManyMutationInput>
    where?: WeaponEnhancementMaterialWhereInput
  }


  /**
   * WeaponEnhancementMaterial upsert
   */
  export type WeaponEnhancementMaterialUpsertArgs = {
    /**
     * Select specific fields to fetch from the WeaponEnhancementMaterial
    **/
    select?: WeaponEnhancementMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponEnhancementMaterialInclude | null
    /**
     * The filter to search for the WeaponEnhancementMaterial to update in case it exists.
    **/
    where: WeaponEnhancementMaterialWhereUniqueInput
    /**
     * In case the WeaponEnhancementMaterial found by the `where` argument doesn't exist, create a new WeaponEnhancementMaterial with this data.
    **/
    create: XOR<WeaponEnhancementMaterialUncheckedCreateInput, WeaponEnhancementMaterialCreateInput>
    /**
     * In case the WeaponEnhancementMaterial was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<WeaponEnhancementMaterialUncheckedUpdateInput, WeaponEnhancementMaterialUpdateInput>
  }


  /**
   * WeaponEnhancementMaterial delete
   */
  export type WeaponEnhancementMaterialDeleteArgs = {
    /**
     * Select specific fields to fetch from the WeaponEnhancementMaterial
    **/
    select?: WeaponEnhancementMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponEnhancementMaterialInclude | null
    /**
     * Filter which WeaponEnhancementMaterial to delete.
    **/
    where: WeaponEnhancementMaterialWhereUniqueInput
  }


  /**
   * WeaponEnhancementMaterial deleteMany
   */
  export type WeaponEnhancementMaterialDeleteManyArgs = {
    where?: WeaponEnhancementMaterialWhereInput
  }


  /**
   * WeaponEnhancementMaterial without action
   */
  export type WeaponEnhancementMaterialArgs = {
    /**
     * Select specific fields to fetch from the WeaponEnhancementMaterial
    **/
    select?: WeaponEnhancementMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: WeaponEnhancementMaterialInclude | null
  }



  /**
   * Model CharacterAscensionMaterial
   */


  export type AggregateCharacterAscensionMaterial = {
    count: number | null
    avg: CharacterAscensionMaterialAvgAggregateOutputType | null
    sum: CharacterAscensionMaterialSumAggregateOutputType | null
    min: CharacterAscensionMaterialMinAggregateOutputType | null
    max: CharacterAscensionMaterialMaxAggregateOutputType | null
  }

  export type CharacterAscensionMaterialAvgAggregateOutputType = {
    rarity: number
  }

  export type CharacterAscensionMaterialSumAggregateOutputType = {
    rarity: number
  }

  export type CharacterAscensionMaterialMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    source: JsonValue | null
    group: WeaponAscensionMaterialGroup | null
  }

  export type CharacterAscensionMaterialMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    source: JsonValue | null
    group: WeaponAscensionMaterialGroup | null
  }

  export type CharacterAscensionMaterialCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    description: number | null
    image: number | null
    rarity: number
    source: number | null
    group: number | null
    _all: number
  }


  export type CharacterAscensionMaterialAvgAggregateInputType = {
    rarity?: true
  }

  export type CharacterAscensionMaterialSumAggregateInputType = {
    rarity?: true
  }

  export type CharacterAscensionMaterialMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
    group?: true
  }

  export type CharacterAscensionMaterialMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
    group?: true
  }

  export type CharacterAscensionMaterialCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
    group?: true
    _all?: true
  }

  export type AggregateCharacterAscensionMaterialArgs = {
    /**
     * Filter which CharacterAscensionMaterial to aggregate.
    **/
    where?: CharacterAscensionMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CharacterAscensionMaterials to fetch.
    **/
    orderBy?: Enumerable<CharacterAscensionMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: CharacterAscensionMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CharacterAscensionMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CharacterAscensionMaterials.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CharacterAscensionMaterials
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: CharacterAscensionMaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: CharacterAscensionMaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: CharacterAscensionMaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: CharacterAscensionMaterialMaxAggregateInputType
  }

  export type GetCharacterAscensionMaterialAggregateType<T extends AggregateCharacterAscensionMaterialArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetCharacterAscensionMaterialAggregateScalarType<T[P]>
  }

  export type GetCharacterAscensionMaterialAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof CharacterAscensionMaterialAvgAggregateOutputType ? CharacterAscensionMaterialAvgAggregateOutputType[P] : never
  }

    



  export type CharacterAscensionMaterialSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    rarity?: boolean
    source?: boolean
    group?: boolean
    characterAscensions?: boolean | FindManyCharacterAscensionArgs
  }

  export type CharacterAscensionMaterialInclude = {
    characterAscensions?: boolean | FindManyCharacterAscensionArgs
  }

  export type CharacterAscensionMaterialGetPayload<
    S extends boolean | null | undefined | CharacterAscensionMaterialArgs,
    U = keyof S
      > = S extends true
        ? CharacterAscensionMaterial
    : S extends undefined
    ? never
    : S extends CharacterAscensionMaterialArgs | FindManyCharacterAscensionMaterialArgs
    ?'include' extends U
    ? CharacterAscensionMaterial  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'characterAscensions'
        ? Array < CharacterAscensionGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof CharacterAscensionMaterial ?CharacterAscensionMaterial [P]
  : 
          P extends 'characterAscensions'
        ? Array < CharacterAscensionGetPayload<S['select'][P]>>  : never
  } 
    : CharacterAscensionMaterial
  : CharacterAscensionMaterial


  export interface CharacterAscensionMaterialDelegate {
    /**
     * Find zero or one CharacterAscensionMaterial that matches the filter.
     * @param {FindUniqueCharacterAscensionMaterialArgs} args - Arguments to find a CharacterAscensionMaterial
     * @example
     * // Get one CharacterAscensionMaterial
     * const characterAscensionMaterial = await prisma.characterAscensionMaterial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueCharacterAscensionMaterialArgs>(
      args: Subset<T, FindUniqueCharacterAscensionMaterialArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterial | null>, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterialGetPayload<T> | null>>

    /**
     * Find the first CharacterAscensionMaterial that matches the filter.
     * @param {FindFirstCharacterAscensionMaterialArgs} args - Arguments to find a CharacterAscensionMaterial
     * @example
     * // Get one CharacterAscensionMaterial
     * const characterAscensionMaterial = await prisma.characterAscensionMaterial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstCharacterAscensionMaterialArgs>(
      args?: Subset<T, FindFirstCharacterAscensionMaterialArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterial | null>, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterialGetPayload<T> | null>>

    /**
     * Find zero or more CharacterAscensionMaterials that matches the filter.
     * @param {FindManyCharacterAscensionMaterialArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CharacterAscensionMaterials
     * const characterAscensionMaterials = await prisma.characterAscensionMaterial.findMany()
     * 
     * // Get first 10 CharacterAscensionMaterials
     * const characterAscensionMaterials = await prisma.characterAscensionMaterial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const characterAscensionMaterialWithIdOnly = await prisma.characterAscensionMaterial.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyCharacterAscensionMaterialArgs>(
      args?: Subset<T, FindManyCharacterAscensionMaterialArgs>
    ): CheckSelect<T, Promise<Array<CharacterAscensionMaterial>>, Promise<Array<CharacterAscensionMaterialGetPayload<T>>>>

    /**
     * Create a CharacterAscensionMaterial.
     * @param {CharacterAscensionMaterialCreateArgs} args - Arguments to create a CharacterAscensionMaterial.
     * @example
     * // Create one CharacterAscensionMaterial
     * const CharacterAscensionMaterial = await prisma.characterAscensionMaterial.create({
     *   data: {
     *     // ... data to create a CharacterAscensionMaterial
     *   }
     * })
     * 
    **/
    create<T extends CharacterAscensionMaterialCreateArgs>(
      args: Subset<T, CharacterAscensionMaterialCreateArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterial>, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterialGetPayload<T>>>

    /**
     * Delete a CharacterAscensionMaterial.
     * @param {CharacterAscensionMaterialDeleteArgs} args - Arguments to delete one CharacterAscensionMaterial.
     * @example
     * // Delete one CharacterAscensionMaterial
     * const CharacterAscensionMaterial = await prisma.characterAscensionMaterial.delete({
     *   where: {
     *     // ... filter to delete one CharacterAscensionMaterial
     *   }
     * })
     * 
    **/
    delete<T extends CharacterAscensionMaterialDeleteArgs>(
      args: Subset<T, CharacterAscensionMaterialDeleteArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterial>, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterialGetPayload<T>>>

    /**
     * Update one CharacterAscensionMaterial.
     * @param {CharacterAscensionMaterialUpdateArgs} args - Arguments to update one CharacterAscensionMaterial.
     * @example
     * // Update one CharacterAscensionMaterial
     * const characterAscensionMaterial = await prisma.characterAscensionMaterial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CharacterAscensionMaterialUpdateArgs>(
      args: Subset<T, CharacterAscensionMaterialUpdateArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterial>, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterialGetPayload<T>>>

    /**
     * Delete zero or more CharacterAscensionMaterials.
     * @param {CharacterAscensionMaterialDeleteManyArgs} args - Arguments to filter CharacterAscensionMaterials to delete.
     * @example
     * // Delete a few CharacterAscensionMaterials
     * const { count } = await prisma.characterAscensionMaterial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CharacterAscensionMaterialDeleteManyArgs>(
      args?: Subset<T, CharacterAscensionMaterialDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more CharacterAscensionMaterials.
     * @param {CharacterAscensionMaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CharacterAscensionMaterials
     * const characterAscensionMaterial = await prisma.characterAscensionMaterial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CharacterAscensionMaterialUpdateManyArgs>(
      args: Subset<T, CharacterAscensionMaterialUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one CharacterAscensionMaterial.
     * @param {CharacterAscensionMaterialUpsertArgs} args - Arguments to update or create a CharacterAscensionMaterial.
     * @example
     * // Update or create a CharacterAscensionMaterial
     * const characterAscensionMaterial = await prisma.characterAscensionMaterial.upsert({
     *   create: {
     *     // ... data to create a CharacterAscensionMaterial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CharacterAscensionMaterial we want to update
     *   }
     * })
    **/
    upsert<T extends CharacterAscensionMaterialUpsertArgs>(
      args: Subset<T, CharacterAscensionMaterialUpsertArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterial>, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterialGetPayload<T>>>

    /**
     * Find zero or one CharacterAscensionMaterial that matches the filter.
     * @param {FindUniqueCharacterAscensionMaterialArgs} args - Arguments to find a CharacterAscensionMaterial
     * @deprecated This will be deprecated please use prisma.characterAscensionMaterial.findUnique
     * @example
     * // Get one CharacterAscensionMaterial
     * const characterAscensionMaterial = await prisma.characterAscensionMaterial.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueCharacterAscensionMaterialArgs>(
      args: Subset<T, FindUniqueCharacterAscensionMaterialArgs>
    ): CheckSelect<T, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterial | null>, Prisma__CharacterAscensionMaterialClient<CharacterAscensionMaterialGetPayload<T> | null>>

    /**
     * Count the number of CharacterAscensionMaterials.
     * @param {FindManyCharacterAscensionMaterialArgs} args - Arguments to filter CharacterAscensionMaterials to count.
     * @example
     * // Count the number of CharacterAscensionMaterials
     * const count = await prisma.characterAscensionMaterial.count({
     *   where: {
     *     // ... the filter for the CharacterAscensionMaterials we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyCharacterAscensionMaterialArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a CharacterAscensionMaterial.
     * @param {AggregateCharacterAscensionMaterialArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateCharacterAscensionMaterialArgs>(args: Subset<T, AggregateCharacterAscensionMaterialArgs>): Promise<GetCharacterAscensionMaterialAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for CharacterAscensionMaterial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CharacterAscensionMaterialClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    characterAscensions<T extends FindManyCharacterAscensionArgs = {}>(args?: Subset<T, FindManyCharacterAscensionArgs>): CheckSelect<T, Promise<Array<CharacterAscension>>, Promise<Array<CharacterAscensionGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * CharacterAscensionMaterial findUnique
   */
  export type FindUniqueCharacterAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscensionMaterial
    **/
    select?: CharacterAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionMaterialInclude | null
    /**
     * Filter, which CharacterAscensionMaterial to fetch.
    **/
    where: CharacterAscensionMaterialWhereUniqueInput
  }


  /**
   * CharacterAscensionMaterial findFirst
   */
  export type FindFirstCharacterAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscensionMaterial
    **/
    select?: CharacterAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionMaterialInclude | null
    /**
     * Filter, which CharacterAscensionMaterial to fetch.
    **/
    where?: CharacterAscensionMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CharacterAscensionMaterials to fetch.
    **/
    orderBy?: Enumerable<CharacterAscensionMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CharacterAscensionMaterials.
    **/
    cursor?: CharacterAscensionMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CharacterAscensionMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CharacterAscensionMaterials.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of CharacterAscensionMaterials.
    **/
    distinct?: Enumerable<CharacterAscensionMaterialScalarFieldEnum>
  }


  /**
   * CharacterAscensionMaterial findMany
   */
  export type FindManyCharacterAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscensionMaterial
    **/
    select?: CharacterAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionMaterialInclude | null
    /**
     * Filter, which CharacterAscensionMaterials to fetch.
    **/
    where?: CharacterAscensionMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CharacterAscensionMaterials to fetch.
    **/
    orderBy?: Enumerable<CharacterAscensionMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CharacterAscensionMaterials.
    **/
    cursor?: CharacterAscensionMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CharacterAscensionMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CharacterAscensionMaterials.
    **/
    skip?: number
    distinct?: Enumerable<CharacterAscensionMaterialScalarFieldEnum>
  }


  /**
   * CharacterAscensionMaterial create
   */
  export type CharacterAscensionMaterialCreateArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscensionMaterial
    **/
    select?: CharacterAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionMaterialInclude | null
    /**
     * The data needed to create a CharacterAscensionMaterial.
    **/
    data: XOR<CharacterAscensionMaterialUncheckedCreateInput, CharacterAscensionMaterialCreateInput>
  }


  /**
   * CharacterAscensionMaterial update
   */
  export type CharacterAscensionMaterialUpdateArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscensionMaterial
    **/
    select?: CharacterAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionMaterialInclude | null
    /**
     * The data needed to update a CharacterAscensionMaterial.
    **/
    data: XOR<CharacterAscensionMaterialUncheckedUpdateInput, CharacterAscensionMaterialUpdateInput>
    /**
     * Choose, which CharacterAscensionMaterial to update.
    **/
    where: CharacterAscensionMaterialWhereUniqueInput
  }


  /**
   * CharacterAscensionMaterial updateMany
   */
  export type CharacterAscensionMaterialUpdateManyArgs = {
    data: XOR<CharacterAscensionMaterialUncheckedUpdateManyInput, CharacterAscensionMaterialUpdateManyMutationInput>
    where?: CharacterAscensionMaterialWhereInput
  }


  /**
   * CharacterAscensionMaterial upsert
   */
  export type CharacterAscensionMaterialUpsertArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscensionMaterial
    **/
    select?: CharacterAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionMaterialInclude | null
    /**
     * The filter to search for the CharacterAscensionMaterial to update in case it exists.
    **/
    where: CharacterAscensionMaterialWhereUniqueInput
    /**
     * In case the CharacterAscensionMaterial found by the `where` argument doesn't exist, create a new CharacterAscensionMaterial with this data.
    **/
    create: XOR<CharacterAscensionMaterialUncheckedCreateInput, CharacterAscensionMaterialCreateInput>
    /**
     * In case the CharacterAscensionMaterial was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<CharacterAscensionMaterialUncheckedUpdateInput, CharacterAscensionMaterialUpdateInput>
  }


  /**
   * CharacterAscensionMaterial delete
   */
  export type CharacterAscensionMaterialDeleteArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscensionMaterial
    **/
    select?: CharacterAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionMaterialInclude | null
    /**
     * Filter which CharacterAscensionMaterial to delete.
    **/
    where: CharacterAscensionMaterialWhereUniqueInput
  }


  /**
   * CharacterAscensionMaterial deleteMany
   */
  export type CharacterAscensionMaterialDeleteManyArgs = {
    where?: CharacterAscensionMaterialWhereInput
  }


  /**
   * CharacterAscensionMaterial without action
   */
  export type CharacterAscensionMaterialArgs = {
    /**
     * Select specific fields to fetch from the CharacterAscensionMaterial
    **/
    select?: CharacterAscensionMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CharacterAscensionMaterialInclude | null
  }



  /**
   * Model TalentLevelUpMaterial
   */


  export type AggregateTalentLevelUpMaterial = {
    count: number | null
    avg: TalentLevelUpMaterialAvgAggregateOutputType | null
    sum: TalentLevelUpMaterialSumAggregateOutputType | null
    min: TalentLevelUpMaterialMinAggregateOutputType | null
    max: TalentLevelUpMaterialMaxAggregateOutputType | null
  }

  export type TalentLevelUpMaterialAvgAggregateOutputType = {
    rarity: number
  }

  export type TalentLevelUpMaterialSumAggregateOutputType = {
    rarity: number
  }

  export type TalentLevelUpMaterialMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    availability: JsonValue | null
    description: string | null
    image: string | null
    rarity: number
    group: TalentLevelUpMaterialGroup | null
    domainId: string | null
  }

  export type TalentLevelUpMaterialMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    availability: JsonValue | null
    description: string | null
    image: string | null
    rarity: number
    group: TalentLevelUpMaterialGroup | null
    domainId: string | null
  }

  export type TalentLevelUpMaterialCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    availability: number | null
    description: number | null
    image: number | null
    rarity: number
    group: number | null
    domainId: number | null
    _all: number
  }


  export type TalentLevelUpMaterialAvgAggregateInputType = {
    rarity?: true
  }

  export type TalentLevelUpMaterialSumAggregateInputType = {
    rarity?: true
  }

  export type TalentLevelUpMaterialMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    availability?: true
    description?: true
    image?: true
    rarity?: true
    group?: true
    domainId?: true
  }

  export type TalentLevelUpMaterialMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    availability?: true
    description?: true
    image?: true
    rarity?: true
    group?: true
    domainId?: true
  }

  export type TalentLevelUpMaterialCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    availability?: true
    description?: true
    image?: true
    rarity?: true
    group?: true
    domainId?: true
    _all?: true
  }

  export type AggregateTalentLevelUpMaterialArgs = {
    /**
     * Filter which TalentLevelUpMaterial to aggregate.
    **/
    where?: TalentLevelUpMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of TalentLevelUpMaterials to fetch.
    **/
    orderBy?: Enumerable<TalentLevelUpMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: TalentLevelUpMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TalentLevelUpMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TalentLevelUpMaterials.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TalentLevelUpMaterials
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: TalentLevelUpMaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: TalentLevelUpMaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: TalentLevelUpMaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: TalentLevelUpMaterialMaxAggregateInputType
  }

  export type GetTalentLevelUpMaterialAggregateType<T extends AggregateTalentLevelUpMaterialArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetTalentLevelUpMaterialAggregateScalarType<T[P]>
  }

  export type GetTalentLevelUpMaterialAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof TalentLevelUpMaterialAvgAggregateOutputType ? TalentLevelUpMaterialAvgAggregateOutputType[P] : never
  }

    



  export type TalentLevelUpMaterialSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    availability?: boolean
    description?: boolean
    image?: boolean
    rarity?: boolean
    group?: boolean
    domain?: boolean | DomainArgs
    domainId?: boolean
    talents?: boolean | FindManyTalentArgs
  }

  export type TalentLevelUpMaterialInclude = {
    domain?: boolean | DomainArgs
    talents?: boolean | FindManyTalentArgs
  }

  export type TalentLevelUpMaterialGetPayload<
    S extends boolean | null | undefined | TalentLevelUpMaterialArgs,
    U = keyof S
      > = S extends true
        ? TalentLevelUpMaterial
    : S extends undefined
    ? never
    : S extends TalentLevelUpMaterialArgs | FindManyTalentLevelUpMaterialArgs
    ?'include' extends U
    ? TalentLevelUpMaterial  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'domain'
        ? DomainGetPayload<S['include'][P]> | null :
        P extends 'talents'
        ? Array < TalentGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof TalentLevelUpMaterial ?TalentLevelUpMaterial [P]
  : 
          P extends 'domain'
        ? DomainGetPayload<S['select'][P]> | null :
        P extends 'talents'
        ? Array < TalentGetPayload<S['select'][P]>>  : never
  } 
    : TalentLevelUpMaterial
  : TalentLevelUpMaterial


  export interface TalentLevelUpMaterialDelegate {
    /**
     * Find zero or one TalentLevelUpMaterial that matches the filter.
     * @param {FindUniqueTalentLevelUpMaterialArgs} args - Arguments to find a TalentLevelUpMaterial
     * @example
     * // Get one TalentLevelUpMaterial
     * const talentLevelUpMaterial = await prisma.talentLevelUpMaterial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueTalentLevelUpMaterialArgs>(
      args: Subset<T, FindUniqueTalentLevelUpMaterialArgs>
    ): CheckSelect<T, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterial | null>, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterialGetPayload<T> | null>>

    /**
     * Find the first TalentLevelUpMaterial that matches the filter.
     * @param {FindFirstTalentLevelUpMaterialArgs} args - Arguments to find a TalentLevelUpMaterial
     * @example
     * // Get one TalentLevelUpMaterial
     * const talentLevelUpMaterial = await prisma.talentLevelUpMaterial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstTalentLevelUpMaterialArgs>(
      args?: Subset<T, FindFirstTalentLevelUpMaterialArgs>
    ): CheckSelect<T, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterial | null>, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterialGetPayload<T> | null>>

    /**
     * Find zero or more TalentLevelUpMaterials that matches the filter.
     * @param {FindManyTalentLevelUpMaterialArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TalentLevelUpMaterials
     * const talentLevelUpMaterials = await prisma.talentLevelUpMaterial.findMany()
     * 
     * // Get first 10 TalentLevelUpMaterials
     * const talentLevelUpMaterials = await prisma.talentLevelUpMaterial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const talentLevelUpMaterialWithIdOnly = await prisma.talentLevelUpMaterial.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyTalentLevelUpMaterialArgs>(
      args?: Subset<T, FindManyTalentLevelUpMaterialArgs>
    ): CheckSelect<T, Promise<Array<TalentLevelUpMaterial>>, Promise<Array<TalentLevelUpMaterialGetPayload<T>>>>

    /**
     * Create a TalentLevelUpMaterial.
     * @param {TalentLevelUpMaterialCreateArgs} args - Arguments to create a TalentLevelUpMaterial.
     * @example
     * // Create one TalentLevelUpMaterial
     * const TalentLevelUpMaterial = await prisma.talentLevelUpMaterial.create({
     *   data: {
     *     // ... data to create a TalentLevelUpMaterial
     *   }
     * })
     * 
    **/
    create<T extends TalentLevelUpMaterialCreateArgs>(
      args: Subset<T, TalentLevelUpMaterialCreateArgs>
    ): CheckSelect<T, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterial>, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterialGetPayload<T>>>

    /**
     * Delete a TalentLevelUpMaterial.
     * @param {TalentLevelUpMaterialDeleteArgs} args - Arguments to delete one TalentLevelUpMaterial.
     * @example
     * // Delete one TalentLevelUpMaterial
     * const TalentLevelUpMaterial = await prisma.talentLevelUpMaterial.delete({
     *   where: {
     *     // ... filter to delete one TalentLevelUpMaterial
     *   }
     * })
     * 
    **/
    delete<T extends TalentLevelUpMaterialDeleteArgs>(
      args: Subset<T, TalentLevelUpMaterialDeleteArgs>
    ): CheckSelect<T, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterial>, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterialGetPayload<T>>>

    /**
     * Update one TalentLevelUpMaterial.
     * @param {TalentLevelUpMaterialUpdateArgs} args - Arguments to update one TalentLevelUpMaterial.
     * @example
     * // Update one TalentLevelUpMaterial
     * const talentLevelUpMaterial = await prisma.talentLevelUpMaterial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TalentLevelUpMaterialUpdateArgs>(
      args: Subset<T, TalentLevelUpMaterialUpdateArgs>
    ): CheckSelect<T, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterial>, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterialGetPayload<T>>>

    /**
     * Delete zero or more TalentLevelUpMaterials.
     * @param {TalentLevelUpMaterialDeleteManyArgs} args - Arguments to filter TalentLevelUpMaterials to delete.
     * @example
     * // Delete a few TalentLevelUpMaterials
     * const { count } = await prisma.talentLevelUpMaterial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TalentLevelUpMaterialDeleteManyArgs>(
      args?: Subset<T, TalentLevelUpMaterialDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more TalentLevelUpMaterials.
     * @param {TalentLevelUpMaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TalentLevelUpMaterials
     * const talentLevelUpMaterial = await prisma.talentLevelUpMaterial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TalentLevelUpMaterialUpdateManyArgs>(
      args: Subset<T, TalentLevelUpMaterialUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one TalentLevelUpMaterial.
     * @param {TalentLevelUpMaterialUpsertArgs} args - Arguments to update or create a TalentLevelUpMaterial.
     * @example
     * // Update or create a TalentLevelUpMaterial
     * const talentLevelUpMaterial = await prisma.talentLevelUpMaterial.upsert({
     *   create: {
     *     // ... data to create a TalentLevelUpMaterial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TalentLevelUpMaterial we want to update
     *   }
     * })
    **/
    upsert<T extends TalentLevelUpMaterialUpsertArgs>(
      args: Subset<T, TalentLevelUpMaterialUpsertArgs>
    ): CheckSelect<T, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterial>, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterialGetPayload<T>>>

    /**
     * Find zero or one TalentLevelUpMaterial that matches the filter.
     * @param {FindUniqueTalentLevelUpMaterialArgs} args - Arguments to find a TalentLevelUpMaterial
     * @deprecated This will be deprecated please use prisma.talentLevelUpMaterial.findUnique
     * @example
     * // Get one TalentLevelUpMaterial
     * const talentLevelUpMaterial = await prisma.talentLevelUpMaterial.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueTalentLevelUpMaterialArgs>(
      args: Subset<T, FindUniqueTalentLevelUpMaterialArgs>
    ): CheckSelect<T, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterial | null>, Prisma__TalentLevelUpMaterialClient<TalentLevelUpMaterialGetPayload<T> | null>>

    /**
     * Count the number of TalentLevelUpMaterials.
     * @param {FindManyTalentLevelUpMaterialArgs} args - Arguments to filter TalentLevelUpMaterials to count.
     * @example
     * // Count the number of TalentLevelUpMaterials
     * const count = await prisma.talentLevelUpMaterial.count({
     *   where: {
     *     // ... the filter for the TalentLevelUpMaterials we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyTalentLevelUpMaterialArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a TalentLevelUpMaterial.
     * @param {AggregateTalentLevelUpMaterialArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateTalentLevelUpMaterialArgs>(args: Subset<T, AggregateTalentLevelUpMaterialArgs>): Promise<GetTalentLevelUpMaterialAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for TalentLevelUpMaterial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TalentLevelUpMaterialClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    domain<T extends DomainArgs = {}>(args?: Subset<T, DomainArgs>): CheckSelect<T, Prisma__DomainClient<Domain | null>, Prisma__DomainClient<DomainGetPayload<T> | null>>;

    talents<T extends FindManyTalentArgs = {}>(args?: Subset<T, FindManyTalentArgs>): CheckSelect<T, Promise<Array<Talent>>, Promise<Array<TalentGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TalentLevelUpMaterial findUnique
   */
  export type FindUniqueTalentLevelUpMaterialArgs = {
    /**
     * Select specific fields to fetch from the TalentLevelUpMaterial
    **/
    select?: TalentLevelUpMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentLevelUpMaterialInclude | null
    /**
     * Filter, which TalentLevelUpMaterial to fetch.
    **/
    where: TalentLevelUpMaterialWhereUniqueInput
  }


  /**
   * TalentLevelUpMaterial findFirst
   */
  export type FindFirstTalentLevelUpMaterialArgs = {
    /**
     * Select specific fields to fetch from the TalentLevelUpMaterial
    **/
    select?: TalentLevelUpMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentLevelUpMaterialInclude | null
    /**
     * Filter, which TalentLevelUpMaterial to fetch.
    **/
    where?: TalentLevelUpMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of TalentLevelUpMaterials to fetch.
    **/
    orderBy?: Enumerable<TalentLevelUpMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TalentLevelUpMaterials.
    **/
    cursor?: TalentLevelUpMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TalentLevelUpMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TalentLevelUpMaterials.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of TalentLevelUpMaterials.
    **/
    distinct?: Enumerable<TalentLevelUpMaterialScalarFieldEnum>
  }


  /**
   * TalentLevelUpMaterial findMany
   */
  export type FindManyTalentLevelUpMaterialArgs = {
    /**
     * Select specific fields to fetch from the TalentLevelUpMaterial
    **/
    select?: TalentLevelUpMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentLevelUpMaterialInclude | null
    /**
     * Filter, which TalentLevelUpMaterials to fetch.
    **/
    where?: TalentLevelUpMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of TalentLevelUpMaterials to fetch.
    **/
    orderBy?: Enumerable<TalentLevelUpMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TalentLevelUpMaterials.
    **/
    cursor?: TalentLevelUpMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TalentLevelUpMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TalentLevelUpMaterials.
    **/
    skip?: number
    distinct?: Enumerable<TalentLevelUpMaterialScalarFieldEnum>
  }


  /**
   * TalentLevelUpMaterial create
   */
  export type TalentLevelUpMaterialCreateArgs = {
    /**
     * Select specific fields to fetch from the TalentLevelUpMaterial
    **/
    select?: TalentLevelUpMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentLevelUpMaterialInclude | null
    /**
     * The data needed to create a TalentLevelUpMaterial.
    **/
    data: XOR<TalentLevelUpMaterialUncheckedCreateInput, TalentLevelUpMaterialCreateInput>
  }


  /**
   * TalentLevelUpMaterial update
   */
  export type TalentLevelUpMaterialUpdateArgs = {
    /**
     * Select specific fields to fetch from the TalentLevelUpMaterial
    **/
    select?: TalentLevelUpMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentLevelUpMaterialInclude | null
    /**
     * The data needed to update a TalentLevelUpMaterial.
    **/
    data: XOR<TalentLevelUpMaterialUncheckedUpdateInput, TalentLevelUpMaterialUpdateInput>
    /**
     * Choose, which TalentLevelUpMaterial to update.
    **/
    where: TalentLevelUpMaterialWhereUniqueInput
  }


  /**
   * TalentLevelUpMaterial updateMany
   */
  export type TalentLevelUpMaterialUpdateManyArgs = {
    data: XOR<TalentLevelUpMaterialUncheckedUpdateManyInput, TalentLevelUpMaterialUpdateManyMutationInput>
    where?: TalentLevelUpMaterialWhereInput
  }


  /**
   * TalentLevelUpMaterial upsert
   */
  export type TalentLevelUpMaterialUpsertArgs = {
    /**
     * Select specific fields to fetch from the TalentLevelUpMaterial
    **/
    select?: TalentLevelUpMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentLevelUpMaterialInclude | null
    /**
     * The filter to search for the TalentLevelUpMaterial to update in case it exists.
    **/
    where: TalentLevelUpMaterialWhereUniqueInput
    /**
     * In case the TalentLevelUpMaterial found by the `where` argument doesn't exist, create a new TalentLevelUpMaterial with this data.
    **/
    create: XOR<TalentLevelUpMaterialUncheckedCreateInput, TalentLevelUpMaterialCreateInput>
    /**
     * In case the TalentLevelUpMaterial was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<TalentLevelUpMaterialUncheckedUpdateInput, TalentLevelUpMaterialUpdateInput>
  }


  /**
   * TalentLevelUpMaterial delete
   */
  export type TalentLevelUpMaterialDeleteArgs = {
    /**
     * Select specific fields to fetch from the TalentLevelUpMaterial
    **/
    select?: TalentLevelUpMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentLevelUpMaterialInclude | null
    /**
     * Filter which TalentLevelUpMaterial to delete.
    **/
    where: TalentLevelUpMaterialWhereUniqueInput
  }


  /**
   * TalentLevelUpMaterial deleteMany
   */
  export type TalentLevelUpMaterialDeleteManyArgs = {
    where?: TalentLevelUpMaterialWhereInput
  }


  /**
   * TalentLevelUpMaterial without action
   */
  export type TalentLevelUpMaterialArgs = {
    /**
     * Select specific fields to fetch from the TalentLevelUpMaterial
    **/
    select?: TalentLevelUpMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: TalentLevelUpMaterialInclude | null
  }



  /**
   * Model CraftingMaterial
   */


  export type AggregateCraftingMaterial = {
    count: number | null
    avg: CraftingMaterialAvgAggregateOutputType | null
    sum: CraftingMaterialSumAggregateOutputType | null
    min: CraftingMaterialMinAggregateOutputType | null
    max: CraftingMaterialMaxAggregateOutputType | null
  }

  export type CraftingMaterialAvgAggregateOutputType = {
    rarity: number
  }

  export type CraftingMaterialSumAggregateOutputType = {
    rarity: number
  }

  export type CraftingMaterialMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    source: JsonValue | null
  }

  export type CraftingMaterialMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    source: JsonValue | null
  }

  export type CraftingMaterialCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    description: number | null
    image: number | null
    rarity: number
    source: number | null
    _all: number
  }


  export type CraftingMaterialAvgAggregateInputType = {
    rarity?: true
  }

  export type CraftingMaterialSumAggregateInputType = {
    rarity?: true
  }

  export type CraftingMaterialMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
  }

  export type CraftingMaterialMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
  }

  export type CraftingMaterialCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
    _all?: true
  }

  export type AggregateCraftingMaterialArgs = {
    /**
     * Filter which CraftingMaterial to aggregate.
    **/
    where?: CraftingMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CraftingMaterials to fetch.
    **/
    orderBy?: Enumerable<CraftingMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: CraftingMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CraftingMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CraftingMaterials.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CraftingMaterials
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: CraftingMaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: CraftingMaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: CraftingMaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: CraftingMaterialMaxAggregateInputType
  }

  export type GetCraftingMaterialAggregateType<T extends AggregateCraftingMaterialArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetCraftingMaterialAggregateScalarType<T[P]>
  }

  export type GetCraftingMaterialAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof CraftingMaterialAvgAggregateOutputType ? CraftingMaterialAvgAggregateOutputType[P] : never
  }

    



  export type CraftingMaterialSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    rarity?: boolean
    source?: boolean
    recipes?: boolean | FindManyConsumeableRecipeArgs
  }

  export type CraftingMaterialInclude = {
    recipes?: boolean | FindManyConsumeableRecipeArgs
  }

  export type CraftingMaterialGetPayload<
    S extends boolean | null | undefined | CraftingMaterialArgs,
    U = keyof S
      > = S extends true
        ? CraftingMaterial
    : S extends undefined
    ? never
    : S extends CraftingMaterialArgs | FindManyCraftingMaterialArgs
    ?'include' extends U
    ? CraftingMaterial  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'recipes'
        ? Array < ConsumeableRecipeGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof CraftingMaterial ?CraftingMaterial [P]
  : 
          P extends 'recipes'
        ? Array < ConsumeableRecipeGetPayload<S['select'][P]>>  : never
  } 
    : CraftingMaterial
  : CraftingMaterial


  export interface CraftingMaterialDelegate {
    /**
     * Find zero or one CraftingMaterial that matches the filter.
     * @param {FindUniqueCraftingMaterialArgs} args - Arguments to find a CraftingMaterial
     * @example
     * // Get one CraftingMaterial
     * const craftingMaterial = await prisma.craftingMaterial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueCraftingMaterialArgs>(
      args: Subset<T, FindUniqueCraftingMaterialArgs>
    ): CheckSelect<T, Prisma__CraftingMaterialClient<CraftingMaterial | null>, Prisma__CraftingMaterialClient<CraftingMaterialGetPayload<T> | null>>

    /**
     * Find the first CraftingMaterial that matches the filter.
     * @param {FindFirstCraftingMaterialArgs} args - Arguments to find a CraftingMaterial
     * @example
     * // Get one CraftingMaterial
     * const craftingMaterial = await prisma.craftingMaterial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstCraftingMaterialArgs>(
      args?: Subset<T, FindFirstCraftingMaterialArgs>
    ): CheckSelect<T, Prisma__CraftingMaterialClient<CraftingMaterial | null>, Prisma__CraftingMaterialClient<CraftingMaterialGetPayload<T> | null>>

    /**
     * Find zero or more CraftingMaterials that matches the filter.
     * @param {FindManyCraftingMaterialArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CraftingMaterials
     * const craftingMaterials = await prisma.craftingMaterial.findMany()
     * 
     * // Get first 10 CraftingMaterials
     * const craftingMaterials = await prisma.craftingMaterial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const craftingMaterialWithIdOnly = await prisma.craftingMaterial.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyCraftingMaterialArgs>(
      args?: Subset<T, FindManyCraftingMaterialArgs>
    ): CheckSelect<T, Promise<Array<CraftingMaterial>>, Promise<Array<CraftingMaterialGetPayload<T>>>>

    /**
     * Create a CraftingMaterial.
     * @param {CraftingMaterialCreateArgs} args - Arguments to create a CraftingMaterial.
     * @example
     * // Create one CraftingMaterial
     * const CraftingMaterial = await prisma.craftingMaterial.create({
     *   data: {
     *     // ... data to create a CraftingMaterial
     *   }
     * })
     * 
    **/
    create<T extends CraftingMaterialCreateArgs>(
      args: Subset<T, CraftingMaterialCreateArgs>
    ): CheckSelect<T, Prisma__CraftingMaterialClient<CraftingMaterial>, Prisma__CraftingMaterialClient<CraftingMaterialGetPayload<T>>>

    /**
     * Delete a CraftingMaterial.
     * @param {CraftingMaterialDeleteArgs} args - Arguments to delete one CraftingMaterial.
     * @example
     * // Delete one CraftingMaterial
     * const CraftingMaterial = await prisma.craftingMaterial.delete({
     *   where: {
     *     // ... filter to delete one CraftingMaterial
     *   }
     * })
     * 
    **/
    delete<T extends CraftingMaterialDeleteArgs>(
      args: Subset<T, CraftingMaterialDeleteArgs>
    ): CheckSelect<T, Prisma__CraftingMaterialClient<CraftingMaterial>, Prisma__CraftingMaterialClient<CraftingMaterialGetPayload<T>>>

    /**
     * Update one CraftingMaterial.
     * @param {CraftingMaterialUpdateArgs} args - Arguments to update one CraftingMaterial.
     * @example
     * // Update one CraftingMaterial
     * const craftingMaterial = await prisma.craftingMaterial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CraftingMaterialUpdateArgs>(
      args: Subset<T, CraftingMaterialUpdateArgs>
    ): CheckSelect<T, Prisma__CraftingMaterialClient<CraftingMaterial>, Prisma__CraftingMaterialClient<CraftingMaterialGetPayload<T>>>

    /**
     * Delete zero or more CraftingMaterials.
     * @param {CraftingMaterialDeleteManyArgs} args - Arguments to filter CraftingMaterials to delete.
     * @example
     * // Delete a few CraftingMaterials
     * const { count } = await prisma.craftingMaterial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CraftingMaterialDeleteManyArgs>(
      args?: Subset<T, CraftingMaterialDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more CraftingMaterials.
     * @param {CraftingMaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CraftingMaterials
     * const craftingMaterial = await prisma.craftingMaterial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CraftingMaterialUpdateManyArgs>(
      args: Subset<T, CraftingMaterialUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one CraftingMaterial.
     * @param {CraftingMaterialUpsertArgs} args - Arguments to update or create a CraftingMaterial.
     * @example
     * // Update or create a CraftingMaterial
     * const craftingMaterial = await prisma.craftingMaterial.upsert({
     *   create: {
     *     // ... data to create a CraftingMaterial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CraftingMaterial we want to update
     *   }
     * })
    **/
    upsert<T extends CraftingMaterialUpsertArgs>(
      args: Subset<T, CraftingMaterialUpsertArgs>
    ): CheckSelect<T, Prisma__CraftingMaterialClient<CraftingMaterial>, Prisma__CraftingMaterialClient<CraftingMaterialGetPayload<T>>>

    /**
     * Find zero or one CraftingMaterial that matches the filter.
     * @param {FindUniqueCraftingMaterialArgs} args - Arguments to find a CraftingMaterial
     * @deprecated This will be deprecated please use prisma.craftingMaterial.findUnique
     * @example
     * // Get one CraftingMaterial
     * const craftingMaterial = await prisma.craftingMaterial.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueCraftingMaterialArgs>(
      args: Subset<T, FindUniqueCraftingMaterialArgs>
    ): CheckSelect<T, Prisma__CraftingMaterialClient<CraftingMaterial | null>, Prisma__CraftingMaterialClient<CraftingMaterialGetPayload<T> | null>>

    /**
     * Count the number of CraftingMaterials.
     * @param {FindManyCraftingMaterialArgs} args - Arguments to filter CraftingMaterials to count.
     * @example
     * // Count the number of CraftingMaterials
     * const count = await prisma.craftingMaterial.count({
     *   where: {
     *     // ... the filter for the CraftingMaterials we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyCraftingMaterialArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a CraftingMaterial.
     * @param {AggregateCraftingMaterialArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateCraftingMaterialArgs>(args: Subset<T, AggregateCraftingMaterialArgs>): Promise<GetCraftingMaterialAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for CraftingMaterial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CraftingMaterialClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    recipes<T extends FindManyConsumeableRecipeArgs = {}>(args?: Subset<T, FindManyConsumeableRecipeArgs>): CheckSelect<T, Promise<Array<ConsumeableRecipe>>, Promise<Array<ConsumeableRecipeGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * CraftingMaterial findUnique
   */
  export type FindUniqueCraftingMaterialArgs = {
    /**
     * Select specific fields to fetch from the CraftingMaterial
    **/
    select?: CraftingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CraftingMaterialInclude | null
    /**
     * Filter, which CraftingMaterial to fetch.
    **/
    where: CraftingMaterialWhereUniqueInput
  }


  /**
   * CraftingMaterial findFirst
   */
  export type FindFirstCraftingMaterialArgs = {
    /**
     * Select specific fields to fetch from the CraftingMaterial
    **/
    select?: CraftingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CraftingMaterialInclude | null
    /**
     * Filter, which CraftingMaterial to fetch.
    **/
    where?: CraftingMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CraftingMaterials to fetch.
    **/
    orderBy?: Enumerable<CraftingMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CraftingMaterials.
    **/
    cursor?: CraftingMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CraftingMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CraftingMaterials.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of CraftingMaterials.
    **/
    distinct?: Enumerable<CraftingMaterialScalarFieldEnum>
  }


  /**
   * CraftingMaterial findMany
   */
  export type FindManyCraftingMaterialArgs = {
    /**
     * Select specific fields to fetch from the CraftingMaterial
    **/
    select?: CraftingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CraftingMaterialInclude | null
    /**
     * Filter, which CraftingMaterials to fetch.
    **/
    where?: CraftingMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CraftingMaterials to fetch.
    **/
    orderBy?: Enumerable<CraftingMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CraftingMaterials.
    **/
    cursor?: CraftingMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CraftingMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CraftingMaterials.
    **/
    skip?: number
    distinct?: Enumerable<CraftingMaterialScalarFieldEnum>
  }


  /**
   * CraftingMaterial create
   */
  export type CraftingMaterialCreateArgs = {
    /**
     * Select specific fields to fetch from the CraftingMaterial
    **/
    select?: CraftingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CraftingMaterialInclude | null
    /**
     * The data needed to create a CraftingMaterial.
    **/
    data: XOR<CraftingMaterialUncheckedCreateInput, CraftingMaterialCreateInput>
  }


  /**
   * CraftingMaterial update
   */
  export type CraftingMaterialUpdateArgs = {
    /**
     * Select specific fields to fetch from the CraftingMaterial
    **/
    select?: CraftingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CraftingMaterialInclude | null
    /**
     * The data needed to update a CraftingMaterial.
    **/
    data: XOR<CraftingMaterialUncheckedUpdateInput, CraftingMaterialUpdateInput>
    /**
     * Choose, which CraftingMaterial to update.
    **/
    where: CraftingMaterialWhereUniqueInput
  }


  /**
   * CraftingMaterial updateMany
   */
  export type CraftingMaterialUpdateManyArgs = {
    data: XOR<CraftingMaterialUncheckedUpdateManyInput, CraftingMaterialUpdateManyMutationInput>
    where?: CraftingMaterialWhereInput
  }


  /**
   * CraftingMaterial upsert
   */
  export type CraftingMaterialUpsertArgs = {
    /**
     * Select specific fields to fetch from the CraftingMaterial
    **/
    select?: CraftingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CraftingMaterialInclude | null
    /**
     * The filter to search for the CraftingMaterial to update in case it exists.
    **/
    where: CraftingMaterialWhereUniqueInput
    /**
     * In case the CraftingMaterial found by the `where` argument doesn't exist, create a new CraftingMaterial with this data.
    **/
    create: XOR<CraftingMaterialUncheckedCreateInput, CraftingMaterialCreateInput>
    /**
     * In case the CraftingMaterial was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<CraftingMaterialUncheckedUpdateInput, CraftingMaterialUpdateInput>
  }


  /**
   * CraftingMaterial delete
   */
  export type CraftingMaterialDeleteArgs = {
    /**
     * Select specific fields to fetch from the CraftingMaterial
    **/
    select?: CraftingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CraftingMaterialInclude | null
    /**
     * Filter which CraftingMaterial to delete.
    **/
    where: CraftingMaterialWhereUniqueInput
  }


  /**
   * CraftingMaterial deleteMany
   */
  export type CraftingMaterialDeleteManyArgs = {
    where?: CraftingMaterialWhereInput
  }


  /**
   * CraftingMaterial without action
   */
  export type CraftingMaterialArgs = {
    /**
     * Select specific fields to fetch from the CraftingMaterial
    **/
    select?: CraftingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CraftingMaterialInclude | null
  }



  /**
   * Model CookingMaterial
   */


  export type AggregateCookingMaterial = {
    count: number | null
    avg: CookingMaterialAvgAggregateOutputType | null
    sum: CookingMaterialSumAggregateOutputType | null
    min: CookingMaterialMinAggregateOutputType | null
    max: CookingMaterialMaxAggregateOutputType | null
  }

  export type CookingMaterialAvgAggregateOutputType = {
    rarity: number
  }

  export type CookingMaterialSumAggregateOutputType = {
    rarity: number
  }

  export type CookingMaterialMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    source: JsonValue | null
  }

  export type CookingMaterialMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    source: JsonValue | null
  }

  export type CookingMaterialCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    description: number | null
    image: number | null
    rarity: number
    source: number | null
    _all: number
  }


  export type CookingMaterialAvgAggregateInputType = {
    rarity?: true
  }

  export type CookingMaterialSumAggregateInputType = {
    rarity?: true
  }

  export type CookingMaterialMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
  }

  export type CookingMaterialMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
  }

  export type CookingMaterialCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
    _all?: true
  }

  export type AggregateCookingMaterialArgs = {
    /**
     * Filter which CookingMaterial to aggregate.
    **/
    where?: CookingMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CookingMaterials to fetch.
    **/
    orderBy?: Enumerable<CookingMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: CookingMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CookingMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CookingMaterials.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CookingMaterials
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: CookingMaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: CookingMaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: CookingMaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: CookingMaterialMaxAggregateInputType
  }

  export type GetCookingMaterialAggregateType<T extends AggregateCookingMaterialArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetCookingMaterialAggregateScalarType<T[P]>
  }

  export type GetCookingMaterialAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof CookingMaterialAvgAggregateOutputType ? CookingMaterialAvgAggregateOutputType[P] : never
  }

    



  export type CookingMaterialSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    rarity?: boolean
    source?: boolean
    processingRecipe?: boolean | ProcessRecipeArgs
    recipes?: boolean | FindManyConsumeableRecipeArgs
  }

  export type CookingMaterialInclude = {
    processingRecipe?: boolean | ProcessRecipeArgs
    recipes?: boolean | FindManyConsumeableRecipeArgs
  }

  export type CookingMaterialGetPayload<
    S extends boolean | null | undefined | CookingMaterialArgs,
    U = keyof S
      > = S extends true
        ? CookingMaterial
    : S extends undefined
    ? never
    : S extends CookingMaterialArgs | FindManyCookingMaterialArgs
    ?'include' extends U
    ? CookingMaterial  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'processingRecipe'
        ? ProcessRecipeGetPayload<S['include'][P]> | null :
        P extends 'recipes'
        ? Array < ConsumeableRecipeGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof CookingMaterial ?CookingMaterial [P]
  : 
          P extends 'processingRecipe'
        ? ProcessRecipeGetPayload<S['select'][P]> | null :
        P extends 'recipes'
        ? Array < ConsumeableRecipeGetPayload<S['select'][P]>>  : never
  } 
    : CookingMaterial
  : CookingMaterial


  export interface CookingMaterialDelegate {
    /**
     * Find zero or one CookingMaterial that matches the filter.
     * @param {FindUniqueCookingMaterialArgs} args - Arguments to find a CookingMaterial
     * @example
     * // Get one CookingMaterial
     * const cookingMaterial = await prisma.cookingMaterial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueCookingMaterialArgs>(
      args: Subset<T, FindUniqueCookingMaterialArgs>
    ): CheckSelect<T, Prisma__CookingMaterialClient<CookingMaterial | null>, Prisma__CookingMaterialClient<CookingMaterialGetPayload<T> | null>>

    /**
     * Find the first CookingMaterial that matches the filter.
     * @param {FindFirstCookingMaterialArgs} args - Arguments to find a CookingMaterial
     * @example
     * // Get one CookingMaterial
     * const cookingMaterial = await prisma.cookingMaterial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstCookingMaterialArgs>(
      args?: Subset<T, FindFirstCookingMaterialArgs>
    ): CheckSelect<T, Prisma__CookingMaterialClient<CookingMaterial | null>, Prisma__CookingMaterialClient<CookingMaterialGetPayload<T> | null>>

    /**
     * Find zero or more CookingMaterials that matches the filter.
     * @param {FindManyCookingMaterialArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CookingMaterials
     * const cookingMaterials = await prisma.cookingMaterial.findMany()
     * 
     * // Get first 10 CookingMaterials
     * const cookingMaterials = await prisma.cookingMaterial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cookingMaterialWithIdOnly = await prisma.cookingMaterial.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyCookingMaterialArgs>(
      args?: Subset<T, FindManyCookingMaterialArgs>
    ): CheckSelect<T, Promise<Array<CookingMaterial>>, Promise<Array<CookingMaterialGetPayload<T>>>>

    /**
     * Create a CookingMaterial.
     * @param {CookingMaterialCreateArgs} args - Arguments to create a CookingMaterial.
     * @example
     * // Create one CookingMaterial
     * const CookingMaterial = await prisma.cookingMaterial.create({
     *   data: {
     *     // ... data to create a CookingMaterial
     *   }
     * })
     * 
    **/
    create<T extends CookingMaterialCreateArgs>(
      args: Subset<T, CookingMaterialCreateArgs>
    ): CheckSelect<T, Prisma__CookingMaterialClient<CookingMaterial>, Prisma__CookingMaterialClient<CookingMaterialGetPayload<T>>>

    /**
     * Delete a CookingMaterial.
     * @param {CookingMaterialDeleteArgs} args - Arguments to delete one CookingMaterial.
     * @example
     * // Delete one CookingMaterial
     * const CookingMaterial = await prisma.cookingMaterial.delete({
     *   where: {
     *     // ... filter to delete one CookingMaterial
     *   }
     * })
     * 
    **/
    delete<T extends CookingMaterialDeleteArgs>(
      args: Subset<T, CookingMaterialDeleteArgs>
    ): CheckSelect<T, Prisma__CookingMaterialClient<CookingMaterial>, Prisma__CookingMaterialClient<CookingMaterialGetPayload<T>>>

    /**
     * Update one CookingMaterial.
     * @param {CookingMaterialUpdateArgs} args - Arguments to update one CookingMaterial.
     * @example
     * // Update one CookingMaterial
     * const cookingMaterial = await prisma.cookingMaterial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CookingMaterialUpdateArgs>(
      args: Subset<T, CookingMaterialUpdateArgs>
    ): CheckSelect<T, Prisma__CookingMaterialClient<CookingMaterial>, Prisma__CookingMaterialClient<CookingMaterialGetPayload<T>>>

    /**
     * Delete zero or more CookingMaterials.
     * @param {CookingMaterialDeleteManyArgs} args - Arguments to filter CookingMaterials to delete.
     * @example
     * // Delete a few CookingMaterials
     * const { count } = await prisma.cookingMaterial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CookingMaterialDeleteManyArgs>(
      args?: Subset<T, CookingMaterialDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more CookingMaterials.
     * @param {CookingMaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CookingMaterials
     * const cookingMaterial = await prisma.cookingMaterial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CookingMaterialUpdateManyArgs>(
      args: Subset<T, CookingMaterialUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one CookingMaterial.
     * @param {CookingMaterialUpsertArgs} args - Arguments to update or create a CookingMaterial.
     * @example
     * // Update or create a CookingMaterial
     * const cookingMaterial = await prisma.cookingMaterial.upsert({
     *   create: {
     *     // ... data to create a CookingMaterial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CookingMaterial we want to update
     *   }
     * })
    **/
    upsert<T extends CookingMaterialUpsertArgs>(
      args: Subset<T, CookingMaterialUpsertArgs>
    ): CheckSelect<T, Prisma__CookingMaterialClient<CookingMaterial>, Prisma__CookingMaterialClient<CookingMaterialGetPayload<T>>>

    /**
     * Find zero or one CookingMaterial that matches the filter.
     * @param {FindUniqueCookingMaterialArgs} args - Arguments to find a CookingMaterial
     * @deprecated This will be deprecated please use prisma.cookingMaterial.findUnique
     * @example
     * // Get one CookingMaterial
     * const cookingMaterial = await prisma.cookingMaterial.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueCookingMaterialArgs>(
      args: Subset<T, FindUniqueCookingMaterialArgs>
    ): CheckSelect<T, Prisma__CookingMaterialClient<CookingMaterial | null>, Prisma__CookingMaterialClient<CookingMaterialGetPayload<T> | null>>

    /**
     * Count the number of CookingMaterials.
     * @param {FindManyCookingMaterialArgs} args - Arguments to filter CookingMaterials to count.
     * @example
     * // Count the number of CookingMaterials
     * const count = await prisma.cookingMaterial.count({
     *   where: {
     *     // ... the filter for the CookingMaterials we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyCookingMaterialArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a CookingMaterial.
     * @param {AggregateCookingMaterialArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateCookingMaterialArgs>(args: Subset<T, AggregateCookingMaterialArgs>): Promise<GetCookingMaterialAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for CookingMaterial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CookingMaterialClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    processingRecipe<T extends ProcessRecipeArgs = {}>(args?: Subset<T, ProcessRecipeArgs>): CheckSelect<T, Prisma__ProcessRecipeClient<ProcessRecipe | null>, Prisma__ProcessRecipeClient<ProcessRecipeGetPayload<T> | null>>;

    recipes<T extends FindManyConsumeableRecipeArgs = {}>(args?: Subset<T, FindManyConsumeableRecipeArgs>): CheckSelect<T, Promise<Array<ConsumeableRecipe>>, Promise<Array<ConsumeableRecipeGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * CookingMaterial findUnique
   */
  export type FindUniqueCookingMaterialArgs = {
    /**
     * Select specific fields to fetch from the CookingMaterial
    **/
    select?: CookingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CookingMaterialInclude | null
    /**
     * Filter, which CookingMaterial to fetch.
    **/
    where: CookingMaterialWhereUniqueInput
  }


  /**
   * CookingMaterial findFirst
   */
  export type FindFirstCookingMaterialArgs = {
    /**
     * Select specific fields to fetch from the CookingMaterial
    **/
    select?: CookingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CookingMaterialInclude | null
    /**
     * Filter, which CookingMaterial to fetch.
    **/
    where?: CookingMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CookingMaterials to fetch.
    **/
    orderBy?: Enumerable<CookingMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CookingMaterials.
    **/
    cursor?: CookingMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CookingMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CookingMaterials.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of CookingMaterials.
    **/
    distinct?: Enumerable<CookingMaterialScalarFieldEnum>
  }


  /**
   * CookingMaterial findMany
   */
  export type FindManyCookingMaterialArgs = {
    /**
     * Select specific fields to fetch from the CookingMaterial
    **/
    select?: CookingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CookingMaterialInclude | null
    /**
     * Filter, which CookingMaterials to fetch.
    **/
    where?: CookingMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CookingMaterials to fetch.
    **/
    orderBy?: Enumerable<CookingMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CookingMaterials.
    **/
    cursor?: CookingMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CookingMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CookingMaterials.
    **/
    skip?: number
    distinct?: Enumerable<CookingMaterialScalarFieldEnum>
  }


  /**
   * CookingMaterial create
   */
  export type CookingMaterialCreateArgs = {
    /**
     * Select specific fields to fetch from the CookingMaterial
    **/
    select?: CookingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CookingMaterialInclude | null
    /**
     * The data needed to create a CookingMaterial.
    **/
    data: XOR<CookingMaterialUncheckedCreateInput, CookingMaterialCreateInput>
  }


  /**
   * CookingMaterial update
   */
  export type CookingMaterialUpdateArgs = {
    /**
     * Select specific fields to fetch from the CookingMaterial
    **/
    select?: CookingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CookingMaterialInclude | null
    /**
     * The data needed to update a CookingMaterial.
    **/
    data: XOR<CookingMaterialUncheckedUpdateInput, CookingMaterialUpdateInput>
    /**
     * Choose, which CookingMaterial to update.
    **/
    where: CookingMaterialWhereUniqueInput
  }


  /**
   * CookingMaterial updateMany
   */
  export type CookingMaterialUpdateManyArgs = {
    data: XOR<CookingMaterialUncheckedUpdateManyInput, CookingMaterialUpdateManyMutationInput>
    where?: CookingMaterialWhereInput
  }


  /**
   * CookingMaterial upsert
   */
  export type CookingMaterialUpsertArgs = {
    /**
     * Select specific fields to fetch from the CookingMaterial
    **/
    select?: CookingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CookingMaterialInclude | null
    /**
     * The filter to search for the CookingMaterial to update in case it exists.
    **/
    where: CookingMaterialWhereUniqueInput
    /**
     * In case the CookingMaterial found by the `where` argument doesn't exist, create a new CookingMaterial with this data.
    **/
    create: XOR<CookingMaterialUncheckedCreateInput, CookingMaterialCreateInput>
    /**
     * In case the CookingMaterial was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<CookingMaterialUncheckedUpdateInput, CookingMaterialUpdateInput>
  }


  /**
   * CookingMaterial delete
   */
  export type CookingMaterialDeleteArgs = {
    /**
     * Select specific fields to fetch from the CookingMaterial
    **/
    select?: CookingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CookingMaterialInclude | null
    /**
     * Filter which CookingMaterial to delete.
    **/
    where: CookingMaterialWhereUniqueInput
  }


  /**
   * CookingMaterial deleteMany
   */
  export type CookingMaterialDeleteManyArgs = {
    where?: CookingMaterialWhereInput
  }


  /**
   * CookingMaterial without action
   */
  export type CookingMaterialArgs = {
    /**
     * Select specific fields to fetch from the CookingMaterial
    **/
    select?: CookingMaterialSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: CookingMaterialInclude | null
  }



  /**
   * Model CommonMaterial
   */


  export type AggregateCommonMaterial = {
    count: number | null
    avg: CommonMaterialAvgAggregateOutputType | null
    sum: CommonMaterialSumAggregateOutputType | null
    min: CommonMaterialMinAggregateOutputType | null
    max: CommonMaterialMaxAggregateOutputType | null
  }

  export type CommonMaterialAvgAggregateOutputType = {
    rarity: number
  }

  export type CommonMaterialSumAggregateOutputType = {
    rarity: number
  }

  export type CommonMaterialMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    source: JsonValue | null
  }

  export type CommonMaterialMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    image: string | null
    rarity: number
    source: JsonValue | null
  }

  export type CommonMaterialCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    description: number | null
    image: number | null
    rarity: number
    source: number | null
    _all: number
  }


  export type CommonMaterialAvgAggregateInputType = {
    rarity?: true
  }

  export type CommonMaterialSumAggregateInputType = {
    rarity?: true
  }

  export type CommonMaterialMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
  }

  export type CommonMaterialMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
  }

  export type CommonMaterialCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    image?: true
    rarity?: true
    source?: true
    _all?: true
  }

  export type AggregateCommonMaterialArgs = {
    /**
     * Filter which CommonMaterial to aggregate.
    **/
    where?: CommonMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CommonMaterials to fetch.
    **/
    orderBy?: Enumerable<CommonMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: CommonMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommonMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommonMaterials.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CommonMaterials
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: CommonMaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: CommonMaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: CommonMaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: CommonMaterialMaxAggregateInputType
  }

  export type GetCommonMaterialAggregateType<T extends AggregateCommonMaterialArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetCommonMaterialAggregateScalarType<T[P]>
  }

  export type GetCommonMaterialAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof CommonMaterialAvgAggregateOutputType ? CommonMaterialAvgAggregateOutputType[P] : never
  }

    



  export type CommonMaterialSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    rarity?: boolean
    source?: boolean
  }

  export type CommonMaterialGetPayload<
    S extends boolean | null | undefined | CommonMaterialArgs,
    U = keyof S
      > = S extends true
        ? CommonMaterial
    : S extends undefined
    ? never
    : S extends CommonMaterialArgs | FindManyCommonMaterialArgs
    ?'include' extends U
    ? CommonMaterial 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof CommonMaterial ?CommonMaterial [P]
  : 
     never
  } 
    : CommonMaterial
  : CommonMaterial


  export interface CommonMaterialDelegate {
    /**
     * Find zero or one CommonMaterial that matches the filter.
     * @param {FindUniqueCommonMaterialArgs} args - Arguments to find a CommonMaterial
     * @example
     * // Get one CommonMaterial
     * const commonMaterial = await prisma.commonMaterial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueCommonMaterialArgs>(
      args: Subset<T, FindUniqueCommonMaterialArgs>
    ): CheckSelect<T, Prisma__CommonMaterialClient<CommonMaterial | null>, Prisma__CommonMaterialClient<CommonMaterialGetPayload<T> | null>>

    /**
     * Find the first CommonMaterial that matches the filter.
     * @param {FindFirstCommonMaterialArgs} args - Arguments to find a CommonMaterial
     * @example
     * // Get one CommonMaterial
     * const commonMaterial = await prisma.commonMaterial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstCommonMaterialArgs>(
      args?: Subset<T, FindFirstCommonMaterialArgs>
    ): CheckSelect<T, Prisma__CommonMaterialClient<CommonMaterial | null>, Prisma__CommonMaterialClient<CommonMaterialGetPayload<T> | null>>

    /**
     * Find zero or more CommonMaterials that matches the filter.
     * @param {FindManyCommonMaterialArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CommonMaterials
     * const commonMaterials = await prisma.commonMaterial.findMany()
     * 
     * // Get first 10 CommonMaterials
     * const commonMaterials = await prisma.commonMaterial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commonMaterialWithIdOnly = await prisma.commonMaterial.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyCommonMaterialArgs>(
      args?: Subset<T, FindManyCommonMaterialArgs>
    ): CheckSelect<T, Promise<Array<CommonMaterial>>, Promise<Array<CommonMaterialGetPayload<T>>>>

    /**
     * Create a CommonMaterial.
     * @param {CommonMaterialCreateArgs} args - Arguments to create a CommonMaterial.
     * @example
     * // Create one CommonMaterial
     * const CommonMaterial = await prisma.commonMaterial.create({
     *   data: {
     *     // ... data to create a CommonMaterial
     *   }
     * })
     * 
    **/
    create<T extends CommonMaterialCreateArgs>(
      args: Subset<T, CommonMaterialCreateArgs>
    ): CheckSelect<T, Prisma__CommonMaterialClient<CommonMaterial>, Prisma__CommonMaterialClient<CommonMaterialGetPayload<T>>>

    /**
     * Delete a CommonMaterial.
     * @param {CommonMaterialDeleteArgs} args - Arguments to delete one CommonMaterial.
     * @example
     * // Delete one CommonMaterial
     * const CommonMaterial = await prisma.commonMaterial.delete({
     *   where: {
     *     // ... filter to delete one CommonMaterial
     *   }
     * })
     * 
    **/
    delete<T extends CommonMaterialDeleteArgs>(
      args: Subset<T, CommonMaterialDeleteArgs>
    ): CheckSelect<T, Prisma__CommonMaterialClient<CommonMaterial>, Prisma__CommonMaterialClient<CommonMaterialGetPayload<T>>>

    /**
     * Update one CommonMaterial.
     * @param {CommonMaterialUpdateArgs} args - Arguments to update one CommonMaterial.
     * @example
     * // Update one CommonMaterial
     * const commonMaterial = await prisma.commonMaterial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CommonMaterialUpdateArgs>(
      args: Subset<T, CommonMaterialUpdateArgs>
    ): CheckSelect<T, Prisma__CommonMaterialClient<CommonMaterial>, Prisma__CommonMaterialClient<CommonMaterialGetPayload<T>>>

    /**
     * Delete zero or more CommonMaterials.
     * @param {CommonMaterialDeleteManyArgs} args - Arguments to filter CommonMaterials to delete.
     * @example
     * // Delete a few CommonMaterials
     * const { count } = await prisma.commonMaterial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CommonMaterialDeleteManyArgs>(
      args?: Subset<T, CommonMaterialDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more CommonMaterials.
     * @param {CommonMaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CommonMaterials
     * const commonMaterial = await prisma.commonMaterial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CommonMaterialUpdateManyArgs>(
      args: Subset<T, CommonMaterialUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one CommonMaterial.
     * @param {CommonMaterialUpsertArgs} args - Arguments to update or create a CommonMaterial.
     * @example
     * // Update or create a CommonMaterial
     * const commonMaterial = await prisma.commonMaterial.upsert({
     *   create: {
     *     // ... data to create a CommonMaterial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CommonMaterial we want to update
     *   }
     * })
    **/
    upsert<T extends CommonMaterialUpsertArgs>(
      args: Subset<T, CommonMaterialUpsertArgs>
    ): CheckSelect<T, Prisma__CommonMaterialClient<CommonMaterial>, Prisma__CommonMaterialClient<CommonMaterialGetPayload<T>>>

    /**
     * Find zero or one CommonMaterial that matches the filter.
     * @param {FindUniqueCommonMaterialArgs} args - Arguments to find a CommonMaterial
     * @deprecated This will be deprecated please use prisma.commonMaterial.findUnique
     * @example
     * // Get one CommonMaterial
     * const commonMaterial = await prisma.commonMaterial.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueCommonMaterialArgs>(
      args: Subset<T, FindUniqueCommonMaterialArgs>
    ): CheckSelect<T, Prisma__CommonMaterialClient<CommonMaterial | null>, Prisma__CommonMaterialClient<CommonMaterialGetPayload<T> | null>>

    /**
     * Count the number of CommonMaterials.
     * @param {FindManyCommonMaterialArgs} args - Arguments to filter CommonMaterials to count.
     * @example
     * // Count the number of CommonMaterials
     * const count = await prisma.commonMaterial.count({
     *   where: {
     *     // ... the filter for the CommonMaterials we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyCommonMaterialArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a CommonMaterial.
     * @param {AggregateCommonMaterialArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateCommonMaterialArgs>(args: Subset<T, AggregateCommonMaterialArgs>): Promise<GetCommonMaterialAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for CommonMaterial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__CommonMaterialClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * CommonMaterial findUnique
   */
  export type FindUniqueCommonMaterialArgs = {
    /**
     * Select specific fields to fetch from the CommonMaterial
    **/
    select?: CommonMaterialSelect | null
    /**
     * Filter, which CommonMaterial to fetch.
    **/
    where: CommonMaterialWhereUniqueInput
  }


  /**
   * CommonMaterial findFirst
   */
  export type FindFirstCommonMaterialArgs = {
    /**
     * Select specific fields to fetch from the CommonMaterial
    **/
    select?: CommonMaterialSelect | null
    /**
     * Filter, which CommonMaterial to fetch.
    **/
    where?: CommonMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CommonMaterials to fetch.
    **/
    orderBy?: Enumerable<CommonMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommonMaterials.
    **/
    cursor?: CommonMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommonMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommonMaterials.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of CommonMaterials.
    **/
    distinct?: Enumerable<CommonMaterialScalarFieldEnum>
  }


  /**
   * CommonMaterial findMany
   */
  export type FindManyCommonMaterialArgs = {
    /**
     * Select specific fields to fetch from the CommonMaterial
    **/
    select?: CommonMaterialSelect | null
    /**
     * Filter, which CommonMaterials to fetch.
    **/
    where?: CommonMaterialWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of CommonMaterials to fetch.
    **/
    orderBy?: Enumerable<CommonMaterialOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CommonMaterials.
    **/
    cursor?: CommonMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommonMaterials from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommonMaterials.
    **/
    skip?: number
    distinct?: Enumerable<CommonMaterialScalarFieldEnum>
  }


  /**
   * CommonMaterial create
   */
  export type CommonMaterialCreateArgs = {
    /**
     * Select specific fields to fetch from the CommonMaterial
    **/
    select?: CommonMaterialSelect | null
    /**
     * The data needed to create a CommonMaterial.
    **/
    data: XOR<CommonMaterialUncheckedCreateInput, CommonMaterialCreateInput>
  }


  /**
   * CommonMaterial update
   */
  export type CommonMaterialUpdateArgs = {
    /**
     * Select specific fields to fetch from the CommonMaterial
    **/
    select?: CommonMaterialSelect | null
    /**
     * The data needed to update a CommonMaterial.
    **/
    data: XOR<CommonMaterialUncheckedUpdateInput, CommonMaterialUpdateInput>
    /**
     * Choose, which CommonMaterial to update.
    **/
    where: CommonMaterialWhereUniqueInput
  }


  /**
   * CommonMaterial updateMany
   */
  export type CommonMaterialUpdateManyArgs = {
    data: XOR<CommonMaterialUncheckedUpdateManyInput, CommonMaterialUpdateManyMutationInput>
    where?: CommonMaterialWhereInput
  }


  /**
   * CommonMaterial upsert
   */
  export type CommonMaterialUpsertArgs = {
    /**
     * Select specific fields to fetch from the CommonMaterial
    **/
    select?: CommonMaterialSelect | null
    /**
     * The filter to search for the CommonMaterial to update in case it exists.
    **/
    where: CommonMaterialWhereUniqueInput
    /**
     * In case the CommonMaterial found by the `where` argument doesn't exist, create a new CommonMaterial with this data.
    **/
    create: XOR<CommonMaterialUncheckedCreateInput, CommonMaterialCreateInput>
    /**
     * In case the CommonMaterial was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<CommonMaterialUncheckedUpdateInput, CommonMaterialUpdateInput>
  }


  /**
   * CommonMaterial delete
   */
  export type CommonMaterialDeleteArgs = {
    /**
     * Select specific fields to fetch from the CommonMaterial
    **/
    select?: CommonMaterialSelect | null
    /**
     * Filter which CommonMaterial to delete.
    **/
    where: CommonMaterialWhereUniqueInput
  }


  /**
   * CommonMaterial deleteMany
   */
  export type CommonMaterialDeleteManyArgs = {
    where?: CommonMaterialWhereInput
  }


  /**
   * CommonMaterial without action
   */
  export type CommonMaterialArgs = {
    /**
     * Select specific fields to fetch from the CommonMaterial
    **/
    select?: CommonMaterialSelect | null
  }



  /**
   * Model Domain
   */


  export type AggregateDomain = {
    count: number | null
    min: DomainMinAggregateOutputType | null
    max: DomainMaxAggregateOutputType | null
  }

  export type DomainMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    levels: JsonValue | null
    type: string | null
    regionId: string | null
  }

  export type DomainMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    levels: JsonValue | null
    type: string | null
    regionId: string | null
  }

  export type DomainCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    description: number | null
    levels: number | null
    type: number | null
    regionId: number | null
    _all: number
  }


  export type DomainMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    levels?: true
    type?: true
    regionId?: true
  }

  export type DomainMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    levels?: true
    type?: true
    regionId?: true
  }

  export type DomainCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    levels?: true
    type?: true
    regionId?: true
    _all?: true
  }

  export type AggregateDomainArgs = {
    /**
     * Filter which Domain to aggregate.
    **/
    where?: DomainWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Domains to fetch.
    **/
    orderBy?: Enumerable<DomainOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: DomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Domains from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Domains.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Domains
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: DomainMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: DomainMaxAggregateInputType
  }

  export type GetDomainAggregateType<T extends AggregateDomainArgs> = {
    [P in keyof T]: P extends 'count' ? number : never
  }



    



  export type DomainSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    levels?: boolean
    type?: boolean
    artifacts?: boolean | FindManyArtifactArgs
    region?: boolean | RegionArgs
    regionId?: boolean
    talentLevelUpMaterials?: boolean | FindManyTalentLevelUpMaterialArgs
    weaponAscensionMaterials?: boolean | FindManyWeaponAscensionMaterialArgs
  }

  export type DomainInclude = {
    artifacts?: boolean | FindManyArtifactArgs
    region?: boolean | RegionArgs
    talentLevelUpMaterials?: boolean | FindManyTalentLevelUpMaterialArgs
    weaponAscensionMaterials?: boolean | FindManyWeaponAscensionMaterialArgs
  }

  export type DomainGetPayload<
    S extends boolean | null | undefined | DomainArgs,
    U = keyof S
      > = S extends true
        ? Domain
    : S extends undefined
    ? never
    : S extends DomainArgs | FindManyDomainArgs
    ?'include' extends U
    ? Domain  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'artifacts'
        ? Array < ArtifactGetPayload<S['include'][P]>>  :
        P extends 'region'
        ? RegionGetPayload<S['include'][P]> | null :
        P extends 'talentLevelUpMaterials'
        ? Array < TalentLevelUpMaterialGetPayload<S['include'][P]>>  :
        P extends 'weaponAscensionMaterials'
        ? Array < WeaponAscensionMaterialGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Domain ?Domain [P]
  : 
          P extends 'artifacts'
        ? Array < ArtifactGetPayload<S['select'][P]>>  :
        P extends 'region'
        ? RegionGetPayload<S['select'][P]> | null :
        P extends 'talentLevelUpMaterials'
        ? Array < TalentLevelUpMaterialGetPayload<S['select'][P]>>  :
        P extends 'weaponAscensionMaterials'
        ? Array < WeaponAscensionMaterialGetPayload<S['select'][P]>>  : never
  } 
    : Domain
  : Domain


  export interface DomainDelegate {
    /**
     * Find zero or one Domain that matches the filter.
     * @param {FindUniqueDomainArgs} args - Arguments to find a Domain
     * @example
     * // Get one Domain
     * const domain = await prisma.domain.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueDomainArgs>(
      args: Subset<T, FindUniqueDomainArgs>
    ): CheckSelect<T, Prisma__DomainClient<Domain | null>, Prisma__DomainClient<DomainGetPayload<T> | null>>

    /**
     * Find the first Domain that matches the filter.
     * @param {FindFirstDomainArgs} args - Arguments to find a Domain
     * @example
     * // Get one Domain
     * const domain = await prisma.domain.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstDomainArgs>(
      args?: Subset<T, FindFirstDomainArgs>
    ): CheckSelect<T, Prisma__DomainClient<Domain | null>, Prisma__DomainClient<DomainGetPayload<T> | null>>

    /**
     * Find zero or more Domains that matches the filter.
     * @param {FindManyDomainArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Domains
     * const domains = await prisma.domain.findMany()
     * 
     * // Get first 10 Domains
     * const domains = await prisma.domain.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const domainWithIdOnly = await prisma.domain.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyDomainArgs>(
      args?: Subset<T, FindManyDomainArgs>
    ): CheckSelect<T, Promise<Array<Domain>>, Promise<Array<DomainGetPayload<T>>>>

    /**
     * Create a Domain.
     * @param {DomainCreateArgs} args - Arguments to create a Domain.
     * @example
     * // Create one Domain
     * const Domain = await prisma.domain.create({
     *   data: {
     *     // ... data to create a Domain
     *   }
     * })
     * 
    **/
    create<T extends DomainCreateArgs>(
      args: Subset<T, DomainCreateArgs>
    ): CheckSelect<T, Prisma__DomainClient<Domain>, Prisma__DomainClient<DomainGetPayload<T>>>

    /**
     * Delete a Domain.
     * @param {DomainDeleteArgs} args - Arguments to delete one Domain.
     * @example
     * // Delete one Domain
     * const Domain = await prisma.domain.delete({
     *   where: {
     *     // ... filter to delete one Domain
     *   }
     * })
     * 
    **/
    delete<T extends DomainDeleteArgs>(
      args: Subset<T, DomainDeleteArgs>
    ): CheckSelect<T, Prisma__DomainClient<Domain>, Prisma__DomainClient<DomainGetPayload<T>>>

    /**
     * Update one Domain.
     * @param {DomainUpdateArgs} args - Arguments to update one Domain.
     * @example
     * // Update one Domain
     * const domain = await prisma.domain.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DomainUpdateArgs>(
      args: Subset<T, DomainUpdateArgs>
    ): CheckSelect<T, Prisma__DomainClient<Domain>, Prisma__DomainClient<DomainGetPayload<T>>>

    /**
     * Delete zero or more Domains.
     * @param {DomainDeleteManyArgs} args - Arguments to filter Domains to delete.
     * @example
     * // Delete a few Domains
     * const { count } = await prisma.domain.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DomainDeleteManyArgs>(
      args?: Subset<T, DomainDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more Domains.
     * @param {DomainUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Domains
     * const domain = await prisma.domain.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DomainUpdateManyArgs>(
      args: Subset<T, DomainUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one Domain.
     * @param {DomainUpsertArgs} args - Arguments to update or create a Domain.
     * @example
     * // Update or create a Domain
     * const domain = await prisma.domain.upsert({
     *   create: {
     *     // ... data to create a Domain
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Domain we want to update
     *   }
     * })
    **/
    upsert<T extends DomainUpsertArgs>(
      args: Subset<T, DomainUpsertArgs>
    ): CheckSelect<T, Prisma__DomainClient<Domain>, Prisma__DomainClient<DomainGetPayload<T>>>

    /**
     * Find zero or one Domain that matches the filter.
     * @param {FindUniqueDomainArgs} args - Arguments to find a Domain
     * @deprecated This will be deprecated please use prisma.domain.findUnique
     * @example
     * // Get one Domain
     * const domain = await prisma.domain.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueDomainArgs>(
      args: Subset<T, FindUniqueDomainArgs>
    ): CheckSelect<T, Prisma__DomainClient<Domain | null>, Prisma__DomainClient<DomainGetPayload<T> | null>>

    /**
     * Count the number of Domains.
     * @param {FindManyDomainArgs} args - Arguments to filter Domains to count.
     * @example
     * // Count the number of Domains
     * const count = await prisma.domain.count({
     *   where: {
     *     // ... the filter for the Domains we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyDomainArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a Domain.
     * @param {AggregateDomainArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateDomainArgs>(args: Subset<T, AggregateDomainArgs>): Promise<GetDomainAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Domain.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__DomainClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    artifacts<T extends FindManyArtifactArgs = {}>(args?: Subset<T, FindManyArtifactArgs>): CheckSelect<T, Promise<Array<Artifact>>, Promise<Array<ArtifactGetPayload<T>>>>;

    region<T extends RegionArgs = {}>(args?: Subset<T, RegionArgs>): CheckSelect<T, Prisma__RegionClient<Region | null>, Prisma__RegionClient<RegionGetPayload<T> | null>>;

    talentLevelUpMaterials<T extends FindManyTalentLevelUpMaterialArgs = {}>(args?: Subset<T, FindManyTalentLevelUpMaterialArgs>): CheckSelect<T, Promise<Array<TalentLevelUpMaterial>>, Promise<Array<TalentLevelUpMaterialGetPayload<T>>>>;

    weaponAscensionMaterials<T extends FindManyWeaponAscensionMaterialArgs = {}>(args?: Subset<T, FindManyWeaponAscensionMaterialArgs>): CheckSelect<T, Promise<Array<WeaponAscensionMaterial>>, Promise<Array<WeaponAscensionMaterialGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Domain findUnique
   */
  export type FindUniqueDomainArgs = {
    /**
     * Select specific fields to fetch from the Domain
    **/
    select?: DomainSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: DomainInclude | null
    /**
     * Filter, which Domain to fetch.
    **/
    where: DomainWhereUniqueInput
  }


  /**
   * Domain findFirst
   */
  export type FindFirstDomainArgs = {
    /**
     * Select specific fields to fetch from the Domain
    **/
    select?: DomainSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: DomainInclude | null
    /**
     * Filter, which Domain to fetch.
    **/
    where?: DomainWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Domains to fetch.
    **/
    orderBy?: Enumerable<DomainOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Domains.
    **/
    cursor?: DomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Domains from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Domains.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of Domains.
    **/
    distinct?: Enumerable<DomainScalarFieldEnum>
  }


  /**
   * Domain findMany
   */
  export type FindManyDomainArgs = {
    /**
     * Select specific fields to fetch from the Domain
    **/
    select?: DomainSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: DomainInclude | null
    /**
     * Filter, which Domains to fetch.
    **/
    where?: DomainWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Domains to fetch.
    **/
    orderBy?: Enumerable<DomainOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Domains.
    **/
    cursor?: DomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Domains from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Domains.
    **/
    skip?: number
    distinct?: Enumerable<DomainScalarFieldEnum>
  }


  /**
   * Domain create
   */
  export type DomainCreateArgs = {
    /**
     * Select specific fields to fetch from the Domain
    **/
    select?: DomainSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: DomainInclude | null
    /**
     * The data needed to create a Domain.
    **/
    data: XOR<DomainUncheckedCreateInput, DomainCreateInput>
  }


  /**
   * Domain update
   */
  export type DomainUpdateArgs = {
    /**
     * Select specific fields to fetch from the Domain
    **/
    select?: DomainSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: DomainInclude | null
    /**
     * The data needed to update a Domain.
    **/
    data: XOR<DomainUncheckedUpdateInput, DomainUpdateInput>
    /**
     * Choose, which Domain to update.
    **/
    where: DomainWhereUniqueInput
  }


  /**
   * Domain updateMany
   */
  export type DomainUpdateManyArgs = {
    data: XOR<DomainUncheckedUpdateManyInput, DomainUpdateManyMutationInput>
    where?: DomainWhereInput
  }


  /**
   * Domain upsert
   */
  export type DomainUpsertArgs = {
    /**
     * Select specific fields to fetch from the Domain
    **/
    select?: DomainSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: DomainInclude | null
    /**
     * The filter to search for the Domain to update in case it exists.
    **/
    where: DomainWhereUniqueInput
    /**
     * In case the Domain found by the `where` argument doesn't exist, create a new Domain with this data.
    **/
    create: XOR<DomainUncheckedCreateInput, DomainCreateInput>
    /**
     * In case the Domain was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<DomainUncheckedUpdateInput, DomainUpdateInput>
  }


  /**
   * Domain delete
   */
  export type DomainDeleteArgs = {
    /**
     * Select specific fields to fetch from the Domain
    **/
    select?: DomainSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: DomainInclude | null
    /**
     * Filter which Domain to delete.
    **/
    where: DomainWhereUniqueInput
  }


  /**
   * Domain deleteMany
   */
  export type DomainDeleteManyArgs = {
    where?: DomainWhereInput
  }


  /**
   * Domain without action
   */
  export type DomainArgs = {
    /**
     * Select specific fields to fetch from the Domain
    **/
    select?: DomainSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: DomainInclude | null
  }



  /**
   * Model Consumeable
   */


  export type AggregateConsumeable = {
    count: number | null
    avg: ConsumeableAvgAggregateOutputType | null
    sum: ConsumeableSumAggregateOutputType | null
    min: ConsumeableMinAggregateOutputType | null
    max: ConsumeableMaxAggregateOutputType | null
  }

  export type ConsumeableAvgAggregateOutputType = {
    rarity: number
  }

  export type ConsumeableSumAggregateOutputType = {
    rarity: number
  }

  export type ConsumeableMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    effect: string | null
    image: string | null
    rarity: number
    consumeableType: ConsumableType | null
    foodType: FoodType | null
    characterProfileId: string | null
  }

  export type ConsumeableMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    description: string | null
    effect: string | null
    image: string | null
    rarity: number
    consumeableType: ConsumableType | null
    foodType: FoodType | null
    characterProfileId: string | null
  }

  export type ConsumeableCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    description: number | null
    effect: number | null
    image: number | null
    rarity: number
    consumeableType: number | null
    foodType: number | null
    characterProfileId: number | null
    _all: number
  }


  export type ConsumeableAvgAggregateInputType = {
    rarity?: true
  }

  export type ConsumeableSumAggregateInputType = {
    rarity?: true
  }

  export type ConsumeableMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    effect?: true
    image?: true
    rarity?: true
    consumeableType?: true
    foodType?: true
    characterProfileId?: true
  }

  export type ConsumeableMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    effect?: true
    image?: true
    rarity?: true
    consumeableType?: true
    foodType?: true
    characterProfileId?: true
  }

  export type ConsumeableCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    description?: true
    effect?: true
    image?: true
    rarity?: true
    consumeableType?: true
    foodType?: true
    characterProfileId?: true
    _all?: true
  }

  export type AggregateConsumeableArgs = {
    /**
     * Filter which Consumeable to aggregate.
    **/
    where?: ConsumeableWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Consumeables to fetch.
    **/
    orderBy?: Enumerable<ConsumeableOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ConsumeableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consumeables from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consumeables.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Consumeables
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: ConsumeableAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: ConsumeableSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ConsumeableMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ConsumeableMaxAggregateInputType
  }

  export type GetConsumeableAggregateType<T extends AggregateConsumeableArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetConsumeableAggregateScalarType<T[P]>
  }

  export type GetConsumeableAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof ConsumeableAvgAggregateOutputType ? ConsumeableAvgAggregateOutputType[P] : never
  }

    



  export type ConsumeableSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    description?: boolean
    effect?: boolean
    image?: boolean
    rarity?: boolean
    consumeableType?: boolean
    foodType?: boolean
    characterSpecialty?: boolean | CharacterProfileArgs
    characterProfileId?: boolean
    recipe?: boolean | ConsumeableRecipeArgs
  }

  export type ConsumeableInclude = {
    characterSpecialty?: boolean | CharacterProfileArgs
    recipe?: boolean | ConsumeableRecipeArgs
  }

  export type ConsumeableGetPayload<
    S extends boolean | null | undefined | ConsumeableArgs,
    U = keyof S
      > = S extends true
        ? Consumeable
    : S extends undefined
    ? never
    : S extends ConsumeableArgs | FindManyConsumeableArgs
    ?'include' extends U
    ? Consumeable  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'characterSpecialty'
        ? CharacterProfileGetPayload<S['include'][P]> | null :
        P extends 'recipe'
        ? ConsumeableRecipeGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Consumeable ?Consumeable [P]
  : 
          P extends 'characterSpecialty'
        ? CharacterProfileGetPayload<S['select'][P]> | null :
        P extends 'recipe'
        ? ConsumeableRecipeGetPayload<S['select'][P]> | null : never
  } 
    : Consumeable
  : Consumeable


  export interface ConsumeableDelegate {
    /**
     * Find zero or one Consumeable that matches the filter.
     * @param {FindUniqueConsumeableArgs} args - Arguments to find a Consumeable
     * @example
     * // Get one Consumeable
     * const consumeable = await prisma.consumeable.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueConsumeableArgs>(
      args: Subset<T, FindUniqueConsumeableArgs>
    ): CheckSelect<T, Prisma__ConsumeableClient<Consumeable | null>, Prisma__ConsumeableClient<ConsumeableGetPayload<T> | null>>

    /**
     * Find the first Consumeable that matches the filter.
     * @param {FindFirstConsumeableArgs} args - Arguments to find a Consumeable
     * @example
     * // Get one Consumeable
     * const consumeable = await prisma.consumeable.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstConsumeableArgs>(
      args?: Subset<T, FindFirstConsumeableArgs>
    ): CheckSelect<T, Prisma__ConsumeableClient<Consumeable | null>, Prisma__ConsumeableClient<ConsumeableGetPayload<T> | null>>

    /**
     * Find zero or more Consumeables that matches the filter.
     * @param {FindManyConsumeableArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Consumeables
     * const consumeables = await prisma.consumeable.findMany()
     * 
     * // Get first 10 Consumeables
     * const consumeables = await prisma.consumeable.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const consumeableWithIdOnly = await prisma.consumeable.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyConsumeableArgs>(
      args?: Subset<T, FindManyConsumeableArgs>
    ): CheckSelect<T, Promise<Array<Consumeable>>, Promise<Array<ConsumeableGetPayload<T>>>>

    /**
     * Create a Consumeable.
     * @param {ConsumeableCreateArgs} args - Arguments to create a Consumeable.
     * @example
     * // Create one Consumeable
     * const Consumeable = await prisma.consumeable.create({
     *   data: {
     *     // ... data to create a Consumeable
     *   }
     * })
     * 
    **/
    create<T extends ConsumeableCreateArgs>(
      args: Subset<T, ConsumeableCreateArgs>
    ): CheckSelect<T, Prisma__ConsumeableClient<Consumeable>, Prisma__ConsumeableClient<ConsumeableGetPayload<T>>>

    /**
     * Delete a Consumeable.
     * @param {ConsumeableDeleteArgs} args - Arguments to delete one Consumeable.
     * @example
     * // Delete one Consumeable
     * const Consumeable = await prisma.consumeable.delete({
     *   where: {
     *     // ... filter to delete one Consumeable
     *   }
     * })
     * 
    **/
    delete<T extends ConsumeableDeleteArgs>(
      args: Subset<T, ConsumeableDeleteArgs>
    ): CheckSelect<T, Prisma__ConsumeableClient<Consumeable>, Prisma__ConsumeableClient<ConsumeableGetPayload<T>>>

    /**
     * Update one Consumeable.
     * @param {ConsumeableUpdateArgs} args - Arguments to update one Consumeable.
     * @example
     * // Update one Consumeable
     * const consumeable = await prisma.consumeable.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ConsumeableUpdateArgs>(
      args: Subset<T, ConsumeableUpdateArgs>
    ): CheckSelect<T, Prisma__ConsumeableClient<Consumeable>, Prisma__ConsumeableClient<ConsumeableGetPayload<T>>>

    /**
     * Delete zero or more Consumeables.
     * @param {ConsumeableDeleteManyArgs} args - Arguments to filter Consumeables to delete.
     * @example
     * // Delete a few Consumeables
     * const { count } = await prisma.consumeable.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ConsumeableDeleteManyArgs>(
      args?: Subset<T, ConsumeableDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more Consumeables.
     * @param {ConsumeableUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Consumeables
     * const consumeable = await prisma.consumeable.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ConsumeableUpdateManyArgs>(
      args: Subset<T, ConsumeableUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one Consumeable.
     * @param {ConsumeableUpsertArgs} args - Arguments to update or create a Consumeable.
     * @example
     * // Update or create a Consumeable
     * const consumeable = await prisma.consumeable.upsert({
     *   create: {
     *     // ... data to create a Consumeable
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Consumeable we want to update
     *   }
     * })
    **/
    upsert<T extends ConsumeableUpsertArgs>(
      args: Subset<T, ConsumeableUpsertArgs>
    ): CheckSelect<T, Prisma__ConsumeableClient<Consumeable>, Prisma__ConsumeableClient<ConsumeableGetPayload<T>>>

    /**
     * Find zero or one Consumeable that matches the filter.
     * @param {FindUniqueConsumeableArgs} args - Arguments to find a Consumeable
     * @deprecated This will be deprecated please use prisma.consumeable.findUnique
     * @example
     * // Get one Consumeable
     * const consumeable = await prisma.consumeable.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueConsumeableArgs>(
      args: Subset<T, FindUniqueConsumeableArgs>
    ): CheckSelect<T, Prisma__ConsumeableClient<Consumeable | null>, Prisma__ConsumeableClient<ConsumeableGetPayload<T> | null>>

    /**
     * Count the number of Consumeables.
     * @param {FindManyConsumeableArgs} args - Arguments to filter Consumeables to count.
     * @example
     * // Count the number of Consumeables
     * const count = await prisma.consumeable.count({
     *   where: {
     *     // ... the filter for the Consumeables we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyConsumeableArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a Consumeable.
     * @param {AggregateConsumeableArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateConsumeableArgs>(args: Subset<T, AggregateConsumeableArgs>): Promise<GetConsumeableAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Consumeable.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ConsumeableClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    characterSpecialty<T extends CharacterProfileArgs = {}>(args?: Subset<T, CharacterProfileArgs>): CheckSelect<T, Prisma__CharacterProfileClient<CharacterProfile | null>, Prisma__CharacterProfileClient<CharacterProfileGetPayload<T> | null>>;

    recipe<T extends ConsumeableRecipeArgs = {}>(args?: Subset<T, ConsumeableRecipeArgs>): CheckSelect<T, Prisma__ConsumeableRecipeClient<ConsumeableRecipe | null>, Prisma__ConsumeableRecipeClient<ConsumeableRecipeGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Consumeable findUnique
   */
  export type FindUniqueConsumeableArgs = {
    /**
     * Select specific fields to fetch from the Consumeable
    **/
    select?: ConsumeableSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableInclude | null
    /**
     * Filter, which Consumeable to fetch.
    **/
    where: ConsumeableWhereUniqueInput
  }


  /**
   * Consumeable findFirst
   */
  export type FindFirstConsumeableArgs = {
    /**
     * Select specific fields to fetch from the Consumeable
    **/
    select?: ConsumeableSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableInclude | null
    /**
     * Filter, which Consumeable to fetch.
    **/
    where?: ConsumeableWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Consumeables to fetch.
    **/
    orderBy?: Enumerable<ConsumeableOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Consumeables.
    **/
    cursor?: ConsumeableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consumeables from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consumeables.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of Consumeables.
    **/
    distinct?: Enumerable<ConsumeableScalarFieldEnum>
  }


  /**
   * Consumeable findMany
   */
  export type FindManyConsumeableArgs = {
    /**
     * Select specific fields to fetch from the Consumeable
    **/
    select?: ConsumeableSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableInclude | null
    /**
     * Filter, which Consumeables to fetch.
    **/
    where?: ConsumeableWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Consumeables to fetch.
    **/
    orderBy?: Enumerable<ConsumeableOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Consumeables.
    **/
    cursor?: ConsumeableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consumeables from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consumeables.
    **/
    skip?: number
    distinct?: Enumerable<ConsumeableScalarFieldEnum>
  }


  /**
   * Consumeable create
   */
  export type ConsumeableCreateArgs = {
    /**
     * Select specific fields to fetch from the Consumeable
    **/
    select?: ConsumeableSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableInclude | null
    /**
     * The data needed to create a Consumeable.
    **/
    data: XOR<ConsumeableUncheckedCreateInput, ConsumeableCreateInput>
  }


  /**
   * Consumeable update
   */
  export type ConsumeableUpdateArgs = {
    /**
     * Select specific fields to fetch from the Consumeable
    **/
    select?: ConsumeableSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableInclude | null
    /**
     * The data needed to update a Consumeable.
    **/
    data: XOR<ConsumeableUncheckedUpdateInput, ConsumeableUpdateInput>
    /**
     * Choose, which Consumeable to update.
    **/
    where: ConsumeableWhereUniqueInput
  }


  /**
   * Consumeable updateMany
   */
  export type ConsumeableUpdateManyArgs = {
    data: XOR<ConsumeableUncheckedUpdateManyInput, ConsumeableUpdateManyMutationInput>
    where?: ConsumeableWhereInput
  }


  /**
   * Consumeable upsert
   */
  export type ConsumeableUpsertArgs = {
    /**
     * Select specific fields to fetch from the Consumeable
    **/
    select?: ConsumeableSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableInclude | null
    /**
     * The filter to search for the Consumeable to update in case it exists.
    **/
    where: ConsumeableWhereUniqueInput
    /**
     * In case the Consumeable found by the `where` argument doesn't exist, create a new Consumeable with this data.
    **/
    create: XOR<ConsumeableUncheckedCreateInput, ConsumeableCreateInput>
    /**
     * In case the Consumeable was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ConsumeableUncheckedUpdateInput, ConsumeableUpdateInput>
  }


  /**
   * Consumeable delete
   */
  export type ConsumeableDeleteArgs = {
    /**
     * Select specific fields to fetch from the Consumeable
    **/
    select?: ConsumeableSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableInclude | null
    /**
     * Filter which Consumeable to delete.
    **/
    where: ConsumeableWhereUniqueInput
  }


  /**
   * Consumeable deleteMany
   */
  export type ConsumeableDeleteManyArgs = {
    where?: ConsumeableWhereInput
  }


  /**
   * Consumeable without action
   */
  export type ConsumeableArgs = {
    /**
     * Select specific fields to fetch from the Consumeable
    **/
    select?: ConsumeableSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableInclude | null
  }



  /**
   * Model ConsumeableRecipe
   */


  export type AggregateConsumeableRecipe = {
    count: number | null
    min: ConsumeableRecipeMinAggregateOutputType | null
    max: ConsumeableRecipeMaxAggregateOutputType | null
  }

  export type ConsumeableRecipeMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    recipe: JsonValue | null
    consumeableId: string | null
  }

  export type ConsumeableRecipeMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    recipe: JsonValue | null
    consumeableId: string | null
  }

  export type ConsumeableRecipeCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    recipe: number | null
    consumeableId: number | null
    _all: number
  }


  export type ConsumeableRecipeMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    recipe?: true
    consumeableId?: true
  }

  export type ConsumeableRecipeMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    recipe?: true
    consumeableId?: true
  }

  export type ConsumeableRecipeCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    recipe?: true
    consumeableId?: true
    _all?: true
  }

  export type AggregateConsumeableRecipeArgs = {
    /**
     * Filter which ConsumeableRecipe to aggregate.
    **/
    where?: ConsumeableRecipeWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ConsumeableRecipes to fetch.
    **/
    orderBy?: Enumerable<ConsumeableRecipeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ConsumeableRecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConsumeableRecipes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConsumeableRecipes.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConsumeableRecipes
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ConsumeableRecipeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ConsumeableRecipeMaxAggregateInputType
  }

  export type GetConsumeableRecipeAggregateType<T extends AggregateConsumeableRecipeArgs> = {
    [P in keyof T]: P extends 'count' ? number : never
  }



    



  export type ConsumeableRecipeSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    recipe?: boolean
    consumeable?: boolean | ConsumeableArgs
    consumeableId?: boolean
    craftingMaterials?: boolean | FindManyCraftingMaterialArgs
    cookingMaterials?: boolean | FindManyCookingMaterialArgs
  }

  export type ConsumeableRecipeInclude = {
    consumeable?: boolean | ConsumeableArgs
    craftingMaterials?: boolean | FindManyCraftingMaterialArgs
    cookingMaterials?: boolean | FindManyCookingMaterialArgs
  }

  export type ConsumeableRecipeGetPayload<
    S extends boolean | null | undefined | ConsumeableRecipeArgs,
    U = keyof S
      > = S extends true
        ? ConsumeableRecipe
    : S extends undefined
    ? never
    : S extends ConsumeableRecipeArgs | FindManyConsumeableRecipeArgs
    ?'include' extends U
    ? ConsumeableRecipe  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'consumeable'
        ? ConsumeableGetPayload<S['include'][P]> | null :
        P extends 'craftingMaterials'
        ? Array < CraftingMaterialGetPayload<S['include'][P]>>  :
        P extends 'cookingMaterials'
        ? Array < CookingMaterialGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ConsumeableRecipe ?ConsumeableRecipe [P]
  : 
          P extends 'consumeable'
        ? ConsumeableGetPayload<S['select'][P]> | null :
        P extends 'craftingMaterials'
        ? Array < CraftingMaterialGetPayload<S['select'][P]>>  :
        P extends 'cookingMaterials'
        ? Array < CookingMaterialGetPayload<S['select'][P]>>  : never
  } 
    : ConsumeableRecipe
  : ConsumeableRecipe


  export interface ConsumeableRecipeDelegate {
    /**
     * Find zero or one ConsumeableRecipe that matches the filter.
     * @param {FindUniqueConsumeableRecipeArgs} args - Arguments to find a ConsumeableRecipe
     * @example
     * // Get one ConsumeableRecipe
     * const consumeableRecipe = await prisma.consumeableRecipe.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueConsumeableRecipeArgs>(
      args: Subset<T, FindUniqueConsumeableRecipeArgs>
    ): CheckSelect<T, Prisma__ConsumeableRecipeClient<ConsumeableRecipe | null>, Prisma__ConsumeableRecipeClient<ConsumeableRecipeGetPayload<T> | null>>

    /**
     * Find the first ConsumeableRecipe that matches the filter.
     * @param {FindFirstConsumeableRecipeArgs} args - Arguments to find a ConsumeableRecipe
     * @example
     * // Get one ConsumeableRecipe
     * const consumeableRecipe = await prisma.consumeableRecipe.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstConsumeableRecipeArgs>(
      args?: Subset<T, FindFirstConsumeableRecipeArgs>
    ): CheckSelect<T, Prisma__ConsumeableRecipeClient<ConsumeableRecipe | null>, Prisma__ConsumeableRecipeClient<ConsumeableRecipeGetPayload<T> | null>>

    /**
     * Find zero or more ConsumeableRecipes that matches the filter.
     * @param {FindManyConsumeableRecipeArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConsumeableRecipes
     * const consumeableRecipes = await prisma.consumeableRecipe.findMany()
     * 
     * // Get first 10 ConsumeableRecipes
     * const consumeableRecipes = await prisma.consumeableRecipe.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const consumeableRecipeWithIdOnly = await prisma.consumeableRecipe.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyConsumeableRecipeArgs>(
      args?: Subset<T, FindManyConsumeableRecipeArgs>
    ): CheckSelect<T, Promise<Array<ConsumeableRecipe>>, Promise<Array<ConsumeableRecipeGetPayload<T>>>>

    /**
     * Create a ConsumeableRecipe.
     * @param {ConsumeableRecipeCreateArgs} args - Arguments to create a ConsumeableRecipe.
     * @example
     * // Create one ConsumeableRecipe
     * const ConsumeableRecipe = await prisma.consumeableRecipe.create({
     *   data: {
     *     // ... data to create a ConsumeableRecipe
     *   }
     * })
     * 
    **/
    create<T extends ConsumeableRecipeCreateArgs>(
      args: Subset<T, ConsumeableRecipeCreateArgs>
    ): CheckSelect<T, Prisma__ConsumeableRecipeClient<ConsumeableRecipe>, Prisma__ConsumeableRecipeClient<ConsumeableRecipeGetPayload<T>>>

    /**
     * Delete a ConsumeableRecipe.
     * @param {ConsumeableRecipeDeleteArgs} args - Arguments to delete one ConsumeableRecipe.
     * @example
     * // Delete one ConsumeableRecipe
     * const ConsumeableRecipe = await prisma.consumeableRecipe.delete({
     *   where: {
     *     // ... filter to delete one ConsumeableRecipe
     *   }
     * })
     * 
    **/
    delete<T extends ConsumeableRecipeDeleteArgs>(
      args: Subset<T, ConsumeableRecipeDeleteArgs>
    ): CheckSelect<T, Prisma__ConsumeableRecipeClient<ConsumeableRecipe>, Prisma__ConsumeableRecipeClient<ConsumeableRecipeGetPayload<T>>>

    /**
     * Update one ConsumeableRecipe.
     * @param {ConsumeableRecipeUpdateArgs} args - Arguments to update one ConsumeableRecipe.
     * @example
     * // Update one ConsumeableRecipe
     * const consumeableRecipe = await prisma.consumeableRecipe.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ConsumeableRecipeUpdateArgs>(
      args: Subset<T, ConsumeableRecipeUpdateArgs>
    ): CheckSelect<T, Prisma__ConsumeableRecipeClient<ConsumeableRecipe>, Prisma__ConsumeableRecipeClient<ConsumeableRecipeGetPayload<T>>>

    /**
     * Delete zero or more ConsumeableRecipes.
     * @param {ConsumeableRecipeDeleteManyArgs} args - Arguments to filter ConsumeableRecipes to delete.
     * @example
     * // Delete a few ConsumeableRecipes
     * const { count } = await prisma.consumeableRecipe.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ConsumeableRecipeDeleteManyArgs>(
      args?: Subset<T, ConsumeableRecipeDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more ConsumeableRecipes.
     * @param {ConsumeableRecipeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConsumeableRecipes
     * const consumeableRecipe = await prisma.consumeableRecipe.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ConsumeableRecipeUpdateManyArgs>(
      args: Subset<T, ConsumeableRecipeUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one ConsumeableRecipe.
     * @param {ConsumeableRecipeUpsertArgs} args - Arguments to update or create a ConsumeableRecipe.
     * @example
     * // Update or create a ConsumeableRecipe
     * const consumeableRecipe = await prisma.consumeableRecipe.upsert({
     *   create: {
     *     // ... data to create a ConsumeableRecipe
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConsumeableRecipe we want to update
     *   }
     * })
    **/
    upsert<T extends ConsumeableRecipeUpsertArgs>(
      args: Subset<T, ConsumeableRecipeUpsertArgs>
    ): CheckSelect<T, Prisma__ConsumeableRecipeClient<ConsumeableRecipe>, Prisma__ConsumeableRecipeClient<ConsumeableRecipeGetPayload<T>>>

    /**
     * Find zero or one ConsumeableRecipe that matches the filter.
     * @param {FindUniqueConsumeableRecipeArgs} args - Arguments to find a ConsumeableRecipe
     * @deprecated This will be deprecated please use prisma.consumeableRecipe.findUnique
     * @example
     * // Get one ConsumeableRecipe
     * const consumeableRecipe = await prisma.consumeableRecipe.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueConsumeableRecipeArgs>(
      args: Subset<T, FindUniqueConsumeableRecipeArgs>
    ): CheckSelect<T, Prisma__ConsumeableRecipeClient<ConsumeableRecipe | null>, Prisma__ConsumeableRecipeClient<ConsumeableRecipeGetPayload<T> | null>>

    /**
     * Count the number of ConsumeableRecipes.
     * @param {FindManyConsumeableRecipeArgs} args - Arguments to filter ConsumeableRecipes to count.
     * @example
     * // Count the number of ConsumeableRecipes
     * const count = await prisma.consumeableRecipe.count({
     *   where: {
     *     // ... the filter for the ConsumeableRecipes we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyConsumeableRecipeArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a ConsumeableRecipe.
     * @param {AggregateConsumeableRecipeArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateConsumeableRecipeArgs>(args: Subset<T, AggregateConsumeableRecipeArgs>): Promise<GetConsumeableRecipeAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for ConsumeableRecipe.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ConsumeableRecipeClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    consumeable<T extends ConsumeableArgs = {}>(args?: Subset<T, ConsumeableArgs>): CheckSelect<T, Prisma__ConsumeableClient<Consumeable | null>, Prisma__ConsumeableClient<ConsumeableGetPayload<T> | null>>;

    craftingMaterials<T extends FindManyCraftingMaterialArgs = {}>(args?: Subset<T, FindManyCraftingMaterialArgs>): CheckSelect<T, Promise<Array<CraftingMaterial>>, Promise<Array<CraftingMaterialGetPayload<T>>>>;

    cookingMaterials<T extends FindManyCookingMaterialArgs = {}>(args?: Subset<T, FindManyCookingMaterialArgs>): CheckSelect<T, Promise<Array<CookingMaterial>>, Promise<Array<CookingMaterialGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ConsumeableRecipe findUnique
   */
  export type FindUniqueConsumeableRecipeArgs = {
    /**
     * Select specific fields to fetch from the ConsumeableRecipe
    **/
    select?: ConsumeableRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableRecipeInclude | null
    /**
     * Filter, which ConsumeableRecipe to fetch.
    **/
    where: ConsumeableRecipeWhereUniqueInput
  }


  /**
   * ConsumeableRecipe findFirst
   */
  export type FindFirstConsumeableRecipeArgs = {
    /**
     * Select specific fields to fetch from the ConsumeableRecipe
    **/
    select?: ConsumeableRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableRecipeInclude | null
    /**
     * Filter, which ConsumeableRecipe to fetch.
    **/
    where?: ConsumeableRecipeWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ConsumeableRecipes to fetch.
    **/
    orderBy?: Enumerable<ConsumeableRecipeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConsumeableRecipes.
    **/
    cursor?: ConsumeableRecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConsumeableRecipes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConsumeableRecipes.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of ConsumeableRecipes.
    **/
    distinct?: Enumerable<ConsumeableRecipeScalarFieldEnum>
  }


  /**
   * ConsumeableRecipe findMany
   */
  export type FindManyConsumeableRecipeArgs = {
    /**
     * Select specific fields to fetch from the ConsumeableRecipe
    **/
    select?: ConsumeableRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableRecipeInclude | null
    /**
     * Filter, which ConsumeableRecipes to fetch.
    **/
    where?: ConsumeableRecipeWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ConsumeableRecipes to fetch.
    **/
    orderBy?: Enumerable<ConsumeableRecipeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConsumeableRecipes.
    **/
    cursor?: ConsumeableRecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConsumeableRecipes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConsumeableRecipes.
    **/
    skip?: number
    distinct?: Enumerable<ConsumeableRecipeScalarFieldEnum>
  }


  /**
   * ConsumeableRecipe create
   */
  export type ConsumeableRecipeCreateArgs = {
    /**
     * Select specific fields to fetch from the ConsumeableRecipe
    **/
    select?: ConsumeableRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableRecipeInclude | null
    /**
     * The data needed to create a ConsumeableRecipe.
    **/
    data: XOR<ConsumeableRecipeUncheckedCreateInput, ConsumeableRecipeCreateInput>
  }


  /**
   * ConsumeableRecipe update
   */
  export type ConsumeableRecipeUpdateArgs = {
    /**
     * Select specific fields to fetch from the ConsumeableRecipe
    **/
    select?: ConsumeableRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableRecipeInclude | null
    /**
     * The data needed to update a ConsumeableRecipe.
    **/
    data: XOR<ConsumeableRecipeUncheckedUpdateInput, ConsumeableRecipeUpdateInput>
    /**
     * Choose, which ConsumeableRecipe to update.
    **/
    where: ConsumeableRecipeWhereUniqueInput
  }


  /**
   * ConsumeableRecipe updateMany
   */
  export type ConsumeableRecipeUpdateManyArgs = {
    data: XOR<ConsumeableRecipeUncheckedUpdateManyInput, ConsumeableRecipeUpdateManyMutationInput>
    where?: ConsumeableRecipeWhereInput
  }


  /**
   * ConsumeableRecipe upsert
   */
  export type ConsumeableRecipeUpsertArgs = {
    /**
     * Select specific fields to fetch from the ConsumeableRecipe
    **/
    select?: ConsumeableRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableRecipeInclude | null
    /**
     * The filter to search for the ConsumeableRecipe to update in case it exists.
    **/
    where: ConsumeableRecipeWhereUniqueInput
    /**
     * In case the ConsumeableRecipe found by the `where` argument doesn't exist, create a new ConsumeableRecipe with this data.
    **/
    create: XOR<ConsumeableRecipeUncheckedCreateInput, ConsumeableRecipeCreateInput>
    /**
     * In case the ConsumeableRecipe was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ConsumeableRecipeUncheckedUpdateInput, ConsumeableRecipeUpdateInput>
  }


  /**
   * ConsumeableRecipe delete
   */
  export type ConsumeableRecipeDeleteArgs = {
    /**
     * Select specific fields to fetch from the ConsumeableRecipe
    **/
    select?: ConsumeableRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableRecipeInclude | null
    /**
     * Filter which ConsumeableRecipe to delete.
    **/
    where: ConsumeableRecipeWhereUniqueInput
  }


  /**
   * ConsumeableRecipe deleteMany
   */
  export type ConsumeableRecipeDeleteManyArgs = {
    where?: ConsumeableRecipeWhereInput
  }


  /**
   * ConsumeableRecipe without action
   */
  export type ConsumeableRecipeArgs = {
    /**
     * Select specific fields to fetch from the ConsumeableRecipe
    **/
    select?: ConsumeableRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ConsumeableRecipeInclude | null
  }



  /**
   * Model ProcessRecipe
   */


  export type AggregateProcessRecipe = {
    count: number | null
    avg: ProcessRecipeAvgAggregateOutputType | null
    sum: ProcessRecipeSumAggregateOutputType | null
    min: ProcessRecipeMinAggregateOutputType | null
    max: ProcessRecipeMaxAggregateOutputType | null
  }

  export type ProcessRecipeAvgAggregateOutputType = {
    processingTime: number | null
  }

  export type ProcessRecipeSumAggregateOutputType = {
    processingTime: number | null
  }

  export type ProcessRecipeMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    processingTime: number | null
    recipe: JsonValue | null
    materialId: string | null
  }

  export type ProcessRecipeMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    processingTime: number | null
    recipe: JsonValue | null
    materialId: string | null
  }

  export type ProcessRecipeCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    processingTime: number | null
    recipe: number | null
    materialId: number | null
    _all: number
  }


  export type ProcessRecipeAvgAggregateInputType = {
    processingTime?: true
  }

  export type ProcessRecipeSumAggregateInputType = {
    processingTime?: true
  }

  export type ProcessRecipeMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    processingTime?: true
    recipe?: true
    materialId?: true
  }

  export type ProcessRecipeMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    processingTime?: true
    recipe?: true
    materialId?: true
  }

  export type ProcessRecipeCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    processingTime?: true
    recipe?: true
    materialId?: true
    _all?: true
  }

  export type AggregateProcessRecipeArgs = {
    /**
     * Filter which ProcessRecipe to aggregate.
    **/
    where?: ProcessRecipeWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ProcessRecipes to fetch.
    **/
    orderBy?: Enumerable<ProcessRecipeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ProcessRecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProcessRecipes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProcessRecipes.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProcessRecipes
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: ProcessRecipeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: ProcessRecipeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ProcessRecipeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ProcessRecipeMaxAggregateInputType
  }

  export type GetProcessRecipeAggregateType<T extends AggregateProcessRecipeArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetProcessRecipeAggregateScalarType<T[P]>
  }

  export type GetProcessRecipeAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof ProcessRecipeAvgAggregateOutputType ? ProcessRecipeAvgAggregateOutputType[P] : never
  }

    



  export type ProcessRecipeSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    processingTime?: boolean
    recipe?: boolean
    material?: boolean | CookingMaterialArgs
    materialId?: boolean
  }

  export type ProcessRecipeInclude = {
    material?: boolean | CookingMaterialArgs
  }

  export type ProcessRecipeGetPayload<
    S extends boolean | null | undefined | ProcessRecipeArgs,
    U = keyof S
      > = S extends true
        ? ProcessRecipe
    : S extends undefined
    ? never
    : S extends ProcessRecipeArgs | FindManyProcessRecipeArgs
    ?'include' extends U
    ? ProcessRecipe  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'material'
        ? CookingMaterialGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ProcessRecipe ?ProcessRecipe [P]
  : 
          P extends 'material'
        ? CookingMaterialGetPayload<S['select'][P]> | null : never
  } 
    : ProcessRecipe
  : ProcessRecipe


  export interface ProcessRecipeDelegate {
    /**
     * Find zero or one ProcessRecipe that matches the filter.
     * @param {FindUniqueProcessRecipeArgs} args - Arguments to find a ProcessRecipe
     * @example
     * // Get one ProcessRecipe
     * const processRecipe = await prisma.processRecipe.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueProcessRecipeArgs>(
      args: Subset<T, FindUniqueProcessRecipeArgs>
    ): CheckSelect<T, Prisma__ProcessRecipeClient<ProcessRecipe | null>, Prisma__ProcessRecipeClient<ProcessRecipeGetPayload<T> | null>>

    /**
     * Find the first ProcessRecipe that matches the filter.
     * @param {FindFirstProcessRecipeArgs} args - Arguments to find a ProcessRecipe
     * @example
     * // Get one ProcessRecipe
     * const processRecipe = await prisma.processRecipe.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstProcessRecipeArgs>(
      args?: Subset<T, FindFirstProcessRecipeArgs>
    ): CheckSelect<T, Prisma__ProcessRecipeClient<ProcessRecipe | null>, Prisma__ProcessRecipeClient<ProcessRecipeGetPayload<T> | null>>

    /**
     * Find zero or more ProcessRecipes that matches the filter.
     * @param {FindManyProcessRecipeArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProcessRecipes
     * const processRecipes = await prisma.processRecipe.findMany()
     * 
     * // Get first 10 ProcessRecipes
     * const processRecipes = await prisma.processRecipe.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const processRecipeWithIdOnly = await prisma.processRecipe.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyProcessRecipeArgs>(
      args?: Subset<T, FindManyProcessRecipeArgs>
    ): CheckSelect<T, Promise<Array<ProcessRecipe>>, Promise<Array<ProcessRecipeGetPayload<T>>>>

    /**
     * Create a ProcessRecipe.
     * @param {ProcessRecipeCreateArgs} args - Arguments to create a ProcessRecipe.
     * @example
     * // Create one ProcessRecipe
     * const ProcessRecipe = await prisma.processRecipe.create({
     *   data: {
     *     // ... data to create a ProcessRecipe
     *   }
     * })
     * 
    **/
    create<T extends ProcessRecipeCreateArgs>(
      args: Subset<T, ProcessRecipeCreateArgs>
    ): CheckSelect<T, Prisma__ProcessRecipeClient<ProcessRecipe>, Prisma__ProcessRecipeClient<ProcessRecipeGetPayload<T>>>

    /**
     * Delete a ProcessRecipe.
     * @param {ProcessRecipeDeleteArgs} args - Arguments to delete one ProcessRecipe.
     * @example
     * // Delete one ProcessRecipe
     * const ProcessRecipe = await prisma.processRecipe.delete({
     *   where: {
     *     // ... filter to delete one ProcessRecipe
     *   }
     * })
     * 
    **/
    delete<T extends ProcessRecipeDeleteArgs>(
      args: Subset<T, ProcessRecipeDeleteArgs>
    ): CheckSelect<T, Prisma__ProcessRecipeClient<ProcessRecipe>, Prisma__ProcessRecipeClient<ProcessRecipeGetPayload<T>>>

    /**
     * Update one ProcessRecipe.
     * @param {ProcessRecipeUpdateArgs} args - Arguments to update one ProcessRecipe.
     * @example
     * // Update one ProcessRecipe
     * const processRecipe = await prisma.processRecipe.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProcessRecipeUpdateArgs>(
      args: Subset<T, ProcessRecipeUpdateArgs>
    ): CheckSelect<T, Prisma__ProcessRecipeClient<ProcessRecipe>, Prisma__ProcessRecipeClient<ProcessRecipeGetPayload<T>>>

    /**
     * Delete zero or more ProcessRecipes.
     * @param {ProcessRecipeDeleteManyArgs} args - Arguments to filter ProcessRecipes to delete.
     * @example
     * // Delete a few ProcessRecipes
     * const { count } = await prisma.processRecipe.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProcessRecipeDeleteManyArgs>(
      args?: Subset<T, ProcessRecipeDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more ProcessRecipes.
     * @param {ProcessRecipeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProcessRecipes
     * const processRecipe = await prisma.processRecipe.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProcessRecipeUpdateManyArgs>(
      args: Subset<T, ProcessRecipeUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one ProcessRecipe.
     * @param {ProcessRecipeUpsertArgs} args - Arguments to update or create a ProcessRecipe.
     * @example
     * // Update or create a ProcessRecipe
     * const processRecipe = await prisma.processRecipe.upsert({
     *   create: {
     *     // ... data to create a ProcessRecipe
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProcessRecipe we want to update
     *   }
     * })
    **/
    upsert<T extends ProcessRecipeUpsertArgs>(
      args: Subset<T, ProcessRecipeUpsertArgs>
    ): CheckSelect<T, Prisma__ProcessRecipeClient<ProcessRecipe>, Prisma__ProcessRecipeClient<ProcessRecipeGetPayload<T>>>

    /**
     * Find zero or one ProcessRecipe that matches the filter.
     * @param {FindUniqueProcessRecipeArgs} args - Arguments to find a ProcessRecipe
     * @deprecated This will be deprecated please use prisma.processRecipe.findUnique
     * @example
     * // Get one ProcessRecipe
     * const processRecipe = await prisma.processRecipe.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueProcessRecipeArgs>(
      args: Subset<T, FindUniqueProcessRecipeArgs>
    ): CheckSelect<T, Prisma__ProcessRecipeClient<ProcessRecipe | null>, Prisma__ProcessRecipeClient<ProcessRecipeGetPayload<T> | null>>

    /**
     * Count the number of ProcessRecipes.
     * @param {FindManyProcessRecipeArgs} args - Arguments to filter ProcessRecipes to count.
     * @example
     * // Count the number of ProcessRecipes
     * const count = await prisma.processRecipe.count({
     *   where: {
     *     // ... the filter for the ProcessRecipes we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyProcessRecipeArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a ProcessRecipe.
     * @param {AggregateProcessRecipeArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateProcessRecipeArgs>(args: Subset<T, AggregateProcessRecipeArgs>): Promise<GetProcessRecipeAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for ProcessRecipe.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProcessRecipeClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    material<T extends CookingMaterialArgs = {}>(args?: Subset<T, CookingMaterialArgs>): CheckSelect<T, Prisma__CookingMaterialClient<CookingMaterial | null>, Prisma__CookingMaterialClient<CookingMaterialGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ProcessRecipe findUnique
   */
  export type FindUniqueProcessRecipeArgs = {
    /**
     * Select specific fields to fetch from the ProcessRecipe
    **/
    select?: ProcessRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProcessRecipeInclude | null
    /**
     * Filter, which ProcessRecipe to fetch.
    **/
    where: ProcessRecipeWhereUniqueInput
  }


  /**
   * ProcessRecipe findFirst
   */
  export type FindFirstProcessRecipeArgs = {
    /**
     * Select specific fields to fetch from the ProcessRecipe
    **/
    select?: ProcessRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProcessRecipeInclude | null
    /**
     * Filter, which ProcessRecipe to fetch.
    **/
    where?: ProcessRecipeWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ProcessRecipes to fetch.
    **/
    orderBy?: Enumerable<ProcessRecipeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProcessRecipes.
    **/
    cursor?: ProcessRecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProcessRecipes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProcessRecipes.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of ProcessRecipes.
    **/
    distinct?: Enumerable<ProcessRecipeScalarFieldEnum>
  }


  /**
   * ProcessRecipe findMany
   */
  export type FindManyProcessRecipeArgs = {
    /**
     * Select specific fields to fetch from the ProcessRecipe
    **/
    select?: ProcessRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProcessRecipeInclude | null
    /**
     * Filter, which ProcessRecipes to fetch.
    **/
    where?: ProcessRecipeWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ProcessRecipes to fetch.
    **/
    orderBy?: Enumerable<ProcessRecipeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProcessRecipes.
    **/
    cursor?: ProcessRecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProcessRecipes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProcessRecipes.
    **/
    skip?: number
    distinct?: Enumerable<ProcessRecipeScalarFieldEnum>
  }


  /**
   * ProcessRecipe create
   */
  export type ProcessRecipeCreateArgs = {
    /**
     * Select specific fields to fetch from the ProcessRecipe
    **/
    select?: ProcessRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProcessRecipeInclude | null
    /**
     * The data needed to create a ProcessRecipe.
    **/
    data: XOR<ProcessRecipeUncheckedCreateInput, ProcessRecipeCreateInput>
  }


  /**
   * ProcessRecipe update
   */
  export type ProcessRecipeUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProcessRecipe
    **/
    select?: ProcessRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProcessRecipeInclude | null
    /**
     * The data needed to update a ProcessRecipe.
    **/
    data: XOR<ProcessRecipeUncheckedUpdateInput, ProcessRecipeUpdateInput>
    /**
     * Choose, which ProcessRecipe to update.
    **/
    where: ProcessRecipeWhereUniqueInput
  }


  /**
   * ProcessRecipe updateMany
   */
  export type ProcessRecipeUpdateManyArgs = {
    data: XOR<ProcessRecipeUncheckedUpdateManyInput, ProcessRecipeUpdateManyMutationInput>
    where?: ProcessRecipeWhereInput
  }


  /**
   * ProcessRecipe upsert
   */
  export type ProcessRecipeUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProcessRecipe
    **/
    select?: ProcessRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProcessRecipeInclude | null
    /**
     * The filter to search for the ProcessRecipe to update in case it exists.
    **/
    where: ProcessRecipeWhereUniqueInput
    /**
     * In case the ProcessRecipe found by the `where` argument doesn't exist, create a new ProcessRecipe with this data.
    **/
    create: XOR<ProcessRecipeUncheckedCreateInput, ProcessRecipeCreateInput>
    /**
     * In case the ProcessRecipe was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ProcessRecipeUncheckedUpdateInput, ProcessRecipeUpdateInput>
  }


  /**
   * ProcessRecipe delete
   */
  export type ProcessRecipeDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProcessRecipe
    **/
    select?: ProcessRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProcessRecipeInclude | null
    /**
     * Filter which ProcessRecipe to delete.
    **/
    where: ProcessRecipeWhereUniqueInput
  }


  /**
   * ProcessRecipe deleteMany
   */
  export type ProcessRecipeDeleteManyArgs = {
    where?: ProcessRecipeWhereInput
  }


  /**
   * ProcessRecipe without action
   */
  export type ProcessRecipeArgs = {
    /**
     * Select specific fields to fetch from the ProcessRecipe
    **/
    select?: ProcessRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ProcessRecipeInclude | null
  }



  /**
   * Model ForgeRecipe
   */


  export type AggregateForgeRecipe = {
    count: number | null
    avg: ForgeRecipeAvgAggregateOutputType | null
    sum: ForgeRecipeSumAggregateOutputType | null
    min: ForgeRecipeMinAggregateOutputType | null
    max: ForgeRecipeMaxAggregateOutputType | null
  }

  export type ForgeRecipeAvgAggregateOutputType = {
    craftingTime: number | null
  }

  export type ForgeRecipeSumAggregateOutputType = {
    craftingTime: number | null
  }

  export type ForgeRecipeMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    craftingTime: number | null
    recipe: JsonValue | null
    weaponEnhancementMaterialId: string | null
    weaponId: string | null
  }

  export type ForgeRecipeMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    craftingTime: number | null
    recipe: JsonValue | null
    weaponEnhancementMaterialId: string | null
    weaponId: string | null
  }

  export type ForgeRecipeCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    craftingTime: number | null
    recipe: number | null
    weaponEnhancementMaterialId: number | null
    weaponId: number | null
    _all: number
  }


  export type ForgeRecipeAvgAggregateInputType = {
    craftingTime?: true
  }

  export type ForgeRecipeSumAggregateInputType = {
    craftingTime?: true
  }

  export type ForgeRecipeMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    craftingTime?: true
    recipe?: true
    weaponEnhancementMaterialId?: true
    weaponId?: true
  }

  export type ForgeRecipeMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    craftingTime?: true
    recipe?: true
    weaponEnhancementMaterialId?: true
    weaponId?: true
  }

  export type ForgeRecipeCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    craftingTime?: true
    recipe?: true
    weaponEnhancementMaterialId?: true
    weaponId?: true
    _all?: true
  }

  export type AggregateForgeRecipeArgs = {
    /**
     * Filter which ForgeRecipe to aggregate.
    **/
    where?: ForgeRecipeWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ForgeRecipes to fetch.
    **/
    orderBy?: Enumerable<ForgeRecipeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ForgeRecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ForgeRecipes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ForgeRecipes.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ForgeRecipes
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: ForgeRecipeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: ForgeRecipeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ForgeRecipeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ForgeRecipeMaxAggregateInputType
  }

  export type GetForgeRecipeAggregateType<T extends AggregateForgeRecipeArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetForgeRecipeAggregateScalarType<T[P]>
  }

  export type GetForgeRecipeAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof ForgeRecipeAvgAggregateOutputType ? ForgeRecipeAvgAggregateOutputType[P] : never
  }

    



  export type ForgeRecipeSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    craftingTime?: boolean
    recipe?: boolean
    weaponEnhancementMaterials?: boolean | FindManyWeaponEnhancementMaterialArgs
    weaponEnhancementMaterial?: boolean | WeaponEnhancementMaterialArgs
    weaponEnhancementMaterialId?: boolean
    weapon?: boolean | WeaponArgs
    weaponId?: boolean
  }

  export type ForgeRecipeInclude = {
    weaponEnhancementMaterials?: boolean | FindManyWeaponEnhancementMaterialArgs
    weaponEnhancementMaterial?: boolean | WeaponEnhancementMaterialArgs
    weapon?: boolean | WeaponArgs
  }

  export type ForgeRecipeGetPayload<
    S extends boolean | null | undefined | ForgeRecipeArgs,
    U = keyof S
      > = S extends true
        ? ForgeRecipe
    : S extends undefined
    ? never
    : S extends ForgeRecipeArgs | FindManyForgeRecipeArgs
    ?'include' extends U
    ? ForgeRecipe  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'weaponEnhancementMaterials'
        ? Array < WeaponEnhancementMaterialGetPayload<S['include'][P]>>  :
        P extends 'weaponEnhancementMaterial'
        ? WeaponEnhancementMaterialGetPayload<S['include'][P]> | null :
        P extends 'weapon'
        ? WeaponGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ForgeRecipe ?ForgeRecipe [P]
  : 
          P extends 'weaponEnhancementMaterials'
        ? Array < WeaponEnhancementMaterialGetPayload<S['select'][P]>>  :
        P extends 'weaponEnhancementMaterial'
        ? WeaponEnhancementMaterialGetPayload<S['select'][P]> | null :
        P extends 'weapon'
        ? WeaponGetPayload<S['select'][P]> | null : never
  } 
    : ForgeRecipe
  : ForgeRecipe


  export interface ForgeRecipeDelegate {
    /**
     * Find zero or one ForgeRecipe that matches the filter.
     * @param {FindUniqueForgeRecipeArgs} args - Arguments to find a ForgeRecipe
     * @example
     * // Get one ForgeRecipe
     * const forgeRecipe = await prisma.forgeRecipe.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueForgeRecipeArgs>(
      args: Subset<T, FindUniqueForgeRecipeArgs>
    ): CheckSelect<T, Prisma__ForgeRecipeClient<ForgeRecipe | null>, Prisma__ForgeRecipeClient<ForgeRecipeGetPayload<T> | null>>

    /**
     * Find the first ForgeRecipe that matches the filter.
     * @param {FindFirstForgeRecipeArgs} args - Arguments to find a ForgeRecipe
     * @example
     * // Get one ForgeRecipe
     * const forgeRecipe = await prisma.forgeRecipe.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstForgeRecipeArgs>(
      args?: Subset<T, FindFirstForgeRecipeArgs>
    ): CheckSelect<T, Prisma__ForgeRecipeClient<ForgeRecipe | null>, Prisma__ForgeRecipeClient<ForgeRecipeGetPayload<T> | null>>

    /**
     * Find zero or more ForgeRecipes that matches the filter.
     * @param {FindManyForgeRecipeArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ForgeRecipes
     * const forgeRecipes = await prisma.forgeRecipe.findMany()
     * 
     * // Get first 10 ForgeRecipes
     * const forgeRecipes = await prisma.forgeRecipe.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const forgeRecipeWithIdOnly = await prisma.forgeRecipe.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyForgeRecipeArgs>(
      args?: Subset<T, FindManyForgeRecipeArgs>
    ): CheckSelect<T, Promise<Array<ForgeRecipe>>, Promise<Array<ForgeRecipeGetPayload<T>>>>

    /**
     * Create a ForgeRecipe.
     * @param {ForgeRecipeCreateArgs} args - Arguments to create a ForgeRecipe.
     * @example
     * // Create one ForgeRecipe
     * const ForgeRecipe = await prisma.forgeRecipe.create({
     *   data: {
     *     // ... data to create a ForgeRecipe
     *   }
     * })
     * 
    **/
    create<T extends ForgeRecipeCreateArgs>(
      args: Subset<T, ForgeRecipeCreateArgs>
    ): CheckSelect<T, Prisma__ForgeRecipeClient<ForgeRecipe>, Prisma__ForgeRecipeClient<ForgeRecipeGetPayload<T>>>

    /**
     * Delete a ForgeRecipe.
     * @param {ForgeRecipeDeleteArgs} args - Arguments to delete one ForgeRecipe.
     * @example
     * // Delete one ForgeRecipe
     * const ForgeRecipe = await prisma.forgeRecipe.delete({
     *   where: {
     *     // ... filter to delete one ForgeRecipe
     *   }
     * })
     * 
    **/
    delete<T extends ForgeRecipeDeleteArgs>(
      args: Subset<T, ForgeRecipeDeleteArgs>
    ): CheckSelect<T, Prisma__ForgeRecipeClient<ForgeRecipe>, Prisma__ForgeRecipeClient<ForgeRecipeGetPayload<T>>>

    /**
     * Update one ForgeRecipe.
     * @param {ForgeRecipeUpdateArgs} args - Arguments to update one ForgeRecipe.
     * @example
     * // Update one ForgeRecipe
     * const forgeRecipe = await prisma.forgeRecipe.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ForgeRecipeUpdateArgs>(
      args: Subset<T, ForgeRecipeUpdateArgs>
    ): CheckSelect<T, Prisma__ForgeRecipeClient<ForgeRecipe>, Prisma__ForgeRecipeClient<ForgeRecipeGetPayload<T>>>

    /**
     * Delete zero or more ForgeRecipes.
     * @param {ForgeRecipeDeleteManyArgs} args - Arguments to filter ForgeRecipes to delete.
     * @example
     * // Delete a few ForgeRecipes
     * const { count } = await prisma.forgeRecipe.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ForgeRecipeDeleteManyArgs>(
      args?: Subset<T, ForgeRecipeDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more ForgeRecipes.
     * @param {ForgeRecipeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ForgeRecipes
     * const forgeRecipe = await prisma.forgeRecipe.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ForgeRecipeUpdateManyArgs>(
      args: Subset<T, ForgeRecipeUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one ForgeRecipe.
     * @param {ForgeRecipeUpsertArgs} args - Arguments to update or create a ForgeRecipe.
     * @example
     * // Update or create a ForgeRecipe
     * const forgeRecipe = await prisma.forgeRecipe.upsert({
     *   create: {
     *     // ... data to create a ForgeRecipe
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ForgeRecipe we want to update
     *   }
     * })
    **/
    upsert<T extends ForgeRecipeUpsertArgs>(
      args: Subset<T, ForgeRecipeUpsertArgs>
    ): CheckSelect<T, Prisma__ForgeRecipeClient<ForgeRecipe>, Prisma__ForgeRecipeClient<ForgeRecipeGetPayload<T>>>

    /**
     * Find zero or one ForgeRecipe that matches the filter.
     * @param {FindUniqueForgeRecipeArgs} args - Arguments to find a ForgeRecipe
     * @deprecated This will be deprecated please use prisma.forgeRecipe.findUnique
     * @example
     * // Get one ForgeRecipe
     * const forgeRecipe = await prisma.forgeRecipe.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueForgeRecipeArgs>(
      args: Subset<T, FindUniqueForgeRecipeArgs>
    ): CheckSelect<T, Prisma__ForgeRecipeClient<ForgeRecipe | null>, Prisma__ForgeRecipeClient<ForgeRecipeGetPayload<T> | null>>

    /**
     * Count the number of ForgeRecipes.
     * @param {FindManyForgeRecipeArgs} args - Arguments to filter ForgeRecipes to count.
     * @example
     * // Count the number of ForgeRecipes
     * const count = await prisma.forgeRecipe.count({
     *   where: {
     *     // ... the filter for the ForgeRecipes we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyForgeRecipeArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a ForgeRecipe.
     * @param {AggregateForgeRecipeArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateForgeRecipeArgs>(args: Subset<T, AggregateForgeRecipeArgs>): Promise<GetForgeRecipeAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for ForgeRecipe.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ForgeRecipeClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    weaponEnhancementMaterials<T extends FindManyWeaponEnhancementMaterialArgs = {}>(args?: Subset<T, FindManyWeaponEnhancementMaterialArgs>): CheckSelect<T, Promise<Array<WeaponEnhancementMaterial>>, Promise<Array<WeaponEnhancementMaterialGetPayload<T>>>>;

    weaponEnhancementMaterial<T extends WeaponEnhancementMaterialArgs = {}>(args?: Subset<T, WeaponEnhancementMaterialArgs>): CheckSelect<T, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterial | null>, Prisma__WeaponEnhancementMaterialClient<WeaponEnhancementMaterialGetPayload<T> | null>>;

    weapon<T extends WeaponArgs = {}>(args?: Subset<T, WeaponArgs>): CheckSelect<T, Prisma__WeaponClient<Weapon | null>, Prisma__WeaponClient<WeaponGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ForgeRecipe findUnique
   */
  export type FindUniqueForgeRecipeArgs = {
    /**
     * Select specific fields to fetch from the ForgeRecipe
    **/
    select?: ForgeRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ForgeRecipeInclude | null
    /**
     * Filter, which ForgeRecipe to fetch.
    **/
    where: ForgeRecipeWhereUniqueInput
  }


  /**
   * ForgeRecipe findFirst
   */
  export type FindFirstForgeRecipeArgs = {
    /**
     * Select specific fields to fetch from the ForgeRecipe
    **/
    select?: ForgeRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ForgeRecipeInclude | null
    /**
     * Filter, which ForgeRecipe to fetch.
    **/
    where?: ForgeRecipeWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ForgeRecipes to fetch.
    **/
    orderBy?: Enumerable<ForgeRecipeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ForgeRecipes.
    **/
    cursor?: ForgeRecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ForgeRecipes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ForgeRecipes.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of ForgeRecipes.
    **/
    distinct?: Enumerable<ForgeRecipeScalarFieldEnum>
  }


  /**
   * ForgeRecipe findMany
   */
  export type FindManyForgeRecipeArgs = {
    /**
     * Select specific fields to fetch from the ForgeRecipe
    **/
    select?: ForgeRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ForgeRecipeInclude | null
    /**
     * Filter, which ForgeRecipes to fetch.
    **/
    where?: ForgeRecipeWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ForgeRecipes to fetch.
    **/
    orderBy?: Enumerable<ForgeRecipeOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ForgeRecipes.
    **/
    cursor?: ForgeRecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ForgeRecipes from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ForgeRecipes.
    **/
    skip?: number
    distinct?: Enumerable<ForgeRecipeScalarFieldEnum>
  }


  /**
   * ForgeRecipe create
   */
  export type ForgeRecipeCreateArgs = {
    /**
     * Select specific fields to fetch from the ForgeRecipe
    **/
    select?: ForgeRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ForgeRecipeInclude | null
    /**
     * The data needed to create a ForgeRecipe.
    **/
    data: XOR<ForgeRecipeUncheckedCreateInput, ForgeRecipeCreateInput>
  }


  /**
   * ForgeRecipe update
   */
  export type ForgeRecipeUpdateArgs = {
    /**
     * Select specific fields to fetch from the ForgeRecipe
    **/
    select?: ForgeRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ForgeRecipeInclude | null
    /**
     * The data needed to update a ForgeRecipe.
    **/
    data: XOR<ForgeRecipeUncheckedUpdateInput, ForgeRecipeUpdateInput>
    /**
     * Choose, which ForgeRecipe to update.
    **/
    where: ForgeRecipeWhereUniqueInput
  }


  /**
   * ForgeRecipe updateMany
   */
  export type ForgeRecipeUpdateManyArgs = {
    data: XOR<ForgeRecipeUncheckedUpdateManyInput, ForgeRecipeUpdateManyMutationInput>
    where?: ForgeRecipeWhereInput
  }


  /**
   * ForgeRecipe upsert
   */
  export type ForgeRecipeUpsertArgs = {
    /**
     * Select specific fields to fetch from the ForgeRecipe
    **/
    select?: ForgeRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ForgeRecipeInclude | null
    /**
     * The filter to search for the ForgeRecipe to update in case it exists.
    **/
    where: ForgeRecipeWhereUniqueInput
    /**
     * In case the ForgeRecipe found by the `where` argument doesn't exist, create a new ForgeRecipe with this data.
    **/
    create: XOR<ForgeRecipeUncheckedCreateInput, ForgeRecipeCreateInput>
    /**
     * In case the ForgeRecipe was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ForgeRecipeUncheckedUpdateInput, ForgeRecipeUpdateInput>
  }


  /**
   * ForgeRecipe delete
   */
  export type ForgeRecipeDeleteArgs = {
    /**
     * Select specific fields to fetch from the ForgeRecipe
    **/
    select?: ForgeRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ForgeRecipeInclude | null
    /**
     * Filter which ForgeRecipe to delete.
    **/
    where: ForgeRecipeWhereUniqueInput
  }


  /**
   * ForgeRecipe deleteMany
   */
  export type ForgeRecipeDeleteManyArgs = {
    where?: ForgeRecipeWhereInput
  }


  /**
   * ForgeRecipe without action
   */
  export type ForgeRecipeArgs = {
    /**
     * Select specific fields to fetch from the ForgeRecipe
    **/
    select?: ForgeRecipeSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ForgeRecipeInclude | null
  }



  /**
   * Model ArtifactSet
   */


  export type AggregateArtifactSet = {
    count: number | null
    avg: ArtifactSetAvgAggregateOutputType | null
    sum: ArtifactSetSumAggregateOutputType | null
    min: ArtifactSetMinAggregateOutputType | null
    max: ArtifactSetMaxAggregateOutputType | null
  }

  export type ArtifactSetAvgAggregateOutputType = {
    maxRarity: number | null
  }

  export type ArtifactSetSumAggregateOutputType = {
    maxRarity: number | null
  }

  export type ArtifactSetMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    image: string | null
    maxRarity: number | null
    pieceBonusFour: string | null
    pieceBonusOne: string | null
    pieceBonusTwo: string | null
  }

  export type ArtifactSetMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    image: string | null
    maxRarity: number | null
    pieceBonusFour: string | null
    pieceBonusOne: string | null
    pieceBonusTwo: string | null
  }

  export type ArtifactSetCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    image: number | null
    maxRarity: number | null
    pieceBonusFour: number | null
    pieceBonusOne: number | null
    pieceBonusTwo: number | null
    _all: number
  }


  export type ArtifactSetAvgAggregateInputType = {
    maxRarity?: true
  }

  export type ArtifactSetSumAggregateInputType = {
    maxRarity?: true
  }

  export type ArtifactSetMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    image?: true
    maxRarity?: true
    pieceBonusFour?: true
    pieceBonusOne?: true
    pieceBonusTwo?: true
  }

  export type ArtifactSetMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    image?: true
    maxRarity?: true
    pieceBonusFour?: true
    pieceBonusOne?: true
    pieceBonusTwo?: true
  }

  export type ArtifactSetCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    image?: true
    maxRarity?: true
    pieceBonusFour?: true
    pieceBonusOne?: true
    pieceBonusTwo?: true
    _all?: true
  }

  export type AggregateArtifactSetArgs = {
    /**
     * Filter which ArtifactSet to aggregate.
    **/
    where?: ArtifactSetWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ArtifactSets to fetch.
    **/
    orderBy?: Enumerable<ArtifactSetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ArtifactSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArtifactSets from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArtifactSets.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ArtifactSets
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: ArtifactSetAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: ArtifactSetSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ArtifactSetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ArtifactSetMaxAggregateInputType
  }

  export type GetArtifactSetAggregateType<T extends AggregateArtifactSetArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetArtifactSetAggregateScalarType<T[P]>
  }

  export type GetArtifactSetAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof ArtifactSetAvgAggregateOutputType ? ArtifactSetAvgAggregateOutputType[P] : never
  }

    



  export type ArtifactSetSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    image?: boolean
    maxRarity?: boolean
    pieceBonusFour?: boolean
    pieceBonusOne?: boolean
    pieceBonusTwo?: boolean
    artifacts?: boolean | FindManyArtifactArgs
  }

  export type ArtifactSetInclude = {
    artifacts?: boolean | FindManyArtifactArgs
  }

  export type ArtifactSetGetPayload<
    S extends boolean | null | undefined | ArtifactSetArgs,
    U = keyof S
      > = S extends true
        ? ArtifactSet
    : S extends undefined
    ? never
    : S extends ArtifactSetArgs | FindManyArtifactSetArgs
    ?'include' extends U
    ? ArtifactSet  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'artifacts'
        ? Array < ArtifactGetPayload<S['include'][P]>>  : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof ArtifactSet ?ArtifactSet [P]
  : 
          P extends 'artifacts'
        ? Array < ArtifactGetPayload<S['select'][P]>>  : never
  } 
    : ArtifactSet
  : ArtifactSet


  export interface ArtifactSetDelegate {
    /**
     * Find zero or one ArtifactSet that matches the filter.
     * @param {FindUniqueArtifactSetArgs} args - Arguments to find a ArtifactSet
     * @example
     * // Get one ArtifactSet
     * const artifactSet = await prisma.artifactSet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueArtifactSetArgs>(
      args: Subset<T, FindUniqueArtifactSetArgs>
    ): CheckSelect<T, Prisma__ArtifactSetClient<ArtifactSet | null>, Prisma__ArtifactSetClient<ArtifactSetGetPayload<T> | null>>

    /**
     * Find the first ArtifactSet that matches the filter.
     * @param {FindFirstArtifactSetArgs} args - Arguments to find a ArtifactSet
     * @example
     * // Get one ArtifactSet
     * const artifactSet = await prisma.artifactSet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstArtifactSetArgs>(
      args?: Subset<T, FindFirstArtifactSetArgs>
    ): CheckSelect<T, Prisma__ArtifactSetClient<ArtifactSet | null>, Prisma__ArtifactSetClient<ArtifactSetGetPayload<T> | null>>

    /**
     * Find zero or more ArtifactSets that matches the filter.
     * @param {FindManyArtifactSetArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ArtifactSets
     * const artifactSets = await prisma.artifactSet.findMany()
     * 
     * // Get first 10 ArtifactSets
     * const artifactSets = await prisma.artifactSet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const artifactSetWithIdOnly = await prisma.artifactSet.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyArtifactSetArgs>(
      args?: Subset<T, FindManyArtifactSetArgs>
    ): CheckSelect<T, Promise<Array<ArtifactSet>>, Promise<Array<ArtifactSetGetPayload<T>>>>

    /**
     * Create a ArtifactSet.
     * @param {ArtifactSetCreateArgs} args - Arguments to create a ArtifactSet.
     * @example
     * // Create one ArtifactSet
     * const ArtifactSet = await prisma.artifactSet.create({
     *   data: {
     *     // ... data to create a ArtifactSet
     *   }
     * })
     * 
    **/
    create<T extends ArtifactSetCreateArgs>(
      args: Subset<T, ArtifactSetCreateArgs>
    ): CheckSelect<T, Prisma__ArtifactSetClient<ArtifactSet>, Prisma__ArtifactSetClient<ArtifactSetGetPayload<T>>>

    /**
     * Delete a ArtifactSet.
     * @param {ArtifactSetDeleteArgs} args - Arguments to delete one ArtifactSet.
     * @example
     * // Delete one ArtifactSet
     * const ArtifactSet = await prisma.artifactSet.delete({
     *   where: {
     *     // ... filter to delete one ArtifactSet
     *   }
     * })
     * 
    **/
    delete<T extends ArtifactSetDeleteArgs>(
      args: Subset<T, ArtifactSetDeleteArgs>
    ): CheckSelect<T, Prisma__ArtifactSetClient<ArtifactSet>, Prisma__ArtifactSetClient<ArtifactSetGetPayload<T>>>

    /**
     * Update one ArtifactSet.
     * @param {ArtifactSetUpdateArgs} args - Arguments to update one ArtifactSet.
     * @example
     * // Update one ArtifactSet
     * const artifactSet = await prisma.artifactSet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ArtifactSetUpdateArgs>(
      args: Subset<T, ArtifactSetUpdateArgs>
    ): CheckSelect<T, Prisma__ArtifactSetClient<ArtifactSet>, Prisma__ArtifactSetClient<ArtifactSetGetPayload<T>>>

    /**
     * Delete zero or more ArtifactSets.
     * @param {ArtifactSetDeleteManyArgs} args - Arguments to filter ArtifactSets to delete.
     * @example
     * // Delete a few ArtifactSets
     * const { count } = await prisma.artifactSet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ArtifactSetDeleteManyArgs>(
      args?: Subset<T, ArtifactSetDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more ArtifactSets.
     * @param {ArtifactSetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ArtifactSets
     * const artifactSet = await prisma.artifactSet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ArtifactSetUpdateManyArgs>(
      args: Subset<T, ArtifactSetUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one ArtifactSet.
     * @param {ArtifactSetUpsertArgs} args - Arguments to update or create a ArtifactSet.
     * @example
     * // Update or create a ArtifactSet
     * const artifactSet = await prisma.artifactSet.upsert({
     *   create: {
     *     // ... data to create a ArtifactSet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ArtifactSet we want to update
     *   }
     * })
    **/
    upsert<T extends ArtifactSetUpsertArgs>(
      args: Subset<T, ArtifactSetUpsertArgs>
    ): CheckSelect<T, Prisma__ArtifactSetClient<ArtifactSet>, Prisma__ArtifactSetClient<ArtifactSetGetPayload<T>>>

    /**
     * Find zero or one ArtifactSet that matches the filter.
     * @param {FindUniqueArtifactSetArgs} args - Arguments to find a ArtifactSet
     * @deprecated This will be deprecated please use prisma.artifactSet.findUnique
     * @example
     * // Get one ArtifactSet
     * const artifactSet = await prisma.artifactSet.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueArtifactSetArgs>(
      args: Subset<T, FindUniqueArtifactSetArgs>
    ): CheckSelect<T, Prisma__ArtifactSetClient<ArtifactSet | null>, Prisma__ArtifactSetClient<ArtifactSetGetPayload<T> | null>>

    /**
     * Count the number of ArtifactSets.
     * @param {FindManyArtifactSetArgs} args - Arguments to filter ArtifactSets to count.
     * @example
     * // Count the number of ArtifactSets
     * const count = await prisma.artifactSet.count({
     *   where: {
     *     // ... the filter for the ArtifactSets we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyArtifactSetArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a ArtifactSet.
     * @param {AggregateArtifactSetArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateArtifactSetArgs>(args: Subset<T, AggregateArtifactSetArgs>): Promise<GetArtifactSetAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for ArtifactSet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ArtifactSetClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    artifacts<T extends FindManyArtifactArgs = {}>(args?: Subset<T, FindManyArtifactArgs>): CheckSelect<T, Promise<Array<Artifact>>, Promise<Array<ArtifactGetPayload<T>>>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * ArtifactSet findUnique
   */
  export type FindUniqueArtifactSetArgs = {
    /**
     * Select specific fields to fetch from the ArtifactSet
    **/
    select?: ArtifactSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactSetInclude | null
    /**
     * Filter, which ArtifactSet to fetch.
    **/
    where: ArtifactSetWhereUniqueInput
  }


  /**
   * ArtifactSet findFirst
   */
  export type FindFirstArtifactSetArgs = {
    /**
     * Select specific fields to fetch from the ArtifactSet
    **/
    select?: ArtifactSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactSetInclude | null
    /**
     * Filter, which ArtifactSet to fetch.
    **/
    where?: ArtifactSetWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ArtifactSets to fetch.
    **/
    orderBy?: Enumerable<ArtifactSetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArtifactSets.
    **/
    cursor?: ArtifactSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArtifactSets from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArtifactSets.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of ArtifactSets.
    **/
    distinct?: Enumerable<ArtifactSetScalarFieldEnum>
  }


  /**
   * ArtifactSet findMany
   */
  export type FindManyArtifactSetArgs = {
    /**
     * Select specific fields to fetch from the ArtifactSet
    **/
    select?: ArtifactSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactSetInclude | null
    /**
     * Filter, which ArtifactSets to fetch.
    **/
    where?: ArtifactSetWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of ArtifactSets to fetch.
    **/
    orderBy?: Enumerable<ArtifactSetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ArtifactSets.
    **/
    cursor?: ArtifactSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArtifactSets from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArtifactSets.
    **/
    skip?: number
    distinct?: Enumerable<ArtifactSetScalarFieldEnum>
  }


  /**
   * ArtifactSet create
   */
  export type ArtifactSetCreateArgs = {
    /**
     * Select specific fields to fetch from the ArtifactSet
    **/
    select?: ArtifactSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactSetInclude | null
    /**
     * The data needed to create a ArtifactSet.
    **/
    data: XOR<ArtifactSetUncheckedCreateInput, ArtifactSetCreateInput>
  }


  /**
   * ArtifactSet update
   */
  export type ArtifactSetUpdateArgs = {
    /**
     * Select specific fields to fetch from the ArtifactSet
    **/
    select?: ArtifactSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactSetInclude | null
    /**
     * The data needed to update a ArtifactSet.
    **/
    data: XOR<ArtifactSetUncheckedUpdateInput, ArtifactSetUpdateInput>
    /**
     * Choose, which ArtifactSet to update.
    **/
    where: ArtifactSetWhereUniqueInput
  }


  /**
   * ArtifactSet updateMany
   */
  export type ArtifactSetUpdateManyArgs = {
    data: XOR<ArtifactSetUncheckedUpdateManyInput, ArtifactSetUpdateManyMutationInput>
    where?: ArtifactSetWhereInput
  }


  /**
   * ArtifactSet upsert
   */
  export type ArtifactSetUpsertArgs = {
    /**
     * Select specific fields to fetch from the ArtifactSet
    **/
    select?: ArtifactSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactSetInclude | null
    /**
     * The filter to search for the ArtifactSet to update in case it exists.
    **/
    where: ArtifactSetWhereUniqueInput
    /**
     * In case the ArtifactSet found by the `where` argument doesn't exist, create a new ArtifactSet with this data.
    **/
    create: XOR<ArtifactSetUncheckedCreateInput, ArtifactSetCreateInput>
    /**
     * In case the ArtifactSet was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ArtifactSetUncheckedUpdateInput, ArtifactSetUpdateInput>
  }


  /**
   * ArtifactSet delete
   */
  export type ArtifactSetDeleteArgs = {
    /**
     * Select specific fields to fetch from the ArtifactSet
    **/
    select?: ArtifactSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactSetInclude | null
    /**
     * Filter which ArtifactSet to delete.
    **/
    where: ArtifactSetWhereUniqueInput
  }


  /**
   * ArtifactSet deleteMany
   */
  export type ArtifactSetDeleteManyArgs = {
    where?: ArtifactSetWhereInput
  }


  /**
   * ArtifactSet without action
   */
  export type ArtifactSetArgs = {
    /**
     * Select specific fields to fetch from the ArtifactSet
    **/
    select?: ArtifactSetSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactSetInclude | null
  }



  /**
   * Model Artifact
   */


  export type AggregateArtifact = {
    count: number | null
    avg: ArtifactAvgAggregateOutputType | null
    sum: ArtifactSumAggregateOutputType | null
    min: ArtifactMinAggregateOutputType | null
    max: ArtifactMaxAggregateOutputType | null
  }

  export type ArtifactAvgAggregateOutputType = {
    minRarity: number
  }

  export type ArtifactSumAggregateOutputType = {
    minRarity: number
  }

  export type ArtifactMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    lore: string | null
    minRarity: number
    possibleMainStats: JsonValue | null
    possibleSubStats: JsonValue | null
    source: JsonValue | null
    type: ArtifactType | null
    artifactSetId: string | null
    domainId: string | null
  }

  export type ArtifactMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    lore: string | null
    minRarity: number
    possibleMainStats: JsonValue | null
    possibleSubStats: JsonValue | null
    source: JsonValue | null
    type: ArtifactType | null
    artifactSetId: string | null
    domainId: string | null
  }

  export type ArtifactCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    lore: number | null
    minRarity: number
    possibleMainStats: number | null
    possibleSubStats: number | null
    source: number | null
    type: number | null
    artifactSetId: number | null
    domainId: number | null
    _all: number
  }


  export type ArtifactAvgAggregateInputType = {
    minRarity?: true
  }

  export type ArtifactSumAggregateInputType = {
    minRarity?: true
  }

  export type ArtifactMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    lore?: true
    minRarity?: true
    possibleMainStats?: true
    possibleSubStats?: true
    source?: true
    type?: true
    artifactSetId?: true
    domainId?: true
  }

  export type ArtifactMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    lore?: true
    minRarity?: true
    possibleMainStats?: true
    possibleSubStats?: true
    source?: true
    type?: true
    artifactSetId?: true
    domainId?: true
  }

  export type ArtifactCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    lore?: true
    minRarity?: true
    possibleMainStats?: true
    possibleSubStats?: true
    source?: true
    type?: true
    artifactSetId?: true
    domainId?: true
    _all?: true
  }

  export type AggregateArtifactArgs = {
    /**
     * Filter which Artifact to aggregate.
    **/
    where?: ArtifactWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Artifacts to fetch.
    **/
    orderBy?: Enumerable<ArtifactOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: ArtifactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Artifacts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Artifacts.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Artifacts
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    avg?: ArtifactAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    sum?: ArtifactSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: ArtifactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: ArtifactMaxAggregateInputType
  }

  export type GetArtifactAggregateType<T extends AggregateArtifactArgs> = {
    [P in keyof T]: P extends 'count' ? number : GetArtifactAggregateScalarType<T[P]>
  }

  export type GetArtifactAggregateScalarType<T extends any> = {
    [P in keyof T]: P extends keyof ArtifactAvgAggregateOutputType ? ArtifactAvgAggregateOutputType[P] : never
  }

    



  export type ArtifactSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    lore?: boolean
    minRarity?: boolean
    possibleMainStats?: boolean
    possibleSubStats?: boolean
    source?: boolean
    type?: boolean
    set?: boolean | ArtifactSetArgs
    artifactSetId?: boolean
    domain?: boolean | DomainArgs
    domainId?: boolean
  }

  export type ArtifactInclude = {
    set?: boolean | ArtifactSetArgs
    domain?: boolean | DomainArgs
  }

  export type ArtifactGetPayload<
    S extends boolean | null | undefined | ArtifactArgs,
    U = keyof S
      > = S extends true
        ? Artifact
    : S extends undefined
    ? never
    : S extends ArtifactArgs | FindManyArtifactArgs
    ?'include' extends U
    ? Artifact  & {
    [P in TrueKeys<S['include']>]: 
          P extends 'set'
        ? ArtifactSetGetPayload<S['include'][P]> | null :
        P extends 'domain'
        ? DomainGetPayload<S['include'][P]> | null : never
  } 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Artifact ?Artifact [P]
  : 
          P extends 'set'
        ? ArtifactSetGetPayload<S['select'][P]> | null :
        P extends 'domain'
        ? DomainGetPayload<S['select'][P]> | null : never
  } 
    : Artifact
  : Artifact


  export interface ArtifactDelegate {
    /**
     * Find zero or one Artifact that matches the filter.
     * @param {FindUniqueArtifactArgs} args - Arguments to find a Artifact
     * @example
     * // Get one Artifact
     * const artifact = await prisma.artifact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueArtifactArgs>(
      args: Subset<T, FindUniqueArtifactArgs>
    ): CheckSelect<T, Prisma__ArtifactClient<Artifact | null>, Prisma__ArtifactClient<ArtifactGetPayload<T> | null>>

    /**
     * Find the first Artifact that matches the filter.
     * @param {FindFirstArtifactArgs} args - Arguments to find a Artifact
     * @example
     * // Get one Artifact
     * const artifact = await prisma.artifact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstArtifactArgs>(
      args?: Subset<T, FindFirstArtifactArgs>
    ): CheckSelect<T, Prisma__ArtifactClient<Artifact | null>, Prisma__ArtifactClient<ArtifactGetPayload<T> | null>>

    /**
     * Find zero or more Artifacts that matches the filter.
     * @param {FindManyArtifactArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Artifacts
     * const artifacts = await prisma.artifact.findMany()
     * 
     * // Get first 10 Artifacts
     * const artifacts = await prisma.artifact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const artifactWithIdOnly = await prisma.artifact.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyArtifactArgs>(
      args?: Subset<T, FindManyArtifactArgs>
    ): CheckSelect<T, Promise<Array<Artifact>>, Promise<Array<ArtifactGetPayload<T>>>>

    /**
     * Create a Artifact.
     * @param {ArtifactCreateArgs} args - Arguments to create a Artifact.
     * @example
     * // Create one Artifact
     * const Artifact = await prisma.artifact.create({
     *   data: {
     *     // ... data to create a Artifact
     *   }
     * })
     * 
    **/
    create<T extends ArtifactCreateArgs>(
      args: Subset<T, ArtifactCreateArgs>
    ): CheckSelect<T, Prisma__ArtifactClient<Artifact>, Prisma__ArtifactClient<ArtifactGetPayload<T>>>

    /**
     * Delete a Artifact.
     * @param {ArtifactDeleteArgs} args - Arguments to delete one Artifact.
     * @example
     * // Delete one Artifact
     * const Artifact = await prisma.artifact.delete({
     *   where: {
     *     // ... filter to delete one Artifact
     *   }
     * })
     * 
    **/
    delete<T extends ArtifactDeleteArgs>(
      args: Subset<T, ArtifactDeleteArgs>
    ): CheckSelect<T, Prisma__ArtifactClient<Artifact>, Prisma__ArtifactClient<ArtifactGetPayload<T>>>

    /**
     * Update one Artifact.
     * @param {ArtifactUpdateArgs} args - Arguments to update one Artifact.
     * @example
     * // Update one Artifact
     * const artifact = await prisma.artifact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ArtifactUpdateArgs>(
      args: Subset<T, ArtifactUpdateArgs>
    ): CheckSelect<T, Prisma__ArtifactClient<Artifact>, Prisma__ArtifactClient<ArtifactGetPayload<T>>>

    /**
     * Delete zero or more Artifacts.
     * @param {ArtifactDeleteManyArgs} args - Arguments to filter Artifacts to delete.
     * @example
     * // Delete a few Artifacts
     * const { count } = await prisma.artifact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ArtifactDeleteManyArgs>(
      args?: Subset<T, ArtifactDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more Artifacts.
     * @param {ArtifactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Artifacts
     * const artifact = await prisma.artifact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ArtifactUpdateManyArgs>(
      args: Subset<T, ArtifactUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one Artifact.
     * @param {ArtifactUpsertArgs} args - Arguments to update or create a Artifact.
     * @example
     * // Update or create a Artifact
     * const artifact = await prisma.artifact.upsert({
     *   create: {
     *     // ... data to create a Artifact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Artifact we want to update
     *   }
     * })
    **/
    upsert<T extends ArtifactUpsertArgs>(
      args: Subset<T, ArtifactUpsertArgs>
    ): CheckSelect<T, Prisma__ArtifactClient<Artifact>, Prisma__ArtifactClient<ArtifactGetPayload<T>>>

    /**
     * Find zero or one Artifact that matches the filter.
     * @param {FindUniqueArtifactArgs} args - Arguments to find a Artifact
     * @deprecated This will be deprecated please use prisma.artifact.findUnique
     * @example
     * // Get one Artifact
     * const artifact = await prisma.artifact.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueArtifactArgs>(
      args: Subset<T, FindUniqueArtifactArgs>
    ): CheckSelect<T, Prisma__ArtifactClient<Artifact | null>, Prisma__ArtifactClient<ArtifactGetPayload<T> | null>>

    /**
     * Count the number of Artifacts.
     * @param {FindManyArtifactArgs} args - Arguments to filter Artifacts to count.
     * @example
     * // Count the number of Artifacts
     * const count = await prisma.artifact.count({
     *   where: {
     *     // ... the filter for the Artifacts we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyArtifactArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a Artifact.
     * @param {AggregateArtifactArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateArtifactArgs>(args: Subset<T, AggregateArtifactArgs>): Promise<GetArtifactAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Artifact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ArtifactClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    set<T extends ArtifactSetArgs = {}>(args?: Subset<T, ArtifactSetArgs>): CheckSelect<T, Prisma__ArtifactSetClient<ArtifactSet | null>, Prisma__ArtifactSetClient<ArtifactSetGetPayload<T> | null>>;

    domain<T extends DomainArgs = {}>(args?: Subset<T, DomainArgs>): CheckSelect<T, Prisma__DomainClient<Domain | null>, Prisma__DomainClient<DomainGetPayload<T> | null>>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Artifact findUnique
   */
  export type FindUniqueArtifactArgs = {
    /**
     * Select specific fields to fetch from the Artifact
    **/
    select?: ArtifactSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactInclude | null
    /**
     * Filter, which Artifact to fetch.
    **/
    where: ArtifactWhereUniqueInput
  }


  /**
   * Artifact findFirst
   */
  export type FindFirstArtifactArgs = {
    /**
     * Select specific fields to fetch from the Artifact
    **/
    select?: ArtifactSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactInclude | null
    /**
     * Filter, which Artifact to fetch.
    **/
    where?: ArtifactWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Artifacts to fetch.
    **/
    orderBy?: Enumerable<ArtifactOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Artifacts.
    **/
    cursor?: ArtifactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Artifacts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Artifacts.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of Artifacts.
    **/
    distinct?: Enumerable<ArtifactScalarFieldEnum>
  }


  /**
   * Artifact findMany
   */
  export type FindManyArtifactArgs = {
    /**
     * Select specific fields to fetch from the Artifact
    **/
    select?: ArtifactSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactInclude | null
    /**
     * Filter, which Artifacts to fetch.
    **/
    where?: ArtifactWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Artifacts to fetch.
    **/
    orderBy?: Enumerable<ArtifactOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Artifacts.
    **/
    cursor?: ArtifactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Artifacts from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Artifacts.
    **/
    skip?: number
    distinct?: Enumerable<ArtifactScalarFieldEnum>
  }


  /**
   * Artifact create
   */
  export type ArtifactCreateArgs = {
    /**
     * Select specific fields to fetch from the Artifact
    **/
    select?: ArtifactSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactInclude | null
    /**
     * The data needed to create a Artifact.
    **/
    data: XOR<ArtifactUncheckedCreateInput, ArtifactCreateInput>
  }


  /**
   * Artifact update
   */
  export type ArtifactUpdateArgs = {
    /**
     * Select specific fields to fetch from the Artifact
    **/
    select?: ArtifactSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactInclude | null
    /**
     * The data needed to update a Artifact.
    **/
    data: XOR<ArtifactUncheckedUpdateInput, ArtifactUpdateInput>
    /**
     * Choose, which Artifact to update.
    **/
    where: ArtifactWhereUniqueInput
  }


  /**
   * Artifact updateMany
   */
  export type ArtifactUpdateManyArgs = {
    data: XOR<ArtifactUncheckedUpdateManyInput, ArtifactUpdateManyMutationInput>
    where?: ArtifactWhereInput
  }


  /**
   * Artifact upsert
   */
  export type ArtifactUpsertArgs = {
    /**
     * Select specific fields to fetch from the Artifact
    **/
    select?: ArtifactSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactInclude | null
    /**
     * The filter to search for the Artifact to update in case it exists.
    **/
    where: ArtifactWhereUniqueInput
    /**
     * In case the Artifact found by the `where` argument doesn't exist, create a new Artifact with this data.
    **/
    create: XOR<ArtifactUncheckedCreateInput, ArtifactCreateInput>
    /**
     * In case the Artifact was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<ArtifactUncheckedUpdateInput, ArtifactUpdateInput>
  }


  /**
   * Artifact delete
   */
  export type ArtifactDeleteArgs = {
    /**
     * Select specific fields to fetch from the Artifact
    **/
    select?: ArtifactSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactInclude | null
    /**
     * Filter which Artifact to delete.
    **/
    where: ArtifactWhereUniqueInput
  }


  /**
   * Artifact deleteMany
   */
  export type ArtifactDeleteManyArgs = {
    where?: ArtifactWhereInput
  }


  /**
   * Artifact without action
   */
  export type ArtifactArgs = {
    /**
     * Select specific fields to fetch from the Artifact
    **/
    select?: ArtifactSelect | null
    /**
     * Choose, which related nodes to fetch as well.
    **/
    include?: ArtifactInclude | null
  }



  /**
   * Model Gadget
   */


  export type AggregateGadget = {
    count: number | null
    min: GadgetMinAggregateOutputType | null
    max: GadgetMaxAggregateOutputType | null
  }

  export type GadgetMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    icon: string | null
    effect: string | null
    craftingType: string | null
    source: string | null
    reuseable: string | null
    recipe: JsonValue | null
  }

  export type GadgetMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    icon: string | null
    effect: string | null
    craftingType: string | null
    source: string | null
    reuseable: string | null
    recipe: JsonValue | null
  }

  export type GadgetCountAggregateOutputType = {
    id: number | null
    createdAt: number | null
    updatedAt: number | null
    name: number | null
    icon: number | null
    effect: number | null
    craftingType: number | null
    source: number | null
    reuseable: number | null
    recipe: number | null
    _all: number
  }


  export type GadgetMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    icon?: true
    effect?: true
    craftingType?: true
    source?: true
    reuseable?: true
    recipe?: true
  }

  export type GadgetMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    icon?: true
    effect?: true
    craftingType?: true
    source?: true
    reuseable?: true
    recipe?: true
  }

  export type GadgetCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    icon?: true
    effect?: true
    craftingType?: true
    source?: true
    reuseable?: true
    recipe?: true
    _all?: true
  }

  export type AggregateGadgetArgs = {
    /**
     * Filter which Gadget to aggregate.
    **/
    where?: GadgetWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Gadgets to fetch.
    **/
    orderBy?: Enumerable<GadgetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
    **/
    cursor?: GadgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gadgets from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gadgets.
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Gadgets
    **/
    count?: true
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    min?: GadgetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    max?: GadgetMaxAggregateInputType
  }

  export type GetGadgetAggregateType<T extends AggregateGadgetArgs> = {
    [P in keyof T]: P extends 'count' ? number : never
  }



    



  export type GadgetSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    icon?: boolean
    effect?: boolean
    craftingType?: boolean
    source?: boolean
    reuseable?: boolean
    recipe?: boolean
  }

  export type GadgetGetPayload<
    S extends boolean | null | undefined | GadgetArgs,
    U = keyof S
      > = S extends true
        ? Gadget
    : S extends undefined
    ? never
    : S extends GadgetArgs | FindManyGadgetArgs
    ?'include' extends U
    ? Gadget 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]: P extends keyof Gadget ?Gadget [P]
  : 
     never
  } 
    : Gadget
  : Gadget


  export interface GadgetDelegate {
    /**
     * Find zero or one Gadget that matches the filter.
     * @param {FindUniqueGadgetArgs} args - Arguments to find a Gadget
     * @example
     * // Get one Gadget
     * const gadget = await prisma.gadget.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FindUniqueGadgetArgs>(
      args: Subset<T, FindUniqueGadgetArgs>
    ): CheckSelect<T, Prisma__GadgetClient<Gadget | null>, Prisma__GadgetClient<GadgetGetPayload<T> | null>>

    /**
     * Find the first Gadget that matches the filter.
     * @param {FindFirstGadgetArgs} args - Arguments to find a Gadget
     * @example
     * // Get one Gadget
     * const gadget = await prisma.gadget.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FindFirstGadgetArgs>(
      args?: Subset<T, FindFirstGadgetArgs>
    ): CheckSelect<T, Prisma__GadgetClient<Gadget | null>, Prisma__GadgetClient<GadgetGetPayload<T> | null>>

    /**
     * Find zero or more Gadgets that matches the filter.
     * @param {FindManyGadgetArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gadgets
     * const gadgets = await prisma.gadget.findMany()
     * 
     * // Get first 10 Gadgets
     * const gadgets = await prisma.gadget.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const gadgetWithIdOnly = await prisma.gadget.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FindManyGadgetArgs>(
      args?: Subset<T, FindManyGadgetArgs>
    ): CheckSelect<T, Promise<Array<Gadget>>, Promise<Array<GadgetGetPayload<T>>>>

    /**
     * Create a Gadget.
     * @param {GadgetCreateArgs} args - Arguments to create a Gadget.
     * @example
     * // Create one Gadget
     * const Gadget = await prisma.gadget.create({
     *   data: {
     *     // ... data to create a Gadget
     *   }
     * })
     * 
    **/
    create<T extends GadgetCreateArgs>(
      args: Subset<T, GadgetCreateArgs>
    ): CheckSelect<T, Prisma__GadgetClient<Gadget>, Prisma__GadgetClient<GadgetGetPayload<T>>>

    /**
     * Delete a Gadget.
     * @param {GadgetDeleteArgs} args - Arguments to delete one Gadget.
     * @example
     * // Delete one Gadget
     * const Gadget = await prisma.gadget.delete({
     *   where: {
     *     // ... filter to delete one Gadget
     *   }
     * })
     * 
    **/
    delete<T extends GadgetDeleteArgs>(
      args: Subset<T, GadgetDeleteArgs>
    ): CheckSelect<T, Prisma__GadgetClient<Gadget>, Prisma__GadgetClient<GadgetGetPayload<T>>>

    /**
     * Update one Gadget.
     * @param {GadgetUpdateArgs} args - Arguments to update one Gadget.
     * @example
     * // Update one Gadget
     * const gadget = await prisma.gadget.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends GadgetUpdateArgs>(
      args: Subset<T, GadgetUpdateArgs>
    ): CheckSelect<T, Prisma__GadgetClient<Gadget>, Prisma__GadgetClient<GadgetGetPayload<T>>>

    /**
     * Delete zero or more Gadgets.
     * @param {GadgetDeleteManyArgs} args - Arguments to filter Gadgets to delete.
     * @example
     * // Delete a few Gadgets
     * const { count } = await prisma.gadget.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends GadgetDeleteManyArgs>(
      args?: Subset<T, GadgetDeleteManyArgs>
    ): Promise<BatchPayload>

    /**
     * Update zero or more Gadgets.
     * @param {GadgetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gadgets
     * const gadget = await prisma.gadget.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends GadgetUpdateManyArgs>(
      args: Subset<T, GadgetUpdateManyArgs>
    ): Promise<BatchPayload>

    /**
     * Create or update one Gadget.
     * @param {GadgetUpsertArgs} args - Arguments to update or create a Gadget.
     * @example
     * // Update or create a Gadget
     * const gadget = await prisma.gadget.upsert({
     *   create: {
     *     // ... data to create a Gadget
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gadget we want to update
     *   }
     * })
    **/
    upsert<T extends GadgetUpsertArgs>(
      args: Subset<T, GadgetUpsertArgs>
    ): CheckSelect<T, Prisma__GadgetClient<Gadget>, Prisma__GadgetClient<GadgetGetPayload<T>>>

    /**
     * Find zero or one Gadget that matches the filter.
     * @param {FindUniqueGadgetArgs} args - Arguments to find a Gadget
     * @deprecated This will be deprecated please use prisma.gadget.findUnique
     * @example
     * // Get one Gadget
     * const gadget = await prisma.gadget.findOne({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findOne<T extends FindUniqueGadgetArgs>(
      args: Subset<T, FindUniqueGadgetArgs>
    ): CheckSelect<T, Prisma__GadgetClient<Gadget | null>, Prisma__GadgetClient<GadgetGetPayload<T> | null>>

    /**
     * Count the number of Gadgets.
     * @param {FindManyGadgetArgs} args - Arguments to filter Gadgets to count.
     * @example
     * // Count the number of Gadgets
     * const count = await prisma.gadget.count({
     *   where: {
     *     // ... the filter for the Gadgets we want to count
     *   }
     * })
    **/
    count(args?: Omit<FindManyGadgetArgs, 'select' | 'include'>): Promise<number>

    /**
     * Allows you to perform aggregations operations on a Gadget.
     * @param {AggregateGadgetArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AggregateGadgetArgs>(args: Subset<T, AggregateGadgetArgs>): Promise<GetGadgetAggregateType<T>>


  }

  /**
   * The delegate class that acts as a "Promise-like" for Gadget.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in 
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__GadgetClient<T> implements Promise<T> {
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * Gadget findUnique
   */
  export type FindUniqueGadgetArgs = {
    /**
     * Select specific fields to fetch from the Gadget
    **/
    select?: GadgetSelect | null
    /**
     * Filter, which Gadget to fetch.
    **/
    where: GadgetWhereUniqueInput
  }


  /**
   * Gadget findFirst
   */
  export type FindFirstGadgetArgs = {
    /**
     * Select specific fields to fetch from the Gadget
    **/
    select?: GadgetSelect | null
    /**
     * Filter, which Gadget to fetch.
    **/
    where?: GadgetWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Gadgets to fetch.
    **/
    orderBy?: Enumerable<GadgetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gadgets.
    **/
    cursor?: GadgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gadgets from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gadgets.
    **/
    skip?: number
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs
     * 
     * Filter by unique combinations of Gadgets.
    **/
    distinct?: Enumerable<GadgetScalarFieldEnum>
  }


  /**
   * Gadget findMany
   */
  export type FindManyGadgetArgs = {
    /**
     * Select specific fields to fetch from the Gadget
    **/
    select?: GadgetSelect | null
    /**
     * Filter, which Gadgets to fetch.
    **/
    where?: GadgetWhereInput
    /**
     * @link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs
     * 
     * Determine the order of Gadgets to fetch.
    **/
    orderBy?: Enumerable<GadgetOrderByInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Gadgets.
    **/
    cursor?: GadgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gadgets from the position of the cursor.
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gadgets.
    **/
    skip?: number
    distinct?: Enumerable<GadgetScalarFieldEnum>
  }


  /**
   * Gadget create
   */
  export type GadgetCreateArgs = {
    /**
     * Select specific fields to fetch from the Gadget
    **/
    select?: GadgetSelect | null
    /**
     * The data needed to create a Gadget.
    **/
    data: XOR<GadgetUncheckedCreateInput, GadgetCreateInput>
  }


  /**
   * Gadget update
   */
  export type GadgetUpdateArgs = {
    /**
     * Select specific fields to fetch from the Gadget
    **/
    select?: GadgetSelect | null
    /**
     * The data needed to update a Gadget.
    **/
    data: XOR<GadgetUncheckedUpdateInput, GadgetUpdateInput>
    /**
     * Choose, which Gadget to update.
    **/
    where: GadgetWhereUniqueInput
  }


  /**
   * Gadget updateMany
   */
  export type GadgetUpdateManyArgs = {
    data: XOR<GadgetUncheckedUpdateManyInput, GadgetUpdateManyMutationInput>
    where?: GadgetWhereInput
  }


  /**
   * Gadget upsert
   */
  export type GadgetUpsertArgs = {
    /**
     * Select specific fields to fetch from the Gadget
    **/
    select?: GadgetSelect | null
    /**
     * The filter to search for the Gadget to update in case it exists.
    **/
    where: GadgetWhereUniqueInput
    /**
     * In case the Gadget found by the `where` argument doesn't exist, create a new Gadget with this data.
    **/
    create: XOR<GadgetUncheckedCreateInput, GadgetCreateInput>
    /**
     * In case the Gadget was found with the provided `where` argument, update it with this data.
    **/
    update: XOR<GadgetUncheckedUpdateInput, GadgetUpdateInput>
  }


  /**
   * Gadget delete
   */
  export type GadgetDeleteArgs = {
    /**
     * Select specific fields to fetch from the Gadget
    **/
    select?: GadgetSelect | null
    /**
     * Filter which Gadget to delete.
    **/
    where: GadgetWhereUniqueInput
  }


  /**
   * Gadget deleteMany
   */
  export type GadgetDeleteManyArgs = {
    where?: GadgetWhereInput
  }


  /**
   * Gadget without action
   */
  export type GadgetArgs = {
    /**
     * Select specific fields to fetch from the Gadget
    **/
    select?: GadgetSelect | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const UserScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    email: 'email',
    username: 'username',
    slimeColor: 'slimeColor',
    role: 'role'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserSecretScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    token: 'token',
    activated: 'activated',
    activationToken: 'activationToken',
    passwordAttempts: 'passwordAttempts',
    password: 'password',
    firstFailedPasswordAttempt: 'firstFailedPasswordAttempt',
    resetPasswordToken: 'resetPasswordToken',
    resetPasswordTokenGenerated: 'resetPasswordTokenGenerated',
    resetPasswordAttempts: 'resetPasswordAttempts',
    firstFailedResetPasswordAttempt: 'firstFailedResetPasswordAttempt',
    userId: 'userId'
  };

  export type UserSecretScalarFieldEnum = (typeof UserSecretScalarFieldEnum)[keyof typeof UserSecretScalarFieldEnum]


  export const CharacterScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    constellations: 'constellations',
    icon: 'icon',
    overview: 'overview',
    rarity: 'rarity',
    stats: 'stats',
    characterProfileId: 'characterProfileId',
    weapon: 'weapon'
  };

  export type CharacterScalarFieldEnum = (typeof CharacterScalarFieldEnum)[keyof typeof CharacterScalarFieldEnum]


  export const CharacterAscensionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    level: 'level',
    maxLevel: 'maxLevel',
    recipe: 'recipe',
    characterId: 'characterId',
    characterAscensionMaterialId: 'characterAscensionMaterialId'
  };

  export type CharacterAscensionScalarFieldEnum = (typeof CharacterAscensionScalarFieldEnum)[keyof typeof CharacterAscensionScalarFieldEnum]


  export const CharacterProfileScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    affiliation: 'affiliation',
    birthday: 'birthday',
    constellation: 'constellation',
    images: 'images',
    overview: 'overview',
    story: 'story',
    voiceActor: 'voiceActor',
    voiceLines: 'voiceLines',
    regionId: 'regionId',
    elementId: 'elementId'
  };

  export type CharacterProfileScalarFieldEnum = (typeof CharacterProfileScalarFieldEnum)[keyof typeof CharacterProfileScalarFieldEnum]


  export const TalentScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    description: 'description',
    details: 'details',
    name: 'name',
    type: 'type',
    characterId: 'characterId',
    talentLevelUpMaterialId: 'talentLevelUpMaterialId'
  };

  export type TalentScalarFieldEnum = (typeof TalentScalarFieldEnum)[keyof typeof TalentScalarFieldEnum]


  export const ElementScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    archon: 'archon',
    statusEffect: 'statusEffect',
    theme: 'theme',
    regionId: 'regionId'
  };

  export type ElementScalarFieldEnum = (typeof ElementScalarFieldEnum)[keyof typeof ElementScalarFieldEnum]


  export const RegionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name'
  };

  export type RegionScalarFieldEnum = (typeof RegionScalarFieldEnum)[keyof typeof RegionScalarFieldEnum]


  export const WeaponScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    baseStats: 'baseStats',
    description: 'description',
    image: 'image',
    lore: 'lore',
    passive: 'passive',
    rarity: 'rarity',
    refinements: 'refinements',
    stats: 'stats',
    secondaryStatType: 'secondaryStatType',
    type: 'type'
  };

  export type WeaponScalarFieldEnum = (typeof WeaponScalarFieldEnum)[keyof typeof WeaponScalarFieldEnum]


  export const WeaponAscensionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    level: 'level',
    maxLevel: 'maxLevel',
    recipe: 'recipe',
    weaponAscensionMaterialId: 'weaponAscensionMaterialId',
    weaponId: 'weaponId'
  };

  export type WeaponAscensionScalarFieldEnum = (typeof WeaponAscensionScalarFieldEnum)[keyof typeof WeaponAscensionScalarFieldEnum]


  export const CommonAscensionMaterialScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    description: 'description',
    image: 'image',
    rarity: 'rarity',
    group: 'group'
  };

  export type CommonAscensionMaterialScalarFieldEnum = (typeof CommonAscensionMaterialScalarFieldEnum)[keyof typeof CommonAscensionMaterialScalarFieldEnum]


  export const WeaponAscensionMaterialScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    availability: 'availability',
    description: 'description',
    image: 'image',
    rarity: 'rarity',
    group: 'group',
    domainId: 'domainId'
  };

  export type WeaponAscensionMaterialScalarFieldEnum = (typeof WeaponAscensionMaterialScalarFieldEnum)[keyof typeof WeaponAscensionMaterialScalarFieldEnum]


  export const WeaponEnhancementMaterialScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    description: 'description',
    image: 'image',
    rarity: 'rarity',
    source: 'source',
    recipeUseId: 'recipeUseId'
  };

  export type WeaponEnhancementMaterialScalarFieldEnum = (typeof WeaponEnhancementMaterialScalarFieldEnum)[keyof typeof WeaponEnhancementMaterialScalarFieldEnum]


  export const CharacterAscensionMaterialScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    description: 'description',
    image: 'image',
    rarity: 'rarity',
    source: 'source',
    group: 'group'
  };

  export type CharacterAscensionMaterialScalarFieldEnum = (typeof CharacterAscensionMaterialScalarFieldEnum)[keyof typeof CharacterAscensionMaterialScalarFieldEnum]


  export const TalentLevelUpMaterialScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    availability: 'availability',
    description: 'description',
    image: 'image',
    rarity: 'rarity',
    group: 'group',
    domainId: 'domainId'
  };

  export type TalentLevelUpMaterialScalarFieldEnum = (typeof TalentLevelUpMaterialScalarFieldEnum)[keyof typeof TalentLevelUpMaterialScalarFieldEnum]


  export const CraftingMaterialScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    description: 'description',
    image: 'image',
    rarity: 'rarity',
    source: 'source'
  };

  export type CraftingMaterialScalarFieldEnum = (typeof CraftingMaterialScalarFieldEnum)[keyof typeof CraftingMaterialScalarFieldEnum]


  export const CookingMaterialScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    description: 'description',
    image: 'image',
    rarity: 'rarity',
    source: 'source'
  };

  export type CookingMaterialScalarFieldEnum = (typeof CookingMaterialScalarFieldEnum)[keyof typeof CookingMaterialScalarFieldEnum]


  export const CommonMaterialScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    description: 'description',
    image: 'image',
    rarity: 'rarity',
    source: 'source'
  };

  export type CommonMaterialScalarFieldEnum = (typeof CommonMaterialScalarFieldEnum)[keyof typeof CommonMaterialScalarFieldEnum]


  export const DomainScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    description: 'description',
    levels: 'levels',
    type: 'type',
    regionId: 'regionId'
  };

  export type DomainScalarFieldEnum = (typeof DomainScalarFieldEnum)[keyof typeof DomainScalarFieldEnum]


  export const ConsumeableScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    description: 'description',
    effect: 'effect',
    image: 'image',
    rarity: 'rarity',
    consumeableType: 'consumeableType',
    foodType: 'foodType',
    characterProfileId: 'characterProfileId'
  };

  export type ConsumeableScalarFieldEnum = (typeof ConsumeableScalarFieldEnum)[keyof typeof ConsumeableScalarFieldEnum]


  export const ConsumeableRecipeScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    recipe: 'recipe',
    consumeableId: 'consumeableId'
  };

  export type ConsumeableRecipeScalarFieldEnum = (typeof ConsumeableRecipeScalarFieldEnum)[keyof typeof ConsumeableRecipeScalarFieldEnum]


  export const ProcessRecipeScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    processingTime: 'processingTime',
    recipe: 'recipe',
    materialId: 'materialId'
  };

  export type ProcessRecipeScalarFieldEnum = (typeof ProcessRecipeScalarFieldEnum)[keyof typeof ProcessRecipeScalarFieldEnum]


  export const ForgeRecipeScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    craftingTime: 'craftingTime',
    recipe: 'recipe',
    weaponEnhancementMaterialId: 'weaponEnhancementMaterialId',
    weaponId: 'weaponId'
  };

  export type ForgeRecipeScalarFieldEnum = (typeof ForgeRecipeScalarFieldEnum)[keyof typeof ForgeRecipeScalarFieldEnum]


  export const ArtifactSetScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    image: 'image',
    maxRarity: 'maxRarity',
    pieceBonusFour: 'pieceBonusFour',
    pieceBonusOne: 'pieceBonusOne',
    pieceBonusTwo: 'pieceBonusTwo'
  };

  export type ArtifactSetScalarFieldEnum = (typeof ArtifactSetScalarFieldEnum)[keyof typeof ArtifactSetScalarFieldEnum]


  export const ArtifactScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    lore: 'lore',
    minRarity: 'minRarity',
    possibleMainStats: 'possibleMainStats',
    possibleSubStats: 'possibleSubStats',
    source: 'source',
    type: 'type',
    artifactSetId: 'artifactSetId',
    domainId: 'domainId'
  };

  export type ArtifactScalarFieldEnum = (typeof ArtifactScalarFieldEnum)[keyof typeof ArtifactScalarFieldEnum]


  export const GadgetScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    icon: 'icon',
    effect: 'effect',
    craftingType: 'craftingType',
    source: 'source',
    reuseable: 'reuseable',
    recipe: 'recipe'
  };

  export type GadgetScalarFieldEnum = (typeof GadgetScalarFieldEnum)[keyof typeof GadgetScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: Enumerable<UserWhereInput>
    OR?: Enumerable<UserWhereInput>
    NOT?: Enumerable<UserWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    email?: StringFilter | string
    username?: StringNullableFilter | string | null
    slimeColor?: StringNullableFilter | string | null
    role?: EnumRoleFilter | Role
    userSecret?: XOR<UserSecretWhereInput, UserSecretRelationFilter> | null
  }

  export type UserOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    email?: SortOrder
    username?: SortOrder
    slimeColor?: SortOrder
    role?: SortOrder
  }

  export type UserWhereUniqueInput = {
    id?: string
    email?: string
  }

  export type UserSecretWhereInput = {
    AND?: Enumerable<UserSecretWhereInput>
    OR?: Enumerable<UserSecretWhereInput>
    NOT?: Enumerable<UserSecretWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    token?: StringNullableFilter | string | null
    activated?: BoolFilter | boolean
    activationToken?: StringNullableFilter | string | null
    passwordAttempts?: IntFilter | number
    password?: StringFilter | string
    firstFailedPasswordAttempt?: DateTimeNullableFilter | Date | string | null
    resetPasswordToken?: StringNullableFilter | string | null
    resetPasswordTokenGenerated?: DateTimeNullableFilter | Date | string | null
    resetPasswordAttempts?: IntFilter | number
    firstFailedResetPasswordAttempt?: DateTimeNullableFilter | Date | string | null
    user?: XOR<UserWhereInput, UserRelationFilter>
    userId?: StringFilter | string
  }

  export type UserSecretOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    token?: SortOrder
    activated?: SortOrder
    activationToken?: SortOrder
    passwordAttempts?: SortOrder
    password?: SortOrder
    firstFailedPasswordAttempt?: SortOrder
    resetPasswordToken?: SortOrder
    resetPasswordTokenGenerated?: SortOrder
    resetPasswordAttempts?: SortOrder
    firstFailedResetPasswordAttempt?: SortOrder
    userId?: SortOrder
  }

  export type UserSecretWhereUniqueInput = {
    id?: string
    userId?: string
  }

  export type CharacterWhereInput = {
    AND?: Enumerable<CharacterWhereInput>
    OR?: Enumerable<CharacterWhereInput>
    NOT?: Enumerable<CharacterWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    constellations?: JsonNullableFilter
    icon?: StringNullableFilter | string | null
    overview?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    stats?: JsonNullableFilter
    ascensions?: CharacterAscensionListRelationFilter
    characterProfile?: XOR<CharacterProfileWhereInput, CharacterProfileRelationFilter> | null
    characterProfileId?: StringNullableFilter | string | null
    elements?: ElementListRelationFilter
    talents?: TalentListRelationFilter
    weapon?: EnumWeaponTypeNullableFilter | WeaponType | null
  }

  export type CharacterOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    constellations?: SortOrder
    icon?: SortOrder
    overview?: SortOrder
    rarity?: SortOrder
    stats?: SortOrder
    characterProfileId?: SortOrder
    weapon?: SortOrder
  }

  export type CharacterWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type CharacterAscensionWhereInput = {
    AND?: Enumerable<CharacterAscensionWhereInput>
    OR?: Enumerable<CharacterAscensionWhereInput>
    NOT?: Enumerable<CharacterAscensionWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    level?: IntFilter | number
    maxLevel?: IntFilter | number
    recipe?: JsonNullableFilter
    character?: XOR<CharacterWhereInput, CharacterRelationFilter> | null
    characterId?: StringNullableFilter | string | null
    characterAscensionMaterial?: XOR<CharacterAscensionMaterialWhereInput, CharacterAscensionMaterialRelationFilter> | null
    characterAscensionMaterialId?: StringNullableFilter | string | null
    commonAscensionMaterials?: CommonAscensionMaterialListRelationFilter
  }

  export type CharacterAscensionOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    level?: SortOrder
    maxLevel?: SortOrder
    recipe?: SortOrder
    characterId?: SortOrder
    characterAscensionMaterialId?: SortOrder
  }

  export type CharacterAscensionWhereUniqueInput = {
    id?: string
  }

  export type CharacterProfileWhereInput = {
    AND?: Enumerable<CharacterProfileWhereInput>
    OR?: Enumerable<CharacterProfileWhereInput>
    NOT?: Enumerable<CharacterProfileWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    affiliation?: StringNullableFilter | string | null
    birthday?: StringNullableFilter | string | null
    constellation?: StringNullableFilter | string | null
    images?: JsonNullableFilter
    overview?: StringNullableFilter | string | null
    story?: JsonNullableFilter
    voiceActor?: JsonNullableFilter
    voiceLines?: JsonNullableFilter
    region?: XOR<RegionWhereInput, RegionRelationFilter> | null
    regionId?: StringNullableFilter | string | null
    specialtyDish?: XOR<ConsumeableWhereInput, ConsumeableRelationFilter> | null
    vision?: XOR<ElementWhereInput, ElementRelationFilter> | null
    elementId?: StringNullableFilter | string | null
    character?: XOR<CharacterWhereInput, CharacterRelationFilter> | null
  }

  export type CharacterProfileOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    affiliation?: SortOrder
    birthday?: SortOrder
    constellation?: SortOrder
    images?: SortOrder
    overview?: SortOrder
    story?: SortOrder
    voiceActor?: SortOrder
    voiceLines?: SortOrder
    regionId?: SortOrder
    elementId?: SortOrder
  }

  export type CharacterProfileWhereUniqueInput = {
    id?: string
  }

  export type TalentWhereInput = {
    AND?: Enumerable<TalentWhereInput>
    OR?: Enumerable<TalentWhereInput>
    NOT?: Enumerable<TalentWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    description?: StringNullableFilter | string | null
    details?: JsonNullableFilter
    name?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    character?: XOR<CharacterWhereInput, CharacterRelationFilter>
    characterId?: StringFilter | string
    talentLevelUpMaterial?: XOR<TalentLevelUpMaterialWhereInput, TalentLevelUpMaterialRelationFilter> | null
    talentLevelUpMaterialId?: StringNullableFilter | string | null
  }

  export type TalentOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    description?: SortOrder
    details?: SortOrder
    name?: SortOrder
    type?: SortOrder
    characterId?: SortOrder
    talentLevelUpMaterialId?: SortOrder
  }

  export type TalentWhereUniqueInput = {
    id?: string
  }

  export type ElementWhereInput = {
    AND?: Enumerable<ElementWhereInput>
    OR?: Enumerable<ElementWhereInput>
    NOT?: Enumerable<ElementWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    archon?: StringNullableFilter | string | null
    statusEffect?: StringNullableFilter | string | null
    theme?: StringNullableFilter | string | null
    characters?: CharacterListRelationFilter
    characterProfiles?: CharacterProfileListRelationFilter
    region?: XOR<RegionWhereInput, RegionRelationFilter> | null
    regionId?: StringNullableFilter | string | null
  }

  export type ElementOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    archon?: SortOrder
    statusEffect?: SortOrder
    theme?: SortOrder
    regionId?: SortOrder
  }

  export type ElementWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type RegionWhereInput = {
    AND?: Enumerable<RegionWhereInput>
    OR?: Enumerable<RegionWhereInput>
    NOT?: Enumerable<RegionWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    characterProfiles?: CharacterProfileListRelationFilter
    domains?: DomainListRelationFilter
    element?: XOR<ElementWhereInput, ElementRelationFilter> | null
  }

  export type RegionOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
  }

  export type RegionWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type WeaponWhereInput = {
    AND?: Enumerable<WeaponWhereInput>
    OR?: Enumerable<WeaponWhereInput>
    NOT?: Enumerable<WeaponWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    baseStats?: JsonNullableFilter
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    lore?: StringNullableFilter | string | null
    passive?: JsonNullableFilter
    rarity?: IntNullableFilter | number | null
    refinements?: JsonNullableFilter
    stats?: JsonNullableFilter
    secondaryStatType?: EnumWeaponSecondaryStatTypeNullableFilter | WeaponSecondaryStatType | null
    type?: EnumWeaponTypeFilter | WeaponType
    ascensions?: WeaponAscensionListRelationFilter
    forgeRecipe?: XOR<ForgeRecipeWhereInput, ForgeRecipeRelationFilter> | null
  }

  export type WeaponOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    baseStats?: SortOrder
    description?: SortOrder
    image?: SortOrder
    lore?: SortOrder
    passive?: SortOrder
    rarity?: SortOrder
    refinements?: SortOrder
    stats?: SortOrder
    secondaryStatType?: SortOrder
    type?: SortOrder
  }

  export type WeaponWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type WeaponAscensionWhereInput = {
    AND?: Enumerable<WeaponAscensionWhereInput>
    OR?: Enumerable<WeaponAscensionWhereInput>
    NOT?: Enumerable<WeaponAscensionWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    level?: IntFilter | number
    maxLevel?: IntFilter | number
    recipe?: JsonNullableFilter
    commonAscensionMaterials?: CommonAscensionMaterialListRelationFilter
    weaponAscensionMaterial?: XOR<WeaponAscensionMaterialWhereInput, WeaponAscensionMaterialRelationFilter> | null
    weaponAscensionMaterialId?: StringNullableFilter | string | null
    weapon?: XOR<WeaponWhereInput, WeaponRelationFilter> | null
    weaponId?: StringNullableFilter | string | null
  }

  export type WeaponAscensionOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    level?: SortOrder
    maxLevel?: SortOrder
    recipe?: SortOrder
    weaponAscensionMaterialId?: SortOrder
    weaponId?: SortOrder
  }

  export type WeaponAscensionWhereUniqueInput = {
    id?: string
  }

  export type CommonAscensionMaterialWhereInput = {
    AND?: Enumerable<CommonAscensionMaterialWhereInput>
    OR?: Enumerable<CommonAscensionMaterialWhereInput>
    NOT?: Enumerable<CommonAscensionMaterialWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    group?: EnumCommonAscensionMaterialGroupFilter | CommonAscensionMaterialGroup
    characterAscensions?: CharacterAscensionListRelationFilter
    weaponAscensions?: WeaponAscensionListRelationFilter
  }

  export type CommonAscensionMaterialOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image?: SortOrder
    rarity?: SortOrder
    group?: SortOrder
  }

  export type CommonAscensionMaterialWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type WeaponAscensionMaterialWhereInput = {
    AND?: Enumerable<WeaponAscensionMaterialWhereInput>
    OR?: Enumerable<WeaponAscensionMaterialWhereInput>
    NOT?: Enumerable<WeaponAscensionMaterialWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    availability?: JsonNullableFilter
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    group?: EnumWeaponAscensionMaterialGroupFilter | WeaponAscensionMaterialGroup
    domain?: XOR<DomainWhereInput, DomainRelationFilter> | null
    domainId?: StringNullableFilter | string | null
    weaponAscensions?: WeaponAscensionListRelationFilter
  }

  export type WeaponAscensionMaterialOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    availability?: SortOrder
    description?: SortOrder
    image?: SortOrder
    rarity?: SortOrder
    group?: SortOrder
    domainId?: SortOrder
  }

  export type WeaponAscensionMaterialWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type WeaponEnhancementMaterialWhereInput = {
    AND?: Enumerable<WeaponEnhancementMaterialWhereInput>
    OR?: Enumerable<WeaponEnhancementMaterialWhereInput>
    NOT?: Enumerable<WeaponEnhancementMaterialWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    source?: JsonNullableFilter
    recipeCreate?: XOR<ForgeRecipeWhereInput, ForgeRecipeRelationFilter> | null
    recipeUse?: XOR<ForgeRecipeWhereInput, ForgeRecipeRelationFilter> | null
    recipeUseId?: StringNullableFilter | string | null
  }

  export type WeaponEnhancementMaterialOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image?: SortOrder
    rarity?: SortOrder
    source?: SortOrder
    recipeUseId?: SortOrder
  }

  export type WeaponEnhancementMaterialWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type CharacterAscensionMaterialWhereInput = {
    AND?: Enumerable<CharacterAscensionMaterialWhereInput>
    OR?: Enumerable<CharacterAscensionMaterialWhereInput>
    NOT?: Enumerable<CharacterAscensionMaterialWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    source?: JsonNullableFilter
    group?: EnumWeaponAscensionMaterialGroupFilter | WeaponAscensionMaterialGroup
    characterAscensions?: CharacterAscensionListRelationFilter
  }

  export type CharacterAscensionMaterialOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image?: SortOrder
    rarity?: SortOrder
    source?: SortOrder
    group?: SortOrder
  }

  export type CharacterAscensionMaterialWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type TalentLevelUpMaterialWhereInput = {
    AND?: Enumerable<TalentLevelUpMaterialWhereInput>
    OR?: Enumerable<TalentLevelUpMaterialWhereInput>
    NOT?: Enumerable<TalentLevelUpMaterialWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    availability?: JsonNullableFilter
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    group?: EnumTalentLevelUpMaterialGroupFilter | TalentLevelUpMaterialGroup
    domain?: XOR<DomainWhereInput, DomainRelationFilter> | null
    domainId?: StringNullableFilter | string | null
    talents?: TalentListRelationFilter
  }

  export type TalentLevelUpMaterialOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    availability?: SortOrder
    description?: SortOrder
    image?: SortOrder
    rarity?: SortOrder
    group?: SortOrder
    domainId?: SortOrder
  }

  export type TalentLevelUpMaterialWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type CraftingMaterialWhereInput = {
    AND?: Enumerable<CraftingMaterialWhereInput>
    OR?: Enumerable<CraftingMaterialWhereInput>
    NOT?: Enumerable<CraftingMaterialWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    source?: JsonNullableFilter
    recipes?: ConsumeableRecipeListRelationFilter
  }

  export type CraftingMaterialOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image?: SortOrder
    rarity?: SortOrder
    source?: SortOrder
  }

  export type CraftingMaterialWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type CookingMaterialWhereInput = {
    AND?: Enumerable<CookingMaterialWhereInput>
    OR?: Enumerable<CookingMaterialWhereInput>
    NOT?: Enumerable<CookingMaterialWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    source?: JsonNullableFilter
    processingRecipe?: XOR<ProcessRecipeWhereInput, ProcessRecipeRelationFilter> | null
    recipes?: ConsumeableRecipeListRelationFilter
  }

  export type CookingMaterialOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image?: SortOrder
    rarity?: SortOrder
    source?: SortOrder
  }

  export type CookingMaterialWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type CommonMaterialWhereInput = {
    AND?: Enumerable<CommonMaterialWhereInput>
    OR?: Enumerable<CommonMaterialWhereInput>
    NOT?: Enumerable<CommonMaterialWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    source?: JsonNullableFilter
  }

  export type CommonMaterialOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image?: SortOrder
    rarity?: SortOrder
    source?: SortOrder
  }

  export type CommonMaterialWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type DomainWhereInput = {
    AND?: Enumerable<DomainWhereInput>
    OR?: Enumerable<DomainWhereInput>
    NOT?: Enumerable<DomainWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    levels?: JsonNullableFilter
    type?: StringNullableFilter | string | null
    artifacts?: ArtifactListRelationFilter
    region?: XOR<RegionWhereInput, RegionRelationFilter> | null
    regionId?: StringNullableFilter | string | null
    talentLevelUpMaterials?: TalentLevelUpMaterialListRelationFilter
    weaponAscensionMaterials?: WeaponAscensionMaterialListRelationFilter
  }

  export type DomainOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    levels?: SortOrder
    type?: SortOrder
    regionId?: SortOrder
  }

  export type DomainWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type ConsumeableWhereInput = {
    AND?: Enumerable<ConsumeableWhereInput>
    OR?: Enumerable<ConsumeableWhereInput>
    NOT?: Enumerable<ConsumeableWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    effect?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    consumeableType?: EnumConsumableTypeFilter | ConsumableType
    foodType?: EnumFoodTypeFilter | FoodType
    characterSpecialty?: XOR<CharacterProfileWhereInput, CharacterProfileRelationFilter> | null
    characterProfileId?: StringNullableFilter | string | null
    recipe?: XOR<ConsumeableRecipeWhereInput, ConsumeableRecipeRelationFilter> | null
  }

  export type ConsumeableOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    description?: SortOrder
    effect?: SortOrder
    image?: SortOrder
    rarity?: SortOrder
    consumeableType?: SortOrder
    foodType?: SortOrder
    characterProfileId?: SortOrder
  }

  export type ConsumeableWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type ConsumeableRecipeWhereInput = {
    AND?: Enumerable<ConsumeableRecipeWhereInput>
    OR?: Enumerable<ConsumeableRecipeWhereInput>
    NOT?: Enumerable<ConsumeableRecipeWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    recipe?: JsonNullableFilter
    consumeable?: XOR<ConsumeableWhereInput, ConsumeableRelationFilter> | null
    consumeableId?: StringNullableFilter | string | null
    craftingMaterials?: CraftingMaterialListRelationFilter
    cookingMaterials?: CookingMaterialListRelationFilter
  }

  export type ConsumeableRecipeOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    recipe?: SortOrder
    consumeableId?: SortOrder
  }

  export type ConsumeableRecipeWhereUniqueInput = {
    id?: string
  }

  export type ProcessRecipeWhereInput = {
    AND?: Enumerable<ProcessRecipeWhereInput>
    OR?: Enumerable<ProcessRecipeWhereInput>
    NOT?: Enumerable<ProcessRecipeWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    processingTime?: IntNullableFilter | number | null
    recipe?: JsonNullableFilter
    material?: XOR<CookingMaterialWhereInput, CookingMaterialRelationFilter> | null
    materialId?: StringNullableFilter | string | null
  }

  export type ProcessRecipeOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    processingTime?: SortOrder
    recipe?: SortOrder
    materialId?: SortOrder
  }

  export type ProcessRecipeWhereUniqueInput = {
    id?: string
  }

  export type ForgeRecipeWhereInput = {
    AND?: Enumerable<ForgeRecipeWhereInput>
    OR?: Enumerable<ForgeRecipeWhereInput>
    NOT?: Enumerable<ForgeRecipeWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    craftingTime?: IntNullableFilter | number | null
    recipe?: JsonNullableFilter
    weaponEnhancementMaterials?: WeaponEnhancementMaterialListRelationFilter
    weaponEnhancementMaterial?: XOR<WeaponEnhancementMaterialWhereInput, WeaponEnhancementMaterialRelationFilter> | null
    weaponEnhancementMaterialId?: StringNullableFilter | string | null
    weapon?: XOR<WeaponWhereInput, WeaponRelationFilter> | null
    weaponId?: StringNullableFilter | string | null
  }

  export type ForgeRecipeOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    craftingTime?: SortOrder
    recipe?: SortOrder
    weaponEnhancementMaterialId?: SortOrder
    weaponId?: SortOrder
  }

  export type ForgeRecipeWhereUniqueInput = {
    id?: string
  }

  export type ArtifactSetWhereInput = {
    AND?: Enumerable<ArtifactSetWhereInput>
    OR?: Enumerable<ArtifactSetWhereInput>
    NOT?: Enumerable<ArtifactSetWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    image?: StringNullableFilter | string | null
    maxRarity?: IntNullableFilter | number | null
    pieceBonusFour?: StringNullableFilter | string | null
    pieceBonusOne?: StringNullableFilter | string | null
    pieceBonusTwo?: StringNullableFilter | string | null
    artifacts?: ArtifactListRelationFilter
  }

  export type ArtifactSetOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    image?: SortOrder
    maxRarity?: SortOrder
    pieceBonusFour?: SortOrder
    pieceBonusOne?: SortOrder
    pieceBonusTwo?: SortOrder
  }

  export type ArtifactSetWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type ArtifactWhereInput = {
    AND?: Enumerable<ArtifactWhereInput>
    OR?: Enumerable<ArtifactWhereInput>
    NOT?: Enumerable<ArtifactWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    lore?: StringNullableFilter | string | null
    minRarity?: IntFilter | number
    possibleMainStats?: JsonNullableFilter
    possibleSubStats?: JsonNullableFilter
    source?: JsonNullableFilter
    type?: EnumArtifactTypeFilter | ArtifactType
    set?: XOR<ArtifactSetWhereInput, ArtifactSetRelationFilter> | null
    artifactSetId?: StringNullableFilter | string | null
    domain?: XOR<DomainWhereInput, DomainRelationFilter> | null
    domainId?: StringNullableFilter | string | null
  }

  export type ArtifactOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    lore?: SortOrder
    minRarity?: SortOrder
    possibleMainStats?: SortOrder
    possibleSubStats?: SortOrder
    source?: SortOrder
    type?: SortOrder
    artifactSetId?: SortOrder
    domainId?: SortOrder
  }

  export type ArtifactWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type GadgetWhereInput = {
    AND?: Enumerable<GadgetWhereInput>
    OR?: Enumerable<GadgetWhereInput>
    NOT?: Enumerable<GadgetWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    icon?: StringNullableFilter | string | null
    effect?: StringNullableFilter | string | null
    craftingType?: StringNullableFilter | string | null
    source?: StringNullableFilter | string | null
    reuseable?: StringNullableFilter | string | null
    recipe?: JsonNullableFilter
  }

  export type GadgetOrderByInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    icon?: SortOrder
    effect?: SortOrder
    craftingType?: SortOrder
    source?: SortOrder
    reuseable?: SortOrder
    recipe?: SortOrder
  }

  export type GadgetWhereUniqueInput = {
    id?: string
    name?: string
  }

  export type UserCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    email: string
    username?: string | null
    slimeColor?: string | null
    role?: Role
    userSecret?: UserSecretCreateOneWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    email: string
    username?: string | null
    slimeColor?: string | null
    role?: Role
    userSecret?: UserSecretUncheckedCreateOneWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    slimeColor?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | Role
    userSecret?: UserSecretUpdateOneWithoutUserInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    slimeColor?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | Role
    userSecret?: UserSecretUncheckedUpdateOneWithoutUserInput
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    slimeColor?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | Role
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    slimeColor?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | Role
  }

  export type UserSecretCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    token?: string | null
    activated?: boolean
    activationToken?: string | null
    passwordAttempts?: number
    password: string
    firstFailedPasswordAttempt?: Date | string | null
    resetPasswordToken?: string | null
    resetPasswordTokenGenerated?: Date | string | null
    resetPasswordAttempts?: number
    firstFailedResetPasswordAttempt?: Date | string | null
    user: UserCreateOneWithoutUserSecretInput
  }

  export type UserSecretUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    token?: string | null
    activated?: boolean
    activationToken?: string | null
    passwordAttempts?: number
    password: string
    firstFailedPasswordAttempt?: Date | string | null
    resetPasswordToken?: string | null
    resetPasswordTokenGenerated?: Date | string | null
    resetPasswordAttempts?: number
    firstFailedResetPasswordAttempt?: Date | string | null
    userId: string
  }

  export type UserSecretUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    activated?: BoolFieldUpdateOperationsInput | boolean
    activationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordAttempts?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    firstFailedPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetPasswordTokenGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordAttempts?: IntFieldUpdateOperationsInput | number
    firstFailedResetPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutUserSecretInput
  }

  export type UserSecretUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    activated?: BoolFieldUpdateOperationsInput | boolean
    activationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordAttempts?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    firstFailedPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetPasswordTokenGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordAttempts?: IntFieldUpdateOperationsInput | number
    firstFailedResetPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type UserSecretUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    activated?: BoolFieldUpdateOperationsInput | boolean
    activationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordAttempts?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    firstFailedPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetPasswordTokenGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordAttempts?: IntFieldUpdateOperationsInput | number
    firstFailedResetPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserSecretUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    activated?: BoolFieldUpdateOperationsInput | boolean
    activationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordAttempts?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    firstFailedPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetPasswordTokenGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordAttempts?: IntFieldUpdateOperationsInput | number
    firstFailedResetPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type CharacterCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    constellations?: InputJsonValue | null
    icon?: string | null
    overview?: string | null
    rarity: number
    stats?: InputJsonValue | null
    weapon?: WeaponType | null
    ascensions?: CharacterAscensionCreateManyWithoutCharacterInput
    characterProfile?: CharacterProfileCreateOneWithoutCharacterInput
    elements?: ElementCreateManyWithoutCharactersInput
    talents?: TalentCreateManyWithoutCharacterInput
  }

  export type CharacterUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    constellations?: InputJsonValue | null
    icon?: string | null
    overview?: string | null
    rarity: number
    stats?: InputJsonValue | null
    characterProfileId?: string | null
    weapon?: WeaponType | null
    ascensions?: CharacterAscensionUncheckedCreateManyWithoutCharacterInput
    talents?: TalentUncheckedCreateManyWithoutCharacterInput
  }

  export type CharacterUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
    ascensions?: CharacterAscensionUpdateManyWithoutCharacterInput
    characterProfile?: CharacterProfileUpdateOneWithoutCharacterInput
    elements?: ElementUpdateManyWithoutCharactersInput
    talents?: TalentUpdateManyWithoutCharacterInput
  }

  export type CharacterUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    characterProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
    ascensions?: CharacterAscensionUncheckedUpdateManyWithoutCharacterInput
    talents?: TalentUncheckedUpdateManyWithoutCharacterInput
  }

  export type CharacterUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
  }

  export type CharacterUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    characterProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
  }

  export type CharacterAscensionCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    character?: CharacterCreateOneWithoutAscensionsInput
    characterAscensionMaterial?: CharacterAscensionMaterialCreateOneWithoutCharacterAscensionsInput
    commonAscensionMaterials?: CommonAscensionMaterialCreateManyWithoutCharacterAscensionsInput
  }

  export type CharacterAscensionUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    characterId?: string | null
    characterAscensionMaterialId?: string | null
  }

  export type CharacterAscensionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    character?: CharacterUpdateOneWithoutAscensionsInput
    characterAscensionMaterial?: CharacterAscensionMaterialUpdateOneWithoutCharacterAscensionsInput
    commonAscensionMaterials?: CommonAscensionMaterialUpdateManyWithoutCharacterAscensionsInput
  }

  export type CharacterAscensionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    characterId?: NullableStringFieldUpdateOperationsInput | string | null
    characterAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CharacterAscensionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
  }

  export type CharacterAscensionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    characterId?: NullableStringFieldUpdateOperationsInput | string | null
    characterAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CharacterProfileCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    affiliation?: string | null
    birthday?: string | null
    constellation?: string | null
    images?: InputJsonValue | null
    overview?: string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    region?: RegionCreateOneWithoutCharacterProfilesInput
    specialtyDish?: ConsumeableCreateOneWithoutCharacterSpecialtyInput
    vision?: ElementCreateOneWithoutCharacterProfilesInput
    character?: CharacterCreateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    affiliation?: string | null
    birthday?: string | null
    constellation?: string | null
    images?: InputJsonValue | null
    overview?: string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    regionId?: string | null
    elementId?: string | null
    specialtyDish?: ConsumeableUncheckedCreateOneWithoutCharacterSpecialtyInput
    character?: CharacterUncheckedCreateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    region?: RegionUpdateOneWithoutCharacterProfilesInput
    specialtyDish?: ConsumeableUpdateOneWithoutCharacterSpecialtyInput
    vision?: ElementUpdateOneWithoutCharacterProfilesInput
    character?: CharacterUpdateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    elementId?: NullableStringFieldUpdateOperationsInput | string | null
    specialtyDish?: ConsumeableUncheckedUpdateOneWithoutCharacterSpecialtyInput
    character?: CharacterUncheckedUpdateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
  }

  export type CharacterProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    elementId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TalentCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    description?: string | null
    details?: InputJsonValue | null
    name?: string | null
    type?: string | null
    character: CharacterCreateOneWithoutTalentsInput
    talentLevelUpMaterial?: TalentLevelUpMaterialCreateOneWithoutTalentsInput
  }

  export type TalentUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    description?: string | null
    details?: InputJsonValue | null
    name?: string | null
    type?: string | null
    characterId: string
    talentLevelUpMaterialId?: string | null
  }

  export type TalentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InputJsonValue | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    character?: CharacterUpdateOneRequiredWithoutTalentsInput
    talentLevelUpMaterial?: TalentLevelUpMaterialUpdateOneWithoutTalentsInput
  }

  export type TalentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InputJsonValue | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    characterId?: StringFieldUpdateOperationsInput | string
    talentLevelUpMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TalentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InputJsonValue | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TalentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InputJsonValue | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    characterId?: StringFieldUpdateOperationsInput | string
    talentLevelUpMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ElementCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    archon?: string | null
    statusEffect?: string | null
    theme?: string | null
    characters?: CharacterCreateManyWithoutElementsInput
    characterProfiles?: CharacterProfileCreateManyWithoutVisionInput
    region?: RegionCreateOneWithoutElementInput
  }

  export type ElementUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    archon?: string | null
    statusEffect?: string | null
    theme?: string | null
    regionId?: string | null
    characterProfiles?: CharacterProfileUncheckedCreateManyWithoutVisionInput
  }

  export type ElementUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    characters?: CharacterUpdateManyWithoutElementsInput
    characterProfiles?: CharacterProfileUpdateManyWithoutVisionInput
    region?: RegionUpdateOneWithoutElementInput
  }

  export type ElementUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    characterProfiles?: CharacterProfileUncheckedUpdateManyWithoutVisionInput
  }

  export type ElementUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ElementUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RegionCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    characterProfiles?: CharacterProfileCreateManyWithoutRegionInput
    domains?: DomainCreateManyWithoutRegionInput
    element?: ElementCreateOneWithoutRegionInput
  }

  export type RegionUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    characterProfiles?: CharacterProfileUncheckedCreateManyWithoutRegionInput
    domains?: DomainUncheckedCreateManyWithoutRegionInput
    element?: ElementUncheckedCreateOneWithoutRegionInput
  }

  export type RegionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    characterProfiles?: CharacterProfileUpdateManyWithoutRegionInput
    domains?: DomainUpdateManyWithoutRegionInput
    element?: ElementUpdateOneWithoutRegionInput
  }

  export type RegionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    characterProfiles?: CharacterProfileUncheckedUpdateManyWithoutRegionInput
    domains?: DomainUncheckedUpdateManyWithoutRegionInput
    element?: ElementUncheckedUpdateOneWithoutRegionInput
  }

  export type RegionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type RegionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type WeaponCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    baseStats?: InputJsonValue | null
    description?: string | null
    image?: string | null
    lore?: string | null
    passive?: InputJsonValue | null
    rarity?: number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: WeaponSecondaryStatType | null
    type: WeaponType
    ascensions?: WeaponAscensionCreateManyWithoutWeaponInput
    forgeRecipe?: ForgeRecipeCreateOneWithoutWeaponInput
  }

  export type WeaponUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    baseStats?: InputJsonValue | null
    description?: string | null
    image?: string | null
    lore?: string | null
    passive?: InputJsonValue | null
    rarity?: number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: WeaponSecondaryStatType | null
    type: WeaponType
    ascensions?: WeaponAscensionUncheckedCreateManyWithoutWeaponInput
    forgeRecipe?: ForgeRecipeUncheckedCreateOneWithoutWeaponInput
  }

  export type WeaponUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    baseStats?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    passive?: InputJsonValue | null
    rarity?: NullableIntFieldUpdateOperationsInput | number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput | WeaponSecondaryStatType | null
    type?: EnumWeaponTypeFieldUpdateOperationsInput | WeaponType
    ascensions?: WeaponAscensionUpdateManyWithoutWeaponInput
    forgeRecipe?: ForgeRecipeUpdateOneWithoutWeaponInput
  }

  export type WeaponUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    baseStats?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    passive?: InputJsonValue | null
    rarity?: NullableIntFieldUpdateOperationsInput | number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput | WeaponSecondaryStatType | null
    type?: EnumWeaponTypeFieldUpdateOperationsInput | WeaponType
    ascensions?: WeaponAscensionUncheckedUpdateManyWithoutWeaponInput
    forgeRecipe?: ForgeRecipeUncheckedUpdateOneWithoutWeaponInput
  }

  export type WeaponUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    baseStats?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    passive?: InputJsonValue | null
    rarity?: NullableIntFieldUpdateOperationsInput | number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput | WeaponSecondaryStatType | null
    type?: EnumWeaponTypeFieldUpdateOperationsInput | WeaponType
  }

  export type WeaponUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    baseStats?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    passive?: InputJsonValue | null
    rarity?: NullableIntFieldUpdateOperationsInput | number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput | WeaponSecondaryStatType | null
    type?: EnumWeaponTypeFieldUpdateOperationsInput | WeaponType
  }

  export type WeaponAscensionCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    commonAscensionMaterials?: CommonAscensionMaterialCreateManyWithoutWeaponAscensionsInput
    weaponAscensionMaterial?: WeaponAscensionMaterialCreateOneWithoutWeaponAscensionsInput
    weapon?: WeaponCreateOneWithoutAscensionsInput
  }

  export type WeaponAscensionUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    weaponAscensionMaterialId?: string | null
    weaponId?: string | null
  }

  export type WeaponAscensionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    commonAscensionMaterials?: CommonAscensionMaterialUpdateManyWithoutWeaponAscensionsInput
    weaponAscensionMaterial?: WeaponAscensionMaterialUpdateOneWithoutWeaponAscensionsInput
    weapon?: WeaponUpdateOneWithoutAscensionsInput
  }

  export type WeaponAscensionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    weaponAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WeaponAscensionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
  }

  export type WeaponAscensionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    weaponAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommonAscensionMaterialCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    group: CommonAscensionMaterialGroup
    characterAscensions?: CharacterAscensionCreateManyWithoutCommonAscensionMaterialsInput
    weaponAscensions?: WeaponAscensionCreateManyWithoutCommonAscensionMaterialsInput
  }

  export type CommonAscensionMaterialUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    group: CommonAscensionMaterialGroup
  }

  export type CommonAscensionMaterialUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput | CommonAscensionMaterialGroup
    characterAscensions?: CharacterAscensionUpdateManyWithoutCommonAscensionMaterialsInput
    weaponAscensions?: WeaponAscensionUpdateManyWithoutCommonAscensionMaterialsInput
  }

  export type CommonAscensionMaterialUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput | CommonAscensionMaterialGroup
  }

  export type CommonAscensionMaterialUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput | CommonAscensionMaterialGroup
  }

  export type CommonAscensionMaterialUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput | CommonAscensionMaterialGroup
  }

  export type WeaponAscensionMaterialCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: WeaponAscensionMaterialGroup
    domain?: DomainCreateOneWithoutWeaponAscensionMaterialsInput
    weaponAscensions?: WeaponAscensionCreateManyWithoutWeaponAscensionMaterialInput
  }

  export type WeaponAscensionMaterialUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: WeaponAscensionMaterialGroup
    domainId?: string | null
    weaponAscensions?: WeaponAscensionUncheckedCreateManyWithoutWeaponAscensionMaterialInput
  }

  export type WeaponAscensionMaterialUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
    domain?: DomainUpdateOneWithoutWeaponAscensionMaterialsInput
    weaponAscensions?: WeaponAscensionUpdateManyWithoutWeaponAscensionMaterialInput
  }

  export type WeaponAscensionMaterialUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
    domainId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponAscensions?: WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionMaterialInput
  }

  export type WeaponAscensionMaterialUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
  }

  export type WeaponAscensionMaterialUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
    domainId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WeaponEnhancementMaterialCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    recipeCreate?: ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialInput
    recipeUse?: ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialsInput
  }

  export type WeaponEnhancementMaterialUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    recipeUseId?: string | null
    recipeCreate?: ForgeRecipeUncheckedCreateOneWithoutWeaponEnhancementMaterialInput
  }

  export type WeaponEnhancementMaterialUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    recipeCreate?: ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialInput
    recipeUse?: ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialsInput
  }

  export type WeaponEnhancementMaterialUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    recipeUseId?: NullableStringFieldUpdateOperationsInput | string | null
    recipeCreate?: ForgeRecipeUncheckedUpdateOneWithoutWeaponEnhancementMaterialInput
  }

  export type WeaponEnhancementMaterialUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type WeaponEnhancementMaterialUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    recipeUseId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CharacterAscensionMaterialCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    group: WeaponAscensionMaterialGroup
    characterAscensions?: CharacterAscensionCreateManyWithoutCharacterAscensionMaterialInput
  }

  export type CharacterAscensionMaterialUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    group: WeaponAscensionMaterialGroup
    characterAscensions?: CharacterAscensionUncheckedCreateManyWithoutCharacterAscensionMaterialInput
  }

  export type CharacterAscensionMaterialUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
    characterAscensions?: CharacterAscensionUpdateManyWithoutCharacterAscensionMaterialInput
  }

  export type CharacterAscensionMaterialUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
    characterAscensions?: CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionMaterialInput
  }

  export type CharacterAscensionMaterialUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
  }

  export type CharacterAscensionMaterialUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
  }

  export type TalentLevelUpMaterialCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: TalentLevelUpMaterialGroup
    domain?: DomainCreateOneWithoutTalentLevelUpMaterialsInput
    talents?: TalentCreateManyWithoutTalentLevelUpMaterialInput
  }

  export type TalentLevelUpMaterialUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: TalentLevelUpMaterialGroup
    domainId?: string | null
    talents?: TalentUncheckedCreateManyWithoutTalentLevelUpMaterialInput
  }

  export type TalentLevelUpMaterialUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput | TalentLevelUpMaterialGroup
    domain?: DomainUpdateOneWithoutTalentLevelUpMaterialsInput
    talents?: TalentUpdateManyWithoutTalentLevelUpMaterialInput
  }

  export type TalentLevelUpMaterialUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput | TalentLevelUpMaterialGroup
    domainId?: NullableStringFieldUpdateOperationsInput | string | null
    talents?: TalentUncheckedUpdateManyWithoutTalentLevelUpMaterialInput
  }

  export type TalentLevelUpMaterialUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput | TalentLevelUpMaterialGroup
  }

  export type TalentLevelUpMaterialUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput | TalentLevelUpMaterialGroup
    domainId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CraftingMaterialCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    recipes?: ConsumeableRecipeCreateManyWithoutCraftingMaterialsInput
  }

  export type CraftingMaterialUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
  }

  export type CraftingMaterialUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    recipes?: ConsumeableRecipeUpdateManyWithoutCraftingMaterialsInput
  }

  export type CraftingMaterialUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CraftingMaterialUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CraftingMaterialUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CookingMaterialCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    processingRecipe?: ProcessRecipeCreateOneWithoutMaterialInput
    recipes?: ConsumeableRecipeCreateManyWithoutCookingMaterialsInput
  }

  export type CookingMaterialUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    processingRecipe?: ProcessRecipeUncheckedCreateOneWithoutMaterialInput
  }

  export type CookingMaterialUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    processingRecipe?: ProcessRecipeUpdateOneWithoutMaterialInput
    recipes?: ConsumeableRecipeUpdateManyWithoutCookingMaterialsInput
  }

  export type CookingMaterialUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    processingRecipe?: ProcessRecipeUncheckedUpdateOneWithoutMaterialInput
  }

  export type CookingMaterialUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CookingMaterialUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CommonMaterialCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
  }

  export type CommonMaterialUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
  }

  export type CommonMaterialUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CommonMaterialUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CommonMaterialUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CommonMaterialUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type DomainCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    levels?: InputJsonValue | null
    type?: string | null
    artifacts?: ArtifactCreateManyWithoutDomainInput
    region?: RegionCreateOneWithoutDomainsInput
    talentLevelUpMaterials?: TalentLevelUpMaterialCreateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialCreateManyWithoutDomainInput
  }

  export type DomainUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    levels?: InputJsonValue | null
    type?: string | null
    regionId?: string | null
    artifacts?: ArtifactUncheckedCreateManyWithoutDomainInput
    talentLevelUpMaterials?: TalentLevelUpMaterialUncheckedCreateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUncheckedCreateManyWithoutDomainInput
  }

  export type DomainUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    artifacts?: ArtifactUpdateManyWithoutDomainInput
    region?: RegionUpdateOneWithoutDomainsInput
    talentLevelUpMaterials?: TalentLevelUpMaterialUpdateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUpdateManyWithoutDomainInput
  }

  export type DomainUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    artifacts?: ArtifactUncheckedUpdateManyWithoutDomainInput
    talentLevelUpMaterials?: TalentLevelUpMaterialUncheckedUpdateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUncheckedUpdateManyWithoutDomainInput
  }

  export type DomainUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DomainUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConsumeableCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    effect?: string | null
    image?: string | null
    rarity: number
    consumeableType: ConsumableType
    foodType: FoodType
    characterSpecialty?: CharacterProfileCreateOneWithoutSpecialtyDishInput
    recipe?: ConsumeableRecipeCreateOneWithoutConsumeableInput
  }

  export type ConsumeableUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    effect?: string | null
    image?: string | null
    rarity: number
    consumeableType: ConsumableType
    foodType: FoodType
    characterProfileId?: string | null
    recipe?: ConsumeableRecipeUncheckedCreateOneWithoutConsumeableInput
  }

  export type ConsumeableUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    consumeableType?: EnumConsumableTypeFieldUpdateOperationsInput | ConsumableType
    foodType?: EnumFoodTypeFieldUpdateOperationsInput | FoodType
    characterSpecialty?: CharacterProfileUpdateOneWithoutSpecialtyDishInput
    recipe?: ConsumeableRecipeUpdateOneWithoutConsumeableInput
  }

  export type ConsumeableUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    consumeableType?: EnumConsumableTypeFieldUpdateOperationsInput | ConsumableType
    foodType?: EnumFoodTypeFieldUpdateOperationsInput | FoodType
    characterProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    recipe?: ConsumeableRecipeUncheckedUpdateOneWithoutConsumeableInput
  }

  export type ConsumeableUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    consumeableType?: EnumConsumableTypeFieldUpdateOperationsInput | ConsumableType
    foodType?: EnumFoodTypeFieldUpdateOperationsInput | FoodType
  }

  export type ConsumeableUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    consumeableType?: EnumConsumableTypeFieldUpdateOperationsInput | ConsumableType
    foodType?: EnumFoodTypeFieldUpdateOperationsInput | FoodType
    characterProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConsumeableRecipeCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    recipe?: InputJsonValue | null
    consumeable?: ConsumeableCreateOneWithoutRecipeInput
    craftingMaterials?: CraftingMaterialCreateManyWithoutRecipesInput
    cookingMaterials?: CookingMaterialCreateManyWithoutRecipesInput
  }

  export type ConsumeableRecipeUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    recipe?: InputJsonValue | null
    consumeableId?: string | null
  }

  export type ConsumeableRecipeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
    consumeable?: ConsumeableUpdateOneWithoutRecipeInput
    craftingMaterials?: CraftingMaterialUpdateManyWithoutRecipesInput
    cookingMaterials?: CookingMaterialUpdateManyWithoutRecipesInput
  }

  export type ConsumeableRecipeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
    consumeableId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConsumeableRecipeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
  }

  export type ConsumeableRecipeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
    consumeableId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProcessRecipeCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    processingTime?: number | null
    recipe?: InputJsonValue | null
    material?: CookingMaterialCreateOneWithoutProcessingRecipeInput
  }

  export type ProcessRecipeUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    processingTime?: number | null
    recipe?: InputJsonValue | null
    materialId?: string | null
  }

  export type ProcessRecipeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    material?: CookingMaterialUpdateOneWithoutProcessingRecipeInput
  }

  export type ProcessRecipeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    materialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProcessRecipeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
  }

  export type ProcessRecipeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    materialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ForgeRecipeCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    craftingTime?: number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialCreateManyWithoutRecipeUseInput
    weaponEnhancementMaterial?: WeaponEnhancementMaterialCreateOneWithoutRecipeCreateInput
    weapon?: WeaponCreateOneWithoutForgeRecipeInput
  }

  export type ForgeRecipeUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    craftingTime?: number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterialId?: string | null
    weaponId?: string | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialUncheckedCreateManyWithoutRecipeUseInput
  }

  export type ForgeRecipeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    craftingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialUpdateManyWithoutRecipeUseInput
    weaponEnhancementMaterial?: WeaponEnhancementMaterialUpdateOneWithoutRecipeCreateInput
    weapon?: WeaponUpdateOneWithoutForgeRecipeInput
  }

  export type ForgeRecipeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    craftingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialUncheckedUpdateManyWithoutRecipeUseInput
  }

  export type ForgeRecipeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    craftingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
  }

  export type ForgeRecipeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    craftingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArtifactSetCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    image?: string | null
    maxRarity?: number | null
    pieceBonusFour?: string | null
    pieceBonusOne?: string | null
    pieceBonusTwo?: string | null
    artifacts?: ArtifactCreateManyWithoutSetInput
  }

  export type ArtifactSetUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    image?: string | null
    maxRarity?: number | null
    pieceBonusFour?: string | null
    pieceBonusOne?: string | null
    pieceBonusTwo?: string | null
    artifacts?: ArtifactUncheckedCreateManyWithoutSetInput
  }

  export type ArtifactSetUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    maxRarity?: NullableIntFieldUpdateOperationsInput | number | null
    pieceBonusFour?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusOne?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusTwo?: NullableStringFieldUpdateOperationsInput | string | null
    artifacts?: ArtifactUpdateManyWithoutSetInput
  }

  export type ArtifactSetUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    maxRarity?: NullableIntFieldUpdateOperationsInput | number | null
    pieceBonusFour?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusOne?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusTwo?: NullableStringFieldUpdateOperationsInput | string | null
    artifacts?: ArtifactUncheckedUpdateManyWithoutSetInput
  }

  export type ArtifactSetUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    maxRarity?: NullableIntFieldUpdateOperationsInput | number | null
    pieceBonusFour?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusOne?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusTwo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArtifactSetUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    maxRarity?: NullableIntFieldUpdateOperationsInput | number | null
    pieceBonusFour?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusOne?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusTwo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArtifactCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    lore?: string | null
    minRarity: number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type: ArtifactType
    set?: ArtifactSetCreateOneWithoutArtifactsInput
    domain?: DomainCreateOneWithoutArtifactsInput
  }

  export type ArtifactUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    lore?: string | null
    minRarity: number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type: ArtifactType
    artifactSetId?: string | null
    domainId?: string | null
  }

  export type ArtifactUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    minRarity?: IntFieldUpdateOperationsInput | number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type?: EnumArtifactTypeFieldUpdateOperationsInput | ArtifactType
    set?: ArtifactSetUpdateOneWithoutArtifactsInput
    domain?: DomainUpdateOneWithoutArtifactsInput
  }

  export type ArtifactUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    minRarity?: IntFieldUpdateOperationsInput | number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type?: EnumArtifactTypeFieldUpdateOperationsInput | ArtifactType
    artifactSetId?: NullableStringFieldUpdateOperationsInput | string | null
    domainId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArtifactUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    minRarity?: IntFieldUpdateOperationsInput | number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type?: EnumArtifactTypeFieldUpdateOperationsInput | ArtifactType
  }

  export type ArtifactUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    minRarity?: IntFieldUpdateOperationsInput | number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type?: EnumArtifactTypeFieldUpdateOperationsInput | ArtifactType
    artifactSetId?: NullableStringFieldUpdateOperationsInput | string | null
    domainId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GadgetCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    icon?: string | null
    effect?: string | null
    craftingType?: string | null
    source?: string | null
    reuseable?: string | null
    recipe?: InputJsonValue | null
  }

  export type GadgetUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    icon?: string | null
    effect?: string | null
    craftingType?: string | null
    source?: string | null
    reuseable?: string | null
    recipe?: InputJsonValue | null
  }

  export type GadgetUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    craftingType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    reuseable?: NullableStringFieldUpdateOperationsInput | string | null
    recipe?: InputJsonValue | null
  }

  export type GadgetUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    craftingType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    reuseable?: NullableStringFieldUpdateOperationsInput | string | null
    recipe?: InputJsonValue | null
  }

  export type GadgetUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    craftingType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    reuseable?: NullableStringFieldUpdateOperationsInput | string | null
    recipe?: InputJsonValue | null
  }

  export type GadgetUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    craftingType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    reuseable?: NullableStringFieldUpdateOperationsInput | string | null
    recipe?: InputJsonValue | null
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type DateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type EnumRoleFilter = {
    equals?: Role
    in?: Enumerable<Role>
    notIn?: Enumerable<Role>
    not?: NestedEnumRoleFilter | Role
  }

  export type UserSecretRelationFilter = {
    is?: UserSecretWhereInput | null
    isNot?: UserSecretWhereInput | null
  }

  export type BoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type JsonNullableFilter = {
    equals?: InputJsonValue | null
    not?: InputJsonValue | null
  }

  export type CharacterAscensionListRelationFilter = {
    every?: CharacterAscensionWhereInput
    some?: CharacterAscensionWhereInput
    none?: CharacterAscensionWhereInput
  }

  export type CharacterProfileRelationFilter = {
    is?: CharacterProfileWhereInput | null
    isNot?: CharacterProfileWhereInput | null
  }

  export type ElementListRelationFilter = {
    every?: ElementWhereInput
    some?: ElementWhereInput
    none?: ElementWhereInput
  }

  export type TalentListRelationFilter = {
    every?: TalentWhereInput
    some?: TalentWhereInput
    none?: TalentWhereInput
  }

  export type EnumWeaponTypeNullableFilter = {
    equals?: WeaponType | null
    in?: Enumerable<WeaponType> | null
    notIn?: Enumerable<WeaponType> | null
    not?: NestedEnumWeaponTypeNullableFilter | WeaponType | null
  }

  export type CharacterRelationFilter = {
    is?: CharacterWhereInput
    isNot?: CharacterWhereInput
  }

  export type CharacterAscensionMaterialRelationFilter = {
    is?: CharacterAscensionMaterialWhereInput | null
    isNot?: CharacterAscensionMaterialWhereInput | null
  }

  export type CommonAscensionMaterialListRelationFilter = {
    every?: CommonAscensionMaterialWhereInput
    some?: CommonAscensionMaterialWhereInput
    none?: CommonAscensionMaterialWhereInput
  }

  export type RegionRelationFilter = {
    is?: RegionWhereInput | null
    isNot?: RegionWhereInput | null
  }

  export type ConsumeableRelationFilter = {
    is?: ConsumeableWhereInput | null
    isNot?: ConsumeableWhereInput | null
  }

  export type ElementRelationFilter = {
    is?: ElementWhereInput | null
    isNot?: ElementWhereInput | null
  }

  export type TalentLevelUpMaterialRelationFilter = {
    is?: TalentLevelUpMaterialWhereInput | null
    isNot?: TalentLevelUpMaterialWhereInput | null
  }

  export type CharacterListRelationFilter = {
    every?: CharacterWhereInput
    some?: CharacterWhereInput
    none?: CharacterWhereInput
  }

  export type CharacterProfileListRelationFilter = {
    every?: CharacterProfileWhereInput
    some?: CharacterProfileWhereInput
    none?: CharacterProfileWhereInput
  }

  export type DomainListRelationFilter = {
    every?: DomainWhereInput
    some?: DomainWhereInput
    none?: DomainWhereInput
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type EnumWeaponSecondaryStatTypeNullableFilter = {
    equals?: WeaponSecondaryStatType | null
    in?: Enumerable<WeaponSecondaryStatType> | null
    notIn?: Enumerable<WeaponSecondaryStatType> | null
    not?: NestedEnumWeaponSecondaryStatTypeNullableFilter | WeaponSecondaryStatType | null
  }

  export type EnumWeaponTypeFilter = {
    equals?: WeaponType
    in?: Enumerable<WeaponType>
    notIn?: Enumerable<WeaponType>
    not?: NestedEnumWeaponTypeFilter | WeaponType
  }

  export type WeaponAscensionListRelationFilter = {
    every?: WeaponAscensionWhereInput
    some?: WeaponAscensionWhereInput
    none?: WeaponAscensionWhereInput
  }

  export type ForgeRecipeRelationFilter = {
    is?: ForgeRecipeWhereInput | null
    isNot?: ForgeRecipeWhereInput | null
  }

  export type WeaponAscensionMaterialRelationFilter = {
    is?: WeaponAscensionMaterialWhereInput | null
    isNot?: WeaponAscensionMaterialWhereInput | null
  }

  export type WeaponRelationFilter = {
    is?: WeaponWhereInput | null
    isNot?: WeaponWhereInput | null
  }

  export type EnumCommonAscensionMaterialGroupFilter = {
    equals?: CommonAscensionMaterialGroup
    in?: Enumerable<CommonAscensionMaterialGroup>
    notIn?: Enumerable<CommonAscensionMaterialGroup>
    not?: NestedEnumCommonAscensionMaterialGroupFilter | CommonAscensionMaterialGroup
  }

  export type EnumWeaponAscensionMaterialGroupFilter = {
    equals?: WeaponAscensionMaterialGroup
    in?: Enumerable<WeaponAscensionMaterialGroup>
    notIn?: Enumerable<WeaponAscensionMaterialGroup>
    not?: NestedEnumWeaponAscensionMaterialGroupFilter | WeaponAscensionMaterialGroup
  }

  export type DomainRelationFilter = {
    is?: DomainWhereInput | null
    isNot?: DomainWhereInput | null
  }

  export type EnumTalentLevelUpMaterialGroupFilter = {
    equals?: TalentLevelUpMaterialGroup
    in?: Enumerable<TalentLevelUpMaterialGroup>
    notIn?: Enumerable<TalentLevelUpMaterialGroup>
    not?: NestedEnumTalentLevelUpMaterialGroupFilter | TalentLevelUpMaterialGroup
  }

  export type ConsumeableRecipeListRelationFilter = {
    every?: ConsumeableRecipeWhereInput
    some?: ConsumeableRecipeWhereInput
    none?: ConsumeableRecipeWhereInput
  }

  export type ProcessRecipeRelationFilter = {
    is?: ProcessRecipeWhereInput | null
    isNot?: ProcessRecipeWhereInput | null
  }

  export type ArtifactListRelationFilter = {
    every?: ArtifactWhereInput
    some?: ArtifactWhereInput
    none?: ArtifactWhereInput
  }

  export type TalentLevelUpMaterialListRelationFilter = {
    every?: TalentLevelUpMaterialWhereInput
    some?: TalentLevelUpMaterialWhereInput
    none?: TalentLevelUpMaterialWhereInput
  }

  export type WeaponAscensionMaterialListRelationFilter = {
    every?: WeaponAscensionMaterialWhereInput
    some?: WeaponAscensionMaterialWhereInput
    none?: WeaponAscensionMaterialWhereInput
  }

  export type EnumConsumableTypeFilter = {
    equals?: ConsumableType
    in?: Enumerable<ConsumableType>
    notIn?: Enumerable<ConsumableType>
    not?: NestedEnumConsumableTypeFilter | ConsumableType
  }

  export type EnumFoodTypeFilter = {
    equals?: FoodType
    in?: Enumerable<FoodType>
    notIn?: Enumerable<FoodType>
    not?: NestedEnumFoodTypeFilter | FoodType
  }

  export type ConsumeableRecipeRelationFilter = {
    is?: ConsumeableRecipeWhereInput | null
    isNot?: ConsumeableRecipeWhereInput | null
  }

  export type CraftingMaterialListRelationFilter = {
    every?: CraftingMaterialWhereInput
    some?: CraftingMaterialWhereInput
    none?: CraftingMaterialWhereInput
  }

  export type CookingMaterialListRelationFilter = {
    every?: CookingMaterialWhereInput
    some?: CookingMaterialWhereInput
    none?: CookingMaterialWhereInput
  }

  export type CookingMaterialRelationFilter = {
    is?: CookingMaterialWhereInput | null
    isNot?: CookingMaterialWhereInput | null
  }

  export type WeaponEnhancementMaterialListRelationFilter = {
    every?: WeaponEnhancementMaterialWhereInput
    some?: WeaponEnhancementMaterialWhereInput
    none?: WeaponEnhancementMaterialWhereInput
  }

  export type WeaponEnhancementMaterialRelationFilter = {
    is?: WeaponEnhancementMaterialWhereInput | null
    isNot?: WeaponEnhancementMaterialWhereInput | null
  }

  export type EnumArtifactTypeFilter = {
    equals?: ArtifactType
    in?: Enumerable<ArtifactType>
    notIn?: Enumerable<ArtifactType>
    not?: NestedEnumArtifactTypeFilter | ArtifactType
  }

  export type ArtifactSetRelationFilter = {
    is?: ArtifactSetWhereInput | null
    isNot?: ArtifactSetWhereInput | null
  }

  export type UserSecretCreateOneWithoutUserInput = {
    create?: XOR<UserSecretUncheckedCreateWithoutUserInput, UserSecretCreateWithoutUserInput>
    connect?: UserSecretWhereUniqueInput
    connectOrCreate?: UserSecretCreateOrConnectWithoutuserInput
  }

  export type UserSecretUncheckedCreateOneWithoutUserInput = {
    create?: XOR<UserSecretUncheckedCreateWithoutUserInput, UserSecretCreateWithoutUserInput>
    connect?: UserSecretWhereUniqueInput
    connectOrCreate?: UserSecretCreateOrConnectWithoutuserInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: Role
  }

  export type UserSecretUpdateOneWithoutUserInput = {
    create?: XOR<UserSecretUncheckedCreateWithoutUserInput, UserSecretCreateWithoutUserInput>
    connect?: UserSecretWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<UserSecretUncheckedUpdateWithoutUserInput, UserSecretUpdateWithoutUserInput>
    upsert?: UserSecretUpsertWithoutUserInput
    connectOrCreate?: UserSecretCreateOrConnectWithoutuserInput
  }

  export type UserSecretUncheckedUpdateOneWithoutUserInput = {
    create?: XOR<UserSecretUncheckedCreateWithoutUserInput, UserSecretCreateWithoutUserInput>
    connect?: UserSecretWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<UserSecretUncheckedUpdateWithoutUserInput, UserSecretUpdateWithoutUserInput>
    upsert?: UserSecretUpsertWithoutUserInput
    connectOrCreate?: UserSecretCreateOrConnectWithoutuserInput
  }

  export type UserCreateOneWithoutUserSecretInput = {
    create?: XOR<UserUncheckedCreateWithoutUserSecretInput, UserCreateWithoutUserSecretInput>
    connect?: UserWhereUniqueInput
    connectOrCreate?: UserCreateOrConnectWithoutuserSecretInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UserUpdateOneRequiredWithoutUserSecretInput = {
    create?: XOR<UserUncheckedCreateWithoutUserSecretInput, UserCreateWithoutUserSecretInput>
    connect?: UserWhereUniqueInput
    update?: XOR<UserUncheckedUpdateWithoutUserSecretInput, UserUpdateWithoutUserSecretInput>
    upsert?: UserUpsertWithoutUserSecretInput
    connectOrCreate?: UserCreateOrConnectWithoutuserSecretInput
  }

  export type CharacterAscensionCreateManyWithoutCharacterInput = {
    create?: XOR<Enumerable<CharacterAscensionUncheckedCreateWithoutCharacterInput>, Enumerable<CharacterAscensionCreateWithoutCharacterInput>>
    connect?: Enumerable<CharacterAscensionWhereUniqueInput>
    connectOrCreate?: Enumerable<CharacterAscensionCreateOrConnectWithoutcharacterInput>
  }

  export type CharacterProfileCreateOneWithoutCharacterInput = {
    create?: XOR<CharacterProfileUncheckedCreateWithoutCharacterInput, CharacterProfileCreateWithoutCharacterInput>
    connect?: CharacterProfileWhereUniqueInput
    connectOrCreate?: CharacterProfileCreateOrConnectWithoutcharacterInput
  }

  export type ElementCreateManyWithoutCharactersInput = {
    create?: XOR<Enumerable<ElementUncheckedCreateWithoutCharactersInput>, Enumerable<ElementCreateWithoutCharactersInput>>
    connect?: Enumerable<ElementWhereUniqueInput>
    connectOrCreate?: Enumerable<ElementCreateOrConnectWithoutcharactersInput>
  }

  export type TalentCreateManyWithoutCharacterInput = {
    create?: XOR<Enumerable<TalentUncheckedCreateWithoutCharacterInput>, Enumerable<TalentCreateWithoutCharacterInput>>
    connect?: Enumerable<TalentWhereUniqueInput>
    connectOrCreate?: Enumerable<TalentCreateOrConnectWithoutcharacterInput>
  }

  export type CharacterAscensionUncheckedCreateManyWithoutCharacterInput = {
    create?: XOR<Enumerable<CharacterAscensionUncheckedCreateWithoutCharacterInput>, Enumerable<CharacterAscensionCreateWithoutCharacterInput>>
    connect?: Enumerable<CharacterAscensionWhereUniqueInput>
    connectOrCreate?: Enumerable<CharacterAscensionCreateOrConnectWithoutcharacterInput>
  }

  export type TalentUncheckedCreateManyWithoutCharacterInput = {
    create?: XOR<Enumerable<TalentUncheckedCreateWithoutCharacterInput>, Enumerable<TalentCreateWithoutCharacterInput>>
    connect?: Enumerable<TalentWhereUniqueInput>
    connectOrCreate?: Enumerable<TalentCreateOrConnectWithoutcharacterInput>
  }

  export type NullableEnumWeaponTypeFieldUpdateOperationsInput = {
    set?: WeaponType | null
  }

  export type CharacterAscensionUpdateManyWithoutCharacterInput = {
    create?: XOR<Enumerable<CharacterAscensionUncheckedCreateWithoutCharacterInput>, Enumerable<CharacterAscensionCreateWithoutCharacterInput>>
    connect?: Enumerable<CharacterAscensionWhereUniqueInput>
    set?: Enumerable<CharacterAscensionWhereUniqueInput>
    disconnect?: Enumerable<CharacterAscensionWhereUniqueInput>
    delete?: Enumerable<CharacterAscensionWhereUniqueInput>
    update?: Enumerable<CharacterAscensionUpdateWithWhereUniqueWithoutCharacterInput>
    updateMany?: Enumerable<CharacterAscensionUpdateManyWithWhereWithoutCharacterInput>
    deleteMany?: Enumerable<CharacterAscensionScalarWhereInput>
    upsert?: Enumerable<CharacterAscensionUpsertWithWhereUniqueWithoutCharacterInput>
    connectOrCreate?: Enumerable<CharacterAscensionCreateOrConnectWithoutcharacterInput>
  }

  export type CharacterProfileUpdateOneWithoutCharacterInput = {
    create?: XOR<CharacterProfileUncheckedCreateWithoutCharacterInput, CharacterProfileCreateWithoutCharacterInput>
    connect?: CharacterProfileWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<CharacterProfileUncheckedUpdateWithoutCharacterInput, CharacterProfileUpdateWithoutCharacterInput>
    upsert?: CharacterProfileUpsertWithoutCharacterInput
    connectOrCreate?: CharacterProfileCreateOrConnectWithoutcharacterInput
  }

  export type ElementUpdateManyWithoutCharactersInput = {
    create?: XOR<Enumerable<ElementUncheckedCreateWithoutCharactersInput>, Enumerable<ElementCreateWithoutCharactersInput>>
    connect?: Enumerable<ElementWhereUniqueInput>
    set?: Enumerable<ElementWhereUniqueInput>
    disconnect?: Enumerable<ElementWhereUniqueInput>
    delete?: Enumerable<ElementWhereUniqueInput>
    update?: Enumerable<ElementUpdateWithWhereUniqueWithoutCharactersInput>
    updateMany?: Enumerable<ElementUpdateManyWithWhereWithoutCharactersInput>
    deleteMany?: Enumerable<ElementScalarWhereInput>
    upsert?: Enumerable<ElementUpsertWithWhereUniqueWithoutCharactersInput>
    connectOrCreate?: Enumerable<ElementCreateOrConnectWithoutcharactersInput>
  }

  export type TalentUpdateManyWithoutCharacterInput = {
    create?: XOR<Enumerable<TalentUncheckedCreateWithoutCharacterInput>, Enumerable<TalentCreateWithoutCharacterInput>>
    connect?: Enumerable<TalentWhereUniqueInput>
    set?: Enumerable<TalentWhereUniqueInput>
    disconnect?: Enumerable<TalentWhereUniqueInput>
    delete?: Enumerable<TalentWhereUniqueInput>
    update?: Enumerable<TalentUpdateWithWhereUniqueWithoutCharacterInput>
    updateMany?: Enumerable<TalentUpdateManyWithWhereWithoutCharacterInput>
    deleteMany?: Enumerable<TalentScalarWhereInput>
    upsert?: Enumerable<TalentUpsertWithWhereUniqueWithoutCharacterInput>
    connectOrCreate?: Enumerable<TalentCreateOrConnectWithoutcharacterInput>
  }

  export type CharacterAscensionUncheckedUpdateManyWithoutCharacterInput = {
    create?: XOR<Enumerable<CharacterAscensionUncheckedCreateWithoutCharacterInput>, Enumerable<CharacterAscensionCreateWithoutCharacterInput>>
    connect?: Enumerable<CharacterAscensionWhereUniqueInput>
    set?: Enumerable<CharacterAscensionWhereUniqueInput>
    disconnect?: Enumerable<CharacterAscensionWhereUniqueInput>
    delete?: Enumerable<CharacterAscensionWhereUniqueInput>
    update?: Enumerable<CharacterAscensionUpdateWithWhereUniqueWithoutCharacterInput>
    updateMany?: Enumerable<CharacterAscensionUpdateManyWithWhereWithoutCharacterInput>
    deleteMany?: Enumerable<CharacterAscensionScalarWhereInput>
    upsert?: Enumerable<CharacterAscensionUpsertWithWhereUniqueWithoutCharacterInput>
    connectOrCreate?: Enumerable<CharacterAscensionCreateOrConnectWithoutcharacterInput>
  }

  export type TalentUncheckedUpdateManyWithoutCharacterInput = {
    create?: XOR<Enumerable<TalentUncheckedCreateWithoutCharacterInput>, Enumerable<TalentCreateWithoutCharacterInput>>
    connect?: Enumerable<TalentWhereUniqueInput>
    set?: Enumerable<TalentWhereUniqueInput>
    disconnect?: Enumerable<TalentWhereUniqueInput>
    delete?: Enumerable<TalentWhereUniqueInput>
    update?: Enumerable<TalentUpdateWithWhereUniqueWithoutCharacterInput>
    updateMany?: Enumerable<TalentUpdateManyWithWhereWithoutCharacterInput>
    deleteMany?: Enumerable<TalentScalarWhereInput>
    upsert?: Enumerable<TalentUpsertWithWhereUniqueWithoutCharacterInput>
    connectOrCreate?: Enumerable<TalentCreateOrConnectWithoutcharacterInput>
  }

  export type CharacterCreateOneWithoutAscensionsInput = {
    create?: XOR<CharacterUncheckedCreateWithoutAscensionsInput, CharacterCreateWithoutAscensionsInput>
    connect?: CharacterWhereUniqueInput
    connectOrCreate?: CharacterCreateOrConnectWithoutascensionsInput
  }

  export type CharacterAscensionMaterialCreateOneWithoutCharacterAscensionsInput = {
    create?: XOR<CharacterAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput, CharacterAscensionMaterialCreateWithoutCharacterAscensionsInput>
    connect?: CharacterAscensionMaterialWhereUniqueInput
    connectOrCreate?: CharacterAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput
  }

  export type CommonAscensionMaterialCreateManyWithoutCharacterAscensionsInput = {
    create?: XOR<Enumerable<CommonAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput>, Enumerable<CommonAscensionMaterialCreateWithoutCharacterAscensionsInput>>
    connect?: Enumerable<CommonAscensionMaterialWhereUniqueInput>
    connectOrCreate?: Enumerable<CommonAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput>
  }

  export type CharacterUpdateOneWithoutAscensionsInput = {
    create?: XOR<CharacterUncheckedCreateWithoutAscensionsInput, CharacterCreateWithoutAscensionsInput>
    connect?: CharacterWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<CharacterUncheckedUpdateWithoutAscensionsInput, CharacterUpdateWithoutAscensionsInput>
    upsert?: CharacterUpsertWithoutAscensionsInput
    connectOrCreate?: CharacterCreateOrConnectWithoutascensionsInput
  }

  export type CharacterAscensionMaterialUpdateOneWithoutCharacterAscensionsInput = {
    create?: XOR<CharacterAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput, CharacterAscensionMaterialCreateWithoutCharacterAscensionsInput>
    connect?: CharacterAscensionMaterialWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<CharacterAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput, CharacterAscensionMaterialUpdateWithoutCharacterAscensionsInput>
    upsert?: CharacterAscensionMaterialUpsertWithoutCharacterAscensionsInput
    connectOrCreate?: CharacterAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput
  }

  export type CommonAscensionMaterialUpdateManyWithoutCharacterAscensionsInput = {
    create?: XOR<Enumerable<CommonAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput>, Enumerable<CommonAscensionMaterialCreateWithoutCharacterAscensionsInput>>
    connect?: Enumerable<CommonAscensionMaterialWhereUniqueInput>
    set?: Enumerable<CommonAscensionMaterialWhereUniqueInput>
    disconnect?: Enumerable<CommonAscensionMaterialWhereUniqueInput>
    delete?: Enumerable<CommonAscensionMaterialWhereUniqueInput>
    update?: Enumerable<CommonAscensionMaterialUpdateWithWhereUniqueWithoutCharacterAscensionsInput>
    updateMany?: Enumerable<CommonAscensionMaterialUpdateManyWithWhereWithoutCharacterAscensionsInput>
    deleteMany?: Enumerable<CommonAscensionMaterialScalarWhereInput>
    upsert?: Enumerable<CommonAscensionMaterialUpsertWithWhereUniqueWithoutCharacterAscensionsInput>
    connectOrCreate?: Enumerable<CommonAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput>
  }

  export type RegionCreateOneWithoutCharacterProfilesInput = {
    create?: XOR<RegionUncheckedCreateWithoutCharacterProfilesInput, RegionCreateWithoutCharacterProfilesInput>
    connect?: RegionWhereUniqueInput
    connectOrCreate?: RegionCreateOrConnectWithoutcharacterProfilesInput
  }

  export type ConsumeableCreateOneWithoutCharacterSpecialtyInput = {
    create?: XOR<ConsumeableUncheckedCreateWithoutCharacterSpecialtyInput, ConsumeableCreateWithoutCharacterSpecialtyInput>
    connect?: ConsumeableWhereUniqueInput
    connectOrCreate?: ConsumeableCreateOrConnectWithoutcharacterSpecialtyInput
  }

  export type ElementCreateOneWithoutCharacterProfilesInput = {
    create?: XOR<ElementUncheckedCreateWithoutCharacterProfilesInput, ElementCreateWithoutCharacterProfilesInput>
    connect?: ElementWhereUniqueInput
    connectOrCreate?: ElementCreateOrConnectWithoutcharacterProfilesInput
  }

  export type CharacterCreateOneWithoutCharacterProfileInput = {
    create?: XOR<CharacterUncheckedCreateWithoutCharacterProfileInput, CharacterCreateWithoutCharacterProfileInput>
    connect?: CharacterWhereUniqueInput
    connectOrCreate?: CharacterCreateOrConnectWithoutcharacterProfileInput
  }

  export type ConsumeableUncheckedCreateOneWithoutCharacterSpecialtyInput = {
    create?: XOR<ConsumeableUncheckedCreateWithoutCharacterSpecialtyInput, ConsumeableCreateWithoutCharacterSpecialtyInput>
    connect?: ConsumeableWhereUniqueInput
    connectOrCreate?: ConsumeableCreateOrConnectWithoutcharacterSpecialtyInput
  }

  export type CharacterUncheckedCreateOneWithoutCharacterProfileInput = {
    create?: XOR<CharacterUncheckedCreateWithoutCharacterProfileInput, CharacterCreateWithoutCharacterProfileInput>
    connect?: CharacterWhereUniqueInput
    connectOrCreate?: CharacterCreateOrConnectWithoutcharacterProfileInput
  }

  export type RegionUpdateOneWithoutCharacterProfilesInput = {
    create?: XOR<RegionUncheckedCreateWithoutCharacterProfilesInput, RegionCreateWithoutCharacterProfilesInput>
    connect?: RegionWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<RegionUncheckedUpdateWithoutCharacterProfilesInput, RegionUpdateWithoutCharacterProfilesInput>
    upsert?: RegionUpsertWithoutCharacterProfilesInput
    connectOrCreate?: RegionCreateOrConnectWithoutcharacterProfilesInput
  }

  export type ConsumeableUpdateOneWithoutCharacterSpecialtyInput = {
    create?: XOR<ConsumeableUncheckedCreateWithoutCharacterSpecialtyInput, ConsumeableCreateWithoutCharacterSpecialtyInput>
    connect?: ConsumeableWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ConsumeableUncheckedUpdateWithoutCharacterSpecialtyInput, ConsumeableUpdateWithoutCharacterSpecialtyInput>
    upsert?: ConsumeableUpsertWithoutCharacterSpecialtyInput
    connectOrCreate?: ConsumeableCreateOrConnectWithoutcharacterSpecialtyInput
  }

  export type ElementUpdateOneWithoutCharacterProfilesInput = {
    create?: XOR<ElementUncheckedCreateWithoutCharacterProfilesInput, ElementCreateWithoutCharacterProfilesInput>
    connect?: ElementWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ElementUncheckedUpdateWithoutCharacterProfilesInput, ElementUpdateWithoutCharacterProfilesInput>
    upsert?: ElementUpsertWithoutCharacterProfilesInput
    connectOrCreate?: ElementCreateOrConnectWithoutcharacterProfilesInput
  }

  export type CharacterUpdateOneWithoutCharacterProfileInput = {
    create?: XOR<CharacterUncheckedCreateWithoutCharacterProfileInput, CharacterCreateWithoutCharacterProfileInput>
    connect?: CharacterWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<CharacterUncheckedUpdateWithoutCharacterProfileInput, CharacterUpdateWithoutCharacterProfileInput>
    upsert?: CharacterUpsertWithoutCharacterProfileInput
    connectOrCreate?: CharacterCreateOrConnectWithoutcharacterProfileInput
  }

  export type ConsumeableUncheckedUpdateOneWithoutCharacterSpecialtyInput = {
    create?: XOR<ConsumeableUncheckedCreateWithoutCharacterSpecialtyInput, ConsumeableCreateWithoutCharacterSpecialtyInput>
    connect?: ConsumeableWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ConsumeableUncheckedUpdateWithoutCharacterSpecialtyInput, ConsumeableUpdateWithoutCharacterSpecialtyInput>
    upsert?: ConsumeableUpsertWithoutCharacterSpecialtyInput
    connectOrCreate?: ConsumeableCreateOrConnectWithoutcharacterSpecialtyInput
  }

  export type CharacterUncheckedUpdateOneWithoutCharacterProfileInput = {
    create?: XOR<CharacterUncheckedCreateWithoutCharacterProfileInput, CharacterCreateWithoutCharacterProfileInput>
    connect?: CharacterWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<CharacterUncheckedUpdateWithoutCharacterProfileInput, CharacterUpdateWithoutCharacterProfileInput>
    upsert?: CharacterUpsertWithoutCharacterProfileInput
    connectOrCreate?: CharacterCreateOrConnectWithoutcharacterProfileInput
  }

  export type CharacterCreateOneWithoutTalentsInput = {
    create?: XOR<CharacterUncheckedCreateWithoutTalentsInput, CharacterCreateWithoutTalentsInput>
    connect?: CharacterWhereUniqueInput
    connectOrCreate?: CharacterCreateOrConnectWithouttalentsInput
  }

  export type TalentLevelUpMaterialCreateOneWithoutTalentsInput = {
    create?: XOR<TalentLevelUpMaterialUncheckedCreateWithoutTalentsInput, TalentLevelUpMaterialCreateWithoutTalentsInput>
    connect?: TalentLevelUpMaterialWhereUniqueInput
    connectOrCreate?: TalentLevelUpMaterialCreateOrConnectWithouttalentsInput
  }

  export type CharacterUpdateOneRequiredWithoutTalentsInput = {
    create?: XOR<CharacterUncheckedCreateWithoutTalentsInput, CharacterCreateWithoutTalentsInput>
    connect?: CharacterWhereUniqueInput
    update?: XOR<CharacterUncheckedUpdateWithoutTalentsInput, CharacterUpdateWithoutTalentsInput>
    upsert?: CharacterUpsertWithoutTalentsInput
    connectOrCreate?: CharacterCreateOrConnectWithouttalentsInput
  }

  export type TalentLevelUpMaterialUpdateOneWithoutTalentsInput = {
    create?: XOR<TalentLevelUpMaterialUncheckedCreateWithoutTalentsInput, TalentLevelUpMaterialCreateWithoutTalentsInput>
    connect?: TalentLevelUpMaterialWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<TalentLevelUpMaterialUncheckedUpdateWithoutTalentsInput, TalentLevelUpMaterialUpdateWithoutTalentsInput>
    upsert?: TalentLevelUpMaterialUpsertWithoutTalentsInput
    connectOrCreate?: TalentLevelUpMaterialCreateOrConnectWithouttalentsInput
  }

  export type CharacterCreateManyWithoutElementsInput = {
    create?: XOR<Enumerable<CharacterUncheckedCreateWithoutElementsInput>, Enumerable<CharacterCreateWithoutElementsInput>>
    connect?: Enumerable<CharacterWhereUniqueInput>
    connectOrCreate?: Enumerable<CharacterCreateOrConnectWithoutelementsInput>
  }

  export type CharacterProfileCreateManyWithoutVisionInput = {
    create?: XOR<Enumerable<CharacterProfileUncheckedCreateWithoutVisionInput>, Enumerable<CharacterProfileCreateWithoutVisionInput>>
    connect?: Enumerable<CharacterProfileWhereUniqueInput>
    connectOrCreate?: Enumerable<CharacterProfileCreateOrConnectWithoutvisionInput>
  }

  export type RegionCreateOneWithoutElementInput = {
    create?: XOR<RegionUncheckedCreateWithoutElementInput, RegionCreateWithoutElementInput>
    connect?: RegionWhereUniqueInput
    connectOrCreate?: RegionCreateOrConnectWithoutelementInput
  }

  export type CharacterProfileUncheckedCreateManyWithoutVisionInput = {
    create?: XOR<Enumerable<CharacterProfileUncheckedCreateWithoutVisionInput>, Enumerable<CharacterProfileCreateWithoutVisionInput>>
    connect?: Enumerable<CharacterProfileWhereUniqueInput>
    connectOrCreate?: Enumerable<CharacterProfileCreateOrConnectWithoutvisionInput>
  }

  export type CharacterUpdateManyWithoutElementsInput = {
    create?: XOR<Enumerable<CharacterUncheckedCreateWithoutElementsInput>, Enumerable<CharacterCreateWithoutElementsInput>>
    connect?: Enumerable<CharacterWhereUniqueInput>
    set?: Enumerable<CharacterWhereUniqueInput>
    disconnect?: Enumerable<CharacterWhereUniqueInput>
    delete?: Enumerable<CharacterWhereUniqueInput>
    update?: Enumerable<CharacterUpdateWithWhereUniqueWithoutElementsInput>
    updateMany?: Enumerable<CharacterUpdateManyWithWhereWithoutElementsInput>
    deleteMany?: Enumerable<CharacterScalarWhereInput>
    upsert?: Enumerable<CharacterUpsertWithWhereUniqueWithoutElementsInput>
    connectOrCreate?: Enumerable<CharacterCreateOrConnectWithoutelementsInput>
  }

  export type CharacterProfileUpdateManyWithoutVisionInput = {
    create?: XOR<Enumerable<CharacterProfileUncheckedCreateWithoutVisionInput>, Enumerable<CharacterProfileCreateWithoutVisionInput>>
    connect?: Enumerable<CharacterProfileWhereUniqueInput>
    set?: Enumerable<CharacterProfileWhereUniqueInput>
    disconnect?: Enumerable<CharacterProfileWhereUniqueInput>
    delete?: Enumerable<CharacterProfileWhereUniqueInput>
    update?: Enumerable<CharacterProfileUpdateWithWhereUniqueWithoutVisionInput>
    updateMany?: Enumerable<CharacterProfileUpdateManyWithWhereWithoutVisionInput>
    deleteMany?: Enumerable<CharacterProfileScalarWhereInput>
    upsert?: Enumerable<CharacterProfileUpsertWithWhereUniqueWithoutVisionInput>
    connectOrCreate?: Enumerable<CharacterProfileCreateOrConnectWithoutvisionInput>
  }

  export type RegionUpdateOneWithoutElementInput = {
    create?: XOR<RegionUncheckedCreateWithoutElementInput, RegionCreateWithoutElementInput>
    connect?: RegionWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<RegionUncheckedUpdateWithoutElementInput, RegionUpdateWithoutElementInput>
    upsert?: RegionUpsertWithoutElementInput
    connectOrCreate?: RegionCreateOrConnectWithoutelementInput
  }

  export type CharacterProfileUncheckedUpdateManyWithoutVisionInput = {
    create?: XOR<Enumerable<CharacterProfileUncheckedCreateWithoutVisionInput>, Enumerable<CharacterProfileCreateWithoutVisionInput>>
    connect?: Enumerable<CharacterProfileWhereUniqueInput>
    set?: Enumerable<CharacterProfileWhereUniqueInput>
    disconnect?: Enumerable<CharacterProfileWhereUniqueInput>
    delete?: Enumerable<CharacterProfileWhereUniqueInput>
    update?: Enumerable<CharacterProfileUpdateWithWhereUniqueWithoutVisionInput>
    updateMany?: Enumerable<CharacterProfileUpdateManyWithWhereWithoutVisionInput>
    deleteMany?: Enumerable<CharacterProfileScalarWhereInput>
    upsert?: Enumerable<CharacterProfileUpsertWithWhereUniqueWithoutVisionInput>
    connectOrCreate?: Enumerable<CharacterProfileCreateOrConnectWithoutvisionInput>
  }

  export type CharacterProfileCreateManyWithoutRegionInput = {
    create?: XOR<Enumerable<CharacterProfileUncheckedCreateWithoutRegionInput>, Enumerable<CharacterProfileCreateWithoutRegionInput>>
    connect?: Enumerable<CharacterProfileWhereUniqueInput>
    connectOrCreate?: Enumerable<CharacterProfileCreateOrConnectWithoutregionInput>
  }

  export type DomainCreateManyWithoutRegionInput = {
    create?: XOR<Enumerable<DomainUncheckedCreateWithoutRegionInput>, Enumerable<DomainCreateWithoutRegionInput>>
    connect?: Enumerable<DomainWhereUniqueInput>
    connectOrCreate?: Enumerable<DomainCreateOrConnectWithoutregionInput>
  }

  export type ElementCreateOneWithoutRegionInput = {
    create?: XOR<ElementUncheckedCreateWithoutRegionInput, ElementCreateWithoutRegionInput>
    connect?: ElementWhereUniqueInput
    connectOrCreate?: ElementCreateOrConnectWithoutregionInput
  }

  export type CharacterProfileUncheckedCreateManyWithoutRegionInput = {
    create?: XOR<Enumerable<CharacterProfileUncheckedCreateWithoutRegionInput>, Enumerable<CharacterProfileCreateWithoutRegionInput>>
    connect?: Enumerable<CharacterProfileWhereUniqueInput>
    connectOrCreate?: Enumerable<CharacterProfileCreateOrConnectWithoutregionInput>
  }

  export type DomainUncheckedCreateManyWithoutRegionInput = {
    create?: XOR<Enumerable<DomainUncheckedCreateWithoutRegionInput>, Enumerable<DomainCreateWithoutRegionInput>>
    connect?: Enumerable<DomainWhereUniqueInput>
    connectOrCreate?: Enumerable<DomainCreateOrConnectWithoutregionInput>
  }

  export type ElementUncheckedCreateOneWithoutRegionInput = {
    create?: XOR<ElementUncheckedCreateWithoutRegionInput, ElementCreateWithoutRegionInput>
    connect?: ElementWhereUniqueInput
    connectOrCreate?: ElementCreateOrConnectWithoutregionInput
  }

  export type CharacterProfileUpdateManyWithoutRegionInput = {
    create?: XOR<Enumerable<CharacterProfileUncheckedCreateWithoutRegionInput>, Enumerable<CharacterProfileCreateWithoutRegionInput>>
    connect?: Enumerable<CharacterProfileWhereUniqueInput>
    set?: Enumerable<CharacterProfileWhereUniqueInput>
    disconnect?: Enumerable<CharacterProfileWhereUniqueInput>
    delete?: Enumerable<CharacterProfileWhereUniqueInput>
    update?: Enumerable<CharacterProfileUpdateWithWhereUniqueWithoutRegionInput>
    updateMany?: Enumerable<CharacterProfileUpdateManyWithWhereWithoutRegionInput>
    deleteMany?: Enumerable<CharacterProfileScalarWhereInput>
    upsert?: Enumerable<CharacterProfileUpsertWithWhereUniqueWithoutRegionInput>
    connectOrCreate?: Enumerable<CharacterProfileCreateOrConnectWithoutregionInput>
  }

  export type DomainUpdateManyWithoutRegionInput = {
    create?: XOR<Enumerable<DomainUncheckedCreateWithoutRegionInput>, Enumerable<DomainCreateWithoutRegionInput>>
    connect?: Enumerable<DomainWhereUniqueInput>
    set?: Enumerable<DomainWhereUniqueInput>
    disconnect?: Enumerable<DomainWhereUniqueInput>
    delete?: Enumerable<DomainWhereUniqueInput>
    update?: Enumerable<DomainUpdateWithWhereUniqueWithoutRegionInput>
    updateMany?: Enumerable<DomainUpdateManyWithWhereWithoutRegionInput>
    deleteMany?: Enumerable<DomainScalarWhereInput>
    upsert?: Enumerable<DomainUpsertWithWhereUniqueWithoutRegionInput>
    connectOrCreate?: Enumerable<DomainCreateOrConnectWithoutregionInput>
  }

  export type ElementUpdateOneWithoutRegionInput = {
    create?: XOR<ElementUncheckedCreateWithoutRegionInput, ElementCreateWithoutRegionInput>
    connect?: ElementWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ElementUncheckedUpdateWithoutRegionInput, ElementUpdateWithoutRegionInput>
    upsert?: ElementUpsertWithoutRegionInput
    connectOrCreate?: ElementCreateOrConnectWithoutregionInput
  }

  export type CharacterProfileUncheckedUpdateManyWithoutRegionInput = {
    create?: XOR<Enumerable<CharacterProfileUncheckedCreateWithoutRegionInput>, Enumerable<CharacterProfileCreateWithoutRegionInput>>
    connect?: Enumerable<CharacterProfileWhereUniqueInput>
    set?: Enumerable<CharacterProfileWhereUniqueInput>
    disconnect?: Enumerable<CharacterProfileWhereUniqueInput>
    delete?: Enumerable<CharacterProfileWhereUniqueInput>
    update?: Enumerable<CharacterProfileUpdateWithWhereUniqueWithoutRegionInput>
    updateMany?: Enumerable<CharacterProfileUpdateManyWithWhereWithoutRegionInput>
    deleteMany?: Enumerable<CharacterProfileScalarWhereInput>
    upsert?: Enumerable<CharacterProfileUpsertWithWhereUniqueWithoutRegionInput>
    connectOrCreate?: Enumerable<CharacterProfileCreateOrConnectWithoutregionInput>
  }

  export type DomainUncheckedUpdateManyWithoutRegionInput = {
    create?: XOR<Enumerable<DomainUncheckedCreateWithoutRegionInput>, Enumerable<DomainCreateWithoutRegionInput>>
    connect?: Enumerable<DomainWhereUniqueInput>
    set?: Enumerable<DomainWhereUniqueInput>
    disconnect?: Enumerable<DomainWhereUniqueInput>
    delete?: Enumerable<DomainWhereUniqueInput>
    update?: Enumerable<DomainUpdateWithWhereUniqueWithoutRegionInput>
    updateMany?: Enumerable<DomainUpdateManyWithWhereWithoutRegionInput>
    deleteMany?: Enumerable<DomainScalarWhereInput>
    upsert?: Enumerable<DomainUpsertWithWhereUniqueWithoutRegionInput>
    connectOrCreate?: Enumerable<DomainCreateOrConnectWithoutregionInput>
  }

  export type ElementUncheckedUpdateOneWithoutRegionInput = {
    create?: XOR<ElementUncheckedCreateWithoutRegionInput, ElementCreateWithoutRegionInput>
    connect?: ElementWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ElementUncheckedUpdateWithoutRegionInput, ElementUpdateWithoutRegionInput>
    upsert?: ElementUpsertWithoutRegionInput
    connectOrCreate?: ElementCreateOrConnectWithoutregionInput
  }

  export type WeaponAscensionCreateManyWithoutWeaponInput = {
    create?: XOR<Enumerable<WeaponAscensionUncheckedCreateWithoutWeaponInput>, Enumerable<WeaponAscensionCreateWithoutWeaponInput>>
    connect?: Enumerable<WeaponAscensionWhereUniqueInput>
    connectOrCreate?: Enumerable<WeaponAscensionCreateOrConnectWithoutweaponInput>
  }

  export type ForgeRecipeCreateOneWithoutWeaponInput = {
    create?: XOR<ForgeRecipeUncheckedCreateWithoutWeaponInput, ForgeRecipeCreateWithoutWeaponInput>
    connect?: ForgeRecipeWhereUniqueInput
    connectOrCreate?: ForgeRecipeCreateOrConnectWithoutweaponInput
  }

  export type WeaponAscensionUncheckedCreateManyWithoutWeaponInput = {
    create?: XOR<Enumerable<WeaponAscensionUncheckedCreateWithoutWeaponInput>, Enumerable<WeaponAscensionCreateWithoutWeaponInput>>
    connect?: Enumerable<WeaponAscensionWhereUniqueInput>
    connectOrCreate?: Enumerable<WeaponAscensionCreateOrConnectWithoutweaponInput>
  }

  export type ForgeRecipeUncheckedCreateOneWithoutWeaponInput = {
    create?: XOR<ForgeRecipeUncheckedCreateWithoutWeaponInput, ForgeRecipeCreateWithoutWeaponInput>
    connect?: ForgeRecipeWhereUniqueInput
    connectOrCreate?: ForgeRecipeCreateOrConnectWithoutweaponInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput = {
    set?: WeaponSecondaryStatType | null
  }

  export type EnumWeaponTypeFieldUpdateOperationsInput = {
    set?: WeaponType
  }

  export type WeaponAscensionUpdateManyWithoutWeaponInput = {
    create?: XOR<Enumerable<WeaponAscensionUncheckedCreateWithoutWeaponInput>, Enumerable<WeaponAscensionCreateWithoutWeaponInput>>
    connect?: Enumerable<WeaponAscensionWhereUniqueInput>
    set?: Enumerable<WeaponAscensionWhereUniqueInput>
    disconnect?: Enumerable<WeaponAscensionWhereUniqueInput>
    delete?: Enumerable<WeaponAscensionWhereUniqueInput>
    update?: Enumerable<WeaponAscensionUpdateWithWhereUniqueWithoutWeaponInput>
    updateMany?: Enumerable<WeaponAscensionUpdateManyWithWhereWithoutWeaponInput>
    deleteMany?: Enumerable<WeaponAscensionScalarWhereInput>
    upsert?: Enumerable<WeaponAscensionUpsertWithWhereUniqueWithoutWeaponInput>
    connectOrCreate?: Enumerable<WeaponAscensionCreateOrConnectWithoutweaponInput>
  }

  export type ForgeRecipeUpdateOneWithoutWeaponInput = {
    create?: XOR<ForgeRecipeUncheckedCreateWithoutWeaponInput, ForgeRecipeCreateWithoutWeaponInput>
    connect?: ForgeRecipeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ForgeRecipeUncheckedUpdateWithoutWeaponInput, ForgeRecipeUpdateWithoutWeaponInput>
    upsert?: ForgeRecipeUpsertWithoutWeaponInput
    connectOrCreate?: ForgeRecipeCreateOrConnectWithoutweaponInput
  }

  export type WeaponAscensionUncheckedUpdateManyWithoutWeaponInput = {
    create?: XOR<Enumerable<WeaponAscensionUncheckedCreateWithoutWeaponInput>, Enumerable<WeaponAscensionCreateWithoutWeaponInput>>
    connect?: Enumerable<WeaponAscensionWhereUniqueInput>
    set?: Enumerable<WeaponAscensionWhereUniqueInput>
    disconnect?: Enumerable<WeaponAscensionWhereUniqueInput>
    delete?: Enumerable<WeaponAscensionWhereUniqueInput>
    update?: Enumerable<WeaponAscensionUpdateWithWhereUniqueWithoutWeaponInput>
    updateMany?: Enumerable<WeaponAscensionUpdateManyWithWhereWithoutWeaponInput>
    deleteMany?: Enumerable<WeaponAscensionScalarWhereInput>
    upsert?: Enumerable<WeaponAscensionUpsertWithWhereUniqueWithoutWeaponInput>
    connectOrCreate?: Enumerable<WeaponAscensionCreateOrConnectWithoutweaponInput>
  }

  export type ForgeRecipeUncheckedUpdateOneWithoutWeaponInput = {
    create?: XOR<ForgeRecipeUncheckedCreateWithoutWeaponInput, ForgeRecipeCreateWithoutWeaponInput>
    connect?: ForgeRecipeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ForgeRecipeUncheckedUpdateWithoutWeaponInput, ForgeRecipeUpdateWithoutWeaponInput>
    upsert?: ForgeRecipeUpsertWithoutWeaponInput
    connectOrCreate?: ForgeRecipeCreateOrConnectWithoutweaponInput
  }

  export type CommonAscensionMaterialCreateManyWithoutWeaponAscensionsInput = {
    create?: XOR<Enumerable<CommonAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput>, Enumerable<CommonAscensionMaterialCreateWithoutWeaponAscensionsInput>>
    connect?: Enumerable<CommonAscensionMaterialWhereUniqueInput>
    connectOrCreate?: Enumerable<CommonAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput>
  }

  export type WeaponAscensionMaterialCreateOneWithoutWeaponAscensionsInput = {
    create?: XOR<WeaponAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput, WeaponAscensionMaterialCreateWithoutWeaponAscensionsInput>
    connect?: WeaponAscensionMaterialWhereUniqueInput
    connectOrCreate?: WeaponAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput
  }

  export type WeaponCreateOneWithoutAscensionsInput = {
    create?: XOR<WeaponUncheckedCreateWithoutAscensionsInput, WeaponCreateWithoutAscensionsInput>
    connect?: WeaponWhereUniqueInput
    connectOrCreate?: WeaponCreateOrConnectWithoutascensionsInput
  }

  export type CommonAscensionMaterialUpdateManyWithoutWeaponAscensionsInput = {
    create?: XOR<Enumerable<CommonAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput>, Enumerable<CommonAscensionMaterialCreateWithoutWeaponAscensionsInput>>
    connect?: Enumerable<CommonAscensionMaterialWhereUniqueInput>
    set?: Enumerable<CommonAscensionMaterialWhereUniqueInput>
    disconnect?: Enumerable<CommonAscensionMaterialWhereUniqueInput>
    delete?: Enumerable<CommonAscensionMaterialWhereUniqueInput>
    update?: Enumerable<CommonAscensionMaterialUpdateWithWhereUniqueWithoutWeaponAscensionsInput>
    updateMany?: Enumerable<CommonAscensionMaterialUpdateManyWithWhereWithoutWeaponAscensionsInput>
    deleteMany?: Enumerable<CommonAscensionMaterialScalarWhereInput>
    upsert?: Enumerable<CommonAscensionMaterialUpsertWithWhereUniqueWithoutWeaponAscensionsInput>
    connectOrCreate?: Enumerable<CommonAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput>
  }

  export type WeaponAscensionMaterialUpdateOneWithoutWeaponAscensionsInput = {
    create?: XOR<WeaponAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput, WeaponAscensionMaterialCreateWithoutWeaponAscensionsInput>
    connect?: WeaponAscensionMaterialWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WeaponAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput, WeaponAscensionMaterialUpdateWithoutWeaponAscensionsInput>
    upsert?: WeaponAscensionMaterialUpsertWithoutWeaponAscensionsInput
    connectOrCreate?: WeaponAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput
  }

  export type WeaponUpdateOneWithoutAscensionsInput = {
    create?: XOR<WeaponUncheckedCreateWithoutAscensionsInput, WeaponCreateWithoutAscensionsInput>
    connect?: WeaponWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WeaponUncheckedUpdateWithoutAscensionsInput, WeaponUpdateWithoutAscensionsInput>
    upsert?: WeaponUpsertWithoutAscensionsInput
    connectOrCreate?: WeaponCreateOrConnectWithoutascensionsInput
  }

  export type CharacterAscensionCreateManyWithoutCommonAscensionMaterialsInput = {
    create?: XOR<Enumerable<CharacterAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput>, Enumerable<CharacterAscensionCreateWithoutCommonAscensionMaterialsInput>>
    connect?: Enumerable<CharacterAscensionWhereUniqueInput>
    connectOrCreate?: Enumerable<CharacterAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput>
  }

  export type WeaponAscensionCreateManyWithoutCommonAscensionMaterialsInput = {
    create?: XOR<Enumerable<WeaponAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput>, Enumerable<WeaponAscensionCreateWithoutCommonAscensionMaterialsInput>>
    connect?: Enumerable<WeaponAscensionWhereUniqueInput>
    connectOrCreate?: Enumerable<WeaponAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput>
  }

  export type EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput = {
    set?: CommonAscensionMaterialGroup
  }

  export type CharacterAscensionUpdateManyWithoutCommonAscensionMaterialsInput = {
    create?: XOR<Enumerable<CharacterAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput>, Enumerable<CharacterAscensionCreateWithoutCommonAscensionMaterialsInput>>
    connect?: Enumerable<CharacterAscensionWhereUniqueInput>
    set?: Enumerable<CharacterAscensionWhereUniqueInput>
    disconnect?: Enumerable<CharacterAscensionWhereUniqueInput>
    delete?: Enumerable<CharacterAscensionWhereUniqueInput>
    update?: Enumerable<CharacterAscensionUpdateWithWhereUniqueWithoutCommonAscensionMaterialsInput>
    updateMany?: Enumerable<CharacterAscensionUpdateManyWithWhereWithoutCommonAscensionMaterialsInput>
    deleteMany?: Enumerable<CharacterAscensionScalarWhereInput>
    upsert?: Enumerable<CharacterAscensionUpsertWithWhereUniqueWithoutCommonAscensionMaterialsInput>
    connectOrCreate?: Enumerable<CharacterAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput>
  }

  export type WeaponAscensionUpdateManyWithoutCommonAscensionMaterialsInput = {
    create?: XOR<Enumerable<WeaponAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput>, Enumerable<WeaponAscensionCreateWithoutCommonAscensionMaterialsInput>>
    connect?: Enumerable<WeaponAscensionWhereUniqueInput>
    set?: Enumerable<WeaponAscensionWhereUniqueInput>
    disconnect?: Enumerable<WeaponAscensionWhereUniqueInput>
    delete?: Enumerable<WeaponAscensionWhereUniqueInput>
    update?: Enumerable<WeaponAscensionUpdateWithWhereUniqueWithoutCommonAscensionMaterialsInput>
    updateMany?: Enumerable<WeaponAscensionUpdateManyWithWhereWithoutCommonAscensionMaterialsInput>
    deleteMany?: Enumerable<WeaponAscensionScalarWhereInput>
    upsert?: Enumerable<WeaponAscensionUpsertWithWhereUniqueWithoutCommonAscensionMaterialsInput>
    connectOrCreate?: Enumerable<WeaponAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput>
  }

  export type DomainCreateOneWithoutWeaponAscensionMaterialsInput = {
    create?: XOR<DomainUncheckedCreateWithoutWeaponAscensionMaterialsInput, DomainCreateWithoutWeaponAscensionMaterialsInput>
    connect?: DomainWhereUniqueInput
    connectOrCreate?: DomainCreateOrConnectWithoutweaponAscensionMaterialsInput
  }

  export type WeaponAscensionCreateManyWithoutWeaponAscensionMaterialInput = {
    create?: XOR<Enumerable<WeaponAscensionUncheckedCreateWithoutWeaponAscensionMaterialInput>, Enumerable<WeaponAscensionCreateWithoutWeaponAscensionMaterialInput>>
    connect?: Enumerable<WeaponAscensionWhereUniqueInput>
    connectOrCreate?: Enumerable<WeaponAscensionCreateOrConnectWithoutweaponAscensionMaterialInput>
  }

  export type WeaponAscensionUncheckedCreateManyWithoutWeaponAscensionMaterialInput = {
    create?: XOR<Enumerable<WeaponAscensionUncheckedCreateWithoutWeaponAscensionMaterialInput>, Enumerable<WeaponAscensionCreateWithoutWeaponAscensionMaterialInput>>
    connect?: Enumerable<WeaponAscensionWhereUniqueInput>
    connectOrCreate?: Enumerable<WeaponAscensionCreateOrConnectWithoutweaponAscensionMaterialInput>
  }

  export type EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput = {
    set?: WeaponAscensionMaterialGroup
  }

  export type DomainUpdateOneWithoutWeaponAscensionMaterialsInput = {
    create?: XOR<DomainUncheckedCreateWithoutWeaponAscensionMaterialsInput, DomainCreateWithoutWeaponAscensionMaterialsInput>
    connect?: DomainWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<DomainUncheckedUpdateWithoutWeaponAscensionMaterialsInput, DomainUpdateWithoutWeaponAscensionMaterialsInput>
    upsert?: DomainUpsertWithoutWeaponAscensionMaterialsInput
    connectOrCreate?: DomainCreateOrConnectWithoutweaponAscensionMaterialsInput
  }

  export type WeaponAscensionUpdateManyWithoutWeaponAscensionMaterialInput = {
    create?: XOR<Enumerable<WeaponAscensionUncheckedCreateWithoutWeaponAscensionMaterialInput>, Enumerable<WeaponAscensionCreateWithoutWeaponAscensionMaterialInput>>
    connect?: Enumerable<WeaponAscensionWhereUniqueInput>
    set?: Enumerable<WeaponAscensionWhereUniqueInput>
    disconnect?: Enumerable<WeaponAscensionWhereUniqueInput>
    delete?: Enumerable<WeaponAscensionWhereUniqueInput>
    update?: Enumerable<WeaponAscensionUpdateWithWhereUniqueWithoutWeaponAscensionMaterialInput>
    updateMany?: Enumerable<WeaponAscensionUpdateManyWithWhereWithoutWeaponAscensionMaterialInput>
    deleteMany?: Enumerable<WeaponAscensionScalarWhereInput>
    upsert?: Enumerable<WeaponAscensionUpsertWithWhereUniqueWithoutWeaponAscensionMaterialInput>
    connectOrCreate?: Enumerable<WeaponAscensionCreateOrConnectWithoutweaponAscensionMaterialInput>
  }

  export type WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionMaterialInput = {
    create?: XOR<Enumerable<WeaponAscensionUncheckedCreateWithoutWeaponAscensionMaterialInput>, Enumerable<WeaponAscensionCreateWithoutWeaponAscensionMaterialInput>>
    connect?: Enumerable<WeaponAscensionWhereUniqueInput>
    set?: Enumerable<WeaponAscensionWhereUniqueInput>
    disconnect?: Enumerable<WeaponAscensionWhereUniqueInput>
    delete?: Enumerable<WeaponAscensionWhereUniqueInput>
    update?: Enumerable<WeaponAscensionUpdateWithWhereUniqueWithoutWeaponAscensionMaterialInput>
    updateMany?: Enumerable<WeaponAscensionUpdateManyWithWhereWithoutWeaponAscensionMaterialInput>
    deleteMany?: Enumerable<WeaponAscensionScalarWhereInput>
    upsert?: Enumerable<WeaponAscensionUpsertWithWhereUniqueWithoutWeaponAscensionMaterialInput>
    connectOrCreate?: Enumerable<WeaponAscensionCreateOrConnectWithoutweaponAscensionMaterialInput>
  }

  export type ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialInput = {
    create?: XOR<ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialInput, ForgeRecipeCreateWithoutWeaponEnhancementMaterialInput>
    connect?: ForgeRecipeWhereUniqueInput
    connectOrCreate?: ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialInput
  }

  export type ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialsInput = {
    create?: XOR<ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialsInput, ForgeRecipeCreateWithoutWeaponEnhancementMaterialsInput>
    connect?: ForgeRecipeWhereUniqueInput
    connectOrCreate?: ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialsInput
  }

  export type ForgeRecipeUncheckedCreateOneWithoutWeaponEnhancementMaterialInput = {
    create?: XOR<ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialInput, ForgeRecipeCreateWithoutWeaponEnhancementMaterialInput>
    connect?: ForgeRecipeWhereUniqueInput
    connectOrCreate?: ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialInput
  }

  export type ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialInput = {
    create?: XOR<ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialInput, ForgeRecipeCreateWithoutWeaponEnhancementMaterialInput>
    connect?: ForgeRecipeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialInput, ForgeRecipeUpdateWithoutWeaponEnhancementMaterialInput>
    upsert?: ForgeRecipeUpsertWithoutWeaponEnhancementMaterialInput
    connectOrCreate?: ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialInput
  }

  export type ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialsInput = {
    create?: XOR<ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialsInput, ForgeRecipeCreateWithoutWeaponEnhancementMaterialsInput>
    connect?: ForgeRecipeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialsInput, ForgeRecipeUpdateWithoutWeaponEnhancementMaterialsInput>
    upsert?: ForgeRecipeUpsertWithoutWeaponEnhancementMaterialsInput
    connectOrCreate?: ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialsInput
  }

  export type ForgeRecipeUncheckedUpdateOneWithoutWeaponEnhancementMaterialInput = {
    create?: XOR<ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialInput, ForgeRecipeCreateWithoutWeaponEnhancementMaterialInput>
    connect?: ForgeRecipeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialInput, ForgeRecipeUpdateWithoutWeaponEnhancementMaterialInput>
    upsert?: ForgeRecipeUpsertWithoutWeaponEnhancementMaterialInput
    connectOrCreate?: ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialInput
  }

  export type CharacterAscensionCreateManyWithoutCharacterAscensionMaterialInput = {
    create?: XOR<Enumerable<CharacterAscensionUncheckedCreateWithoutCharacterAscensionMaterialInput>, Enumerable<CharacterAscensionCreateWithoutCharacterAscensionMaterialInput>>
    connect?: Enumerable<CharacterAscensionWhereUniqueInput>
    connectOrCreate?: Enumerable<CharacterAscensionCreateOrConnectWithoutcharacterAscensionMaterialInput>
  }

  export type CharacterAscensionUncheckedCreateManyWithoutCharacterAscensionMaterialInput = {
    create?: XOR<Enumerable<CharacterAscensionUncheckedCreateWithoutCharacterAscensionMaterialInput>, Enumerable<CharacterAscensionCreateWithoutCharacterAscensionMaterialInput>>
    connect?: Enumerable<CharacterAscensionWhereUniqueInput>
    connectOrCreate?: Enumerable<CharacterAscensionCreateOrConnectWithoutcharacterAscensionMaterialInput>
  }

  export type CharacterAscensionUpdateManyWithoutCharacterAscensionMaterialInput = {
    create?: XOR<Enumerable<CharacterAscensionUncheckedCreateWithoutCharacterAscensionMaterialInput>, Enumerable<CharacterAscensionCreateWithoutCharacterAscensionMaterialInput>>
    connect?: Enumerable<CharacterAscensionWhereUniqueInput>
    set?: Enumerable<CharacterAscensionWhereUniqueInput>
    disconnect?: Enumerable<CharacterAscensionWhereUniqueInput>
    delete?: Enumerable<CharacterAscensionWhereUniqueInput>
    update?: Enumerable<CharacterAscensionUpdateWithWhereUniqueWithoutCharacterAscensionMaterialInput>
    updateMany?: Enumerable<CharacterAscensionUpdateManyWithWhereWithoutCharacterAscensionMaterialInput>
    deleteMany?: Enumerable<CharacterAscensionScalarWhereInput>
    upsert?: Enumerable<CharacterAscensionUpsertWithWhereUniqueWithoutCharacterAscensionMaterialInput>
    connectOrCreate?: Enumerable<CharacterAscensionCreateOrConnectWithoutcharacterAscensionMaterialInput>
  }

  export type CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionMaterialInput = {
    create?: XOR<Enumerable<CharacterAscensionUncheckedCreateWithoutCharacterAscensionMaterialInput>, Enumerable<CharacterAscensionCreateWithoutCharacterAscensionMaterialInput>>
    connect?: Enumerable<CharacterAscensionWhereUniqueInput>
    set?: Enumerable<CharacterAscensionWhereUniqueInput>
    disconnect?: Enumerable<CharacterAscensionWhereUniqueInput>
    delete?: Enumerable<CharacterAscensionWhereUniqueInput>
    update?: Enumerable<CharacterAscensionUpdateWithWhereUniqueWithoutCharacterAscensionMaterialInput>
    updateMany?: Enumerable<CharacterAscensionUpdateManyWithWhereWithoutCharacterAscensionMaterialInput>
    deleteMany?: Enumerable<CharacterAscensionScalarWhereInput>
    upsert?: Enumerable<CharacterAscensionUpsertWithWhereUniqueWithoutCharacterAscensionMaterialInput>
    connectOrCreate?: Enumerable<CharacterAscensionCreateOrConnectWithoutcharacterAscensionMaterialInput>
  }

  export type DomainCreateOneWithoutTalentLevelUpMaterialsInput = {
    create?: XOR<DomainUncheckedCreateWithoutTalentLevelUpMaterialsInput, DomainCreateWithoutTalentLevelUpMaterialsInput>
    connect?: DomainWhereUniqueInput
    connectOrCreate?: DomainCreateOrConnectWithouttalentLevelUpMaterialsInput
  }

  export type TalentCreateManyWithoutTalentLevelUpMaterialInput = {
    create?: XOR<Enumerable<TalentUncheckedCreateWithoutTalentLevelUpMaterialInput>, Enumerable<TalentCreateWithoutTalentLevelUpMaterialInput>>
    connect?: Enumerable<TalentWhereUniqueInput>
    connectOrCreate?: Enumerable<TalentCreateOrConnectWithouttalentLevelUpMaterialInput>
  }

  export type TalentUncheckedCreateManyWithoutTalentLevelUpMaterialInput = {
    create?: XOR<Enumerable<TalentUncheckedCreateWithoutTalentLevelUpMaterialInput>, Enumerable<TalentCreateWithoutTalentLevelUpMaterialInput>>
    connect?: Enumerable<TalentWhereUniqueInput>
    connectOrCreate?: Enumerable<TalentCreateOrConnectWithouttalentLevelUpMaterialInput>
  }

  export type EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput = {
    set?: TalentLevelUpMaterialGroup
  }

  export type DomainUpdateOneWithoutTalentLevelUpMaterialsInput = {
    create?: XOR<DomainUncheckedCreateWithoutTalentLevelUpMaterialsInput, DomainCreateWithoutTalentLevelUpMaterialsInput>
    connect?: DomainWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<DomainUncheckedUpdateWithoutTalentLevelUpMaterialsInput, DomainUpdateWithoutTalentLevelUpMaterialsInput>
    upsert?: DomainUpsertWithoutTalentLevelUpMaterialsInput
    connectOrCreate?: DomainCreateOrConnectWithouttalentLevelUpMaterialsInput
  }

  export type TalentUpdateManyWithoutTalentLevelUpMaterialInput = {
    create?: XOR<Enumerable<TalentUncheckedCreateWithoutTalentLevelUpMaterialInput>, Enumerable<TalentCreateWithoutTalentLevelUpMaterialInput>>
    connect?: Enumerable<TalentWhereUniqueInput>
    set?: Enumerable<TalentWhereUniqueInput>
    disconnect?: Enumerable<TalentWhereUniqueInput>
    delete?: Enumerable<TalentWhereUniqueInput>
    update?: Enumerable<TalentUpdateWithWhereUniqueWithoutTalentLevelUpMaterialInput>
    updateMany?: Enumerable<TalentUpdateManyWithWhereWithoutTalentLevelUpMaterialInput>
    deleteMany?: Enumerable<TalentScalarWhereInput>
    upsert?: Enumerable<TalentUpsertWithWhereUniqueWithoutTalentLevelUpMaterialInput>
    connectOrCreate?: Enumerable<TalentCreateOrConnectWithouttalentLevelUpMaterialInput>
  }

  export type TalentUncheckedUpdateManyWithoutTalentLevelUpMaterialInput = {
    create?: XOR<Enumerable<TalentUncheckedCreateWithoutTalentLevelUpMaterialInput>, Enumerable<TalentCreateWithoutTalentLevelUpMaterialInput>>
    connect?: Enumerable<TalentWhereUniqueInput>
    set?: Enumerable<TalentWhereUniqueInput>
    disconnect?: Enumerable<TalentWhereUniqueInput>
    delete?: Enumerable<TalentWhereUniqueInput>
    update?: Enumerable<TalentUpdateWithWhereUniqueWithoutTalentLevelUpMaterialInput>
    updateMany?: Enumerable<TalentUpdateManyWithWhereWithoutTalentLevelUpMaterialInput>
    deleteMany?: Enumerable<TalentScalarWhereInput>
    upsert?: Enumerable<TalentUpsertWithWhereUniqueWithoutTalentLevelUpMaterialInput>
    connectOrCreate?: Enumerable<TalentCreateOrConnectWithouttalentLevelUpMaterialInput>
  }

  export type ConsumeableRecipeCreateManyWithoutCraftingMaterialsInput = {
    create?: XOR<Enumerable<ConsumeableRecipeUncheckedCreateWithoutCraftingMaterialsInput>, Enumerable<ConsumeableRecipeCreateWithoutCraftingMaterialsInput>>
    connect?: Enumerable<ConsumeableRecipeWhereUniqueInput>
    connectOrCreate?: Enumerable<ConsumeableRecipeCreateOrConnectWithoutcraftingMaterialsInput>
  }

  export type ConsumeableRecipeUpdateManyWithoutCraftingMaterialsInput = {
    create?: XOR<Enumerable<ConsumeableRecipeUncheckedCreateWithoutCraftingMaterialsInput>, Enumerable<ConsumeableRecipeCreateWithoutCraftingMaterialsInput>>
    connect?: Enumerable<ConsumeableRecipeWhereUniqueInput>
    set?: Enumerable<ConsumeableRecipeWhereUniqueInput>
    disconnect?: Enumerable<ConsumeableRecipeWhereUniqueInput>
    delete?: Enumerable<ConsumeableRecipeWhereUniqueInput>
    update?: Enumerable<ConsumeableRecipeUpdateWithWhereUniqueWithoutCraftingMaterialsInput>
    updateMany?: Enumerable<ConsumeableRecipeUpdateManyWithWhereWithoutCraftingMaterialsInput>
    deleteMany?: Enumerable<ConsumeableRecipeScalarWhereInput>
    upsert?: Enumerable<ConsumeableRecipeUpsertWithWhereUniqueWithoutCraftingMaterialsInput>
    connectOrCreate?: Enumerable<ConsumeableRecipeCreateOrConnectWithoutcraftingMaterialsInput>
  }

  export type ProcessRecipeCreateOneWithoutMaterialInput = {
    create?: XOR<ProcessRecipeUncheckedCreateWithoutMaterialInput, ProcessRecipeCreateWithoutMaterialInput>
    connect?: ProcessRecipeWhereUniqueInput
    connectOrCreate?: ProcessRecipeCreateOrConnectWithoutmaterialInput
  }

  export type ConsumeableRecipeCreateManyWithoutCookingMaterialsInput = {
    create?: XOR<Enumerable<ConsumeableRecipeUncheckedCreateWithoutCookingMaterialsInput>, Enumerable<ConsumeableRecipeCreateWithoutCookingMaterialsInput>>
    connect?: Enumerable<ConsumeableRecipeWhereUniqueInput>
    connectOrCreate?: Enumerable<ConsumeableRecipeCreateOrConnectWithoutcookingMaterialsInput>
  }

  export type ProcessRecipeUncheckedCreateOneWithoutMaterialInput = {
    create?: XOR<ProcessRecipeUncheckedCreateWithoutMaterialInput, ProcessRecipeCreateWithoutMaterialInput>
    connect?: ProcessRecipeWhereUniqueInput
    connectOrCreate?: ProcessRecipeCreateOrConnectWithoutmaterialInput
  }

  export type ProcessRecipeUpdateOneWithoutMaterialInput = {
    create?: XOR<ProcessRecipeUncheckedCreateWithoutMaterialInput, ProcessRecipeCreateWithoutMaterialInput>
    connect?: ProcessRecipeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ProcessRecipeUncheckedUpdateWithoutMaterialInput, ProcessRecipeUpdateWithoutMaterialInput>
    upsert?: ProcessRecipeUpsertWithoutMaterialInput
    connectOrCreate?: ProcessRecipeCreateOrConnectWithoutmaterialInput
  }

  export type ConsumeableRecipeUpdateManyWithoutCookingMaterialsInput = {
    create?: XOR<Enumerable<ConsumeableRecipeUncheckedCreateWithoutCookingMaterialsInput>, Enumerable<ConsumeableRecipeCreateWithoutCookingMaterialsInput>>
    connect?: Enumerable<ConsumeableRecipeWhereUniqueInput>
    set?: Enumerable<ConsumeableRecipeWhereUniqueInput>
    disconnect?: Enumerable<ConsumeableRecipeWhereUniqueInput>
    delete?: Enumerable<ConsumeableRecipeWhereUniqueInput>
    update?: Enumerable<ConsumeableRecipeUpdateWithWhereUniqueWithoutCookingMaterialsInput>
    updateMany?: Enumerable<ConsumeableRecipeUpdateManyWithWhereWithoutCookingMaterialsInput>
    deleteMany?: Enumerable<ConsumeableRecipeScalarWhereInput>
    upsert?: Enumerable<ConsumeableRecipeUpsertWithWhereUniqueWithoutCookingMaterialsInput>
    connectOrCreate?: Enumerable<ConsumeableRecipeCreateOrConnectWithoutcookingMaterialsInput>
  }

  export type ProcessRecipeUncheckedUpdateOneWithoutMaterialInput = {
    create?: XOR<ProcessRecipeUncheckedCreateWithoutMaterialInput, ProcessRecipeCreateWithoutMaterialInput>
    connect?: ProcessRecipeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ProcessRecipeUncheckedUpdateWithoutMaterialInput, ProcessRecipeUpdateWithoutMaterialInput>
    upsert?: ProcessRecipeUpsertWithoutMaterialInput
    connectOrCreate?: ProcessRecipeCreateOrConnectWithoutmaterialInput
  }

  export type ArtifactCreateManyWithoutDomainInput = {
    create?: XOR<Enumerable<ArtifactUncheckedCreateWithoutDomainInput>, Enumerable<ArtifactCreateWithoutDomainInput>>
    connect?: Enumerable<ArtifactWhereUniqueInput>
    connectOrCreate?: Enumerable<ArtifactCreateOrConnectWithoutdomainInput>
  }

  export type RegionCreateOneWithoutDomainsInput = {
    create?: XOR<RegionUncheckedCreateWithoutDomainsInput, RegionCreateWithoutDomainsInput>
    connect?: RegionWhereUniqueInput
    connectOrCreate?: RegionCreateOrConnectWithoutdomainsInput
  }

  export type TalentLevelUpMaterialCreateManyWithoutDomainInput = {
    create?: XOR<Enumerable<TalentLevelUpMaterialUncheckedCreateWithoutDomainInput>, Enumerable<TalentLevelUpMaterialCreateWithoutDomainInput>>
    connect?: Enumerable<TalentLevelUpMaterialWhereUniqueInput>
    connectOrCreate?: Enumerable<TalentLevelUpMaterialCreateOrConnectWithoutdomainInput>
  }

  export type WeaponAscensionMaterialCreateManyWithoutDomainInput = {
    create?: XOR<Enumerable<WeaponAscensionMaterialUncheckedCreateWithoutDomainInput>, Enumerable<WeaponAscensionMaterialCreateWithoutDomainInput>>
    connect?: Enumerable<WeaponAscensionMaterialWhereUniqueInput>
    connectOrCreate?: Enumerable<WeaponAscensionMaterialCreateOrConnectWithoutdomainInput>
  }

  export type ArtifactUncheckedCreateManyWithoutDomainInput = {
    create?: XOR<Enumerable<ArtifactUncheckedCreateWithoutDomainInput>, Enumerable<ArtifactCreateWithoutDomainInput>>
    connect?: Enumerable<ArtifactWhereUniqueInput>
    connectOrCreate?: Enumerable<ArtifactCreateOrConnectWithoutdomainInput>
  }

  export type TalentLevelUpMaterialUncheckedCreateManyWithoutDomainInput = {
    create?: XOR<Enumerable<TalentLevelUpMaterialUncheckedCreateWithoutDomainInput>, Enumerable<TalentLevelUpMaterialCreateWithoutDomainInput>>
    connect?: Enumerable<TalentLevelUpMaterialWhereUniqueInput>
    connectOrCreate?: Enumerable<TalentLevelUpMaterialCreateOrConnectWithoutdomainInput>
  }

  export type WeaponAscensionMaterialUncheckedCreateManyWithoutDomainInput = {
    create?: XOR<Enumerable<WeaponAscensionMaterialUncheckedCreateWithoutDomainInput>, Enumerable<WeaponAscensionMaterialCreateWithoutDomainInput>>
    connect?: Enumerable<WeaponAscensionMaterialWhereUniqueInput>
    connectOrCreate?: Enumerable<WeaponAscensionMaterialCreateOrConnectWithoutdomainInput>
  }

  export type ArtifactUpdateManyWithoutDomainInput = {
    create?: XOR<Enumerable<ArtifactUncheckedCreateWithoutDomainInput>, Enumerable<ArtifactCreateWithoutDomainInput>>
    connect?: Enumerable<ArtifactWhereUniqueInput>
    set?: Enumerable<ArtifactWhereUniqueInput>
    disconnect?: Enumerable<ArtifactWhereUniqueInput>
    delete?: Enumerable<ArtifactWhereUniqueInput>
    update?: Enumerable<ArtifactUpdateWithWhereUniqueWithoutDomainInput>
    updateMany?: Enumerable<ArtifactUpdateManyWithWhereWithoutDomainInput>
    deleteMany?: Enumerable<ArtifactScalarWhereInput>
    upsert?: Enumerable<ArtifactUpsertWithWhereUniqueWithoutDomainInput>
    connectOrCreate?: Enumerable<ArtifactCreateOrConnectWithoutdomainInput>
  }

  export type RegionUpdateOneWithoutDomainsInput = {
    create?: XOR<RegionUncheckedCreateWithoutDomainsInput, RegionCreateWithoutDomainsInput>
    connect?: RegionWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<RegionUncheckedUpdateWithoutDomainsInput, RegionUpdateWithoutDomainsInput>
    upsert?: RegionUpsertWithoutDomainsInput
    connectOrCreate?: RegionCreateOrConnectWithoutdomainsInput
  }

  export type TalentLevelUpMaterialUpdateManyWithoutDomainInput = {
    create?: XOR<Enumerable<TalentLevelUpMaterialUncheckedCreateWithoutDomainInput>, Enumerable<TalentLevelUpMaterialCreateWithoutDomainInput>>
    connect?: Enumerable<TalentLevelUpMaterialWhereUniqueInput>
    set?: Enumerable<TalentLevelUpMaterialWhereUniqueInput>
    disconnect?: Enumerable<TalentLevelUpMaterialWhereUniqueInput>
    delete?: Enumerable<TalentLevelUpMaterialWhereUniqueInput>
    update?: Enumerable<TalentLevelUpMaterialUpdateWithWhereUniqueWithoutDomainInput>
    updateMany?: Enumerable<TalentLevelUpMaterialUpdateManyWithWhereWithoutDomainInput>
    deleteMany?: Enumerable<TalentLevelUpMaterialScalarWhereInput>
    upsert?: Enumerable<TalentLevelUpMaterialUpsertWithWhereUniqueWithoutDomainInput>
    connectOrCreate?: Enumerable<TalentLevelUpMaterialCreateOrConnectWithoutdomainInput>
  }

  export type WeaponAscensionMaterialUpdateManyWithoutDomainInput = {
    create?: XOR<Enumerable<WeaponAscensionMaterialUncheckedCreateWithoutDomainInput>, Enumerable<WeaponAscensionMaterialCreateWithoutDomainInput>>
    connect?: Enumerable<WeaponAscensionMaterialWhereUniqueInput>
    set?: Enumerable<WeaponAscensionMaterialWhereUniqueInput>
    disconnect?: Enumerable<WeaponAscensionMaterialWhereUniqueInput>
    delete?: Enumerable<WeaponAscensionMaterialWhereUniqueInput>
    update?: Enumerable<WeaponAscensionMaterialUpdateWithWhereUniqueWithoutDomainInput>
    updateMany?: Enumerable<WeaponAscensionMaterialUpdateManyWithWhereWithoutDomainInput>
    deleteMany?: Enumerable<WeaponAscensionMaterialScalarWhereInput>
    upsert?: Enumerable<WeaponAscensionMaterialUpsertWithWhereUniqueWithoutDomainInput>
    connectOrCreate?: Enumerable<WeaponAscensionMaterialCreateOrConnectWithoutdomainInput>
  }

  export type ArtifactUncheckedUpdateManyWithoutDomainInput = {
    create?: XOR<Enumerable<ArtifactUncheckedCreateWithoutDomainInput>, Enumerable<ArtifactCreateWithoutDomainInput>>
    connect?: Enumerable<ArtifactWhereUniqueInput>
    set?: Enumerable<ArtifactWhereUniqueInput>
    disconnect?: Enumerable<ArtifactWhereUniqueInput>
    delete?: Enumerable<ArtifactWhereUniqueInput>
    update?: Enumerable<ArtifactUpdateWithWhereUniqueWithoutDomainInput>
    updateMany?: Enumerable<ArtifactUpdateManyWithWhereWithoutDomainInput>
    deleteMany?: Enumerable<ArtifactScalarWhereInput>
    upsert?: Enumerable<ArtifactUpsertWithWhereUniqueWithoutDomainInput>
    connectOrCreate?: Enumerable<ArtifactCreateOrConnectWithoutdomainInput>
  }

  export type TalentLevelUpMaterialUncheckedUpdateManyWithoutDomainInput = {
    create?: XOR<Enumerable<TalentLevelUpMaterialUncheckedCreateWithoutDomainInput>, Enumerable<TalentLevelUpMaterialCreateWithoutDomainInput>>
    connect?: Enumerable<TalentLevelUpMaterialWhereUniqueInput>
    set?: Enumerable<TalentLevelUpMaterialWhereUniqueInput>
    disconnect?: Enumerable<TalentLevelUpMaterialWhereUniqueInput>
    delete?: Enumerable<TalentLevelUpMaterialWhereUniqueInput>
    update?: Enumerable<TalentLevelUpMaterialUpdateWithWhereUniqueWithoutDomainInput>
    updateMany?: Enumerable<TalentLevelUpMaterialUpdateManyWithWhereWithoutDomainInput>
    deleteMany?: Enumerable<TalentLevelUpMaterialScalarWhereInput>
    upsert?: Enumerable<TalentLevelUpMaterialUpsertWithWhereUniqueWithoutDomainInput>
    connectOrCreate?: Enumerable<TalentLevelUpMaterialCreateOrConnectWithoutdomainInput>
  }

  export type WeaponAscensionMaterialUncheckedUpdateManyWithoutDomainInput = {
    create?: XOR<Enumerable<WeaponAscensionMaterialUncheckedCreateWithoutDomainInput>, Enumerable<WeaponAscensionMaterialCreateWithoutDomainInput>>
    connect?: Enumerable<WeaponAscensionMaterialWhereUniqueInput>
    set?: Enumerable<WeaponAscensionMaterialWhereUniqueInput>
    disconnect?: Enumerable<WeaponAscensionMaterialWhereUniqueInput>
    delete?: Enumerable<WeaponAscensionMaterialWhereUniqueInput>
    update?: Enumerable<WeaponAscensionMaterialUpdateWithWhereUniqueWithoutDomainInput>
    updateMany?: Enumerable<WeaponAscensionMaterialUpdateManyWithWhereWithoutDomainInput>
    deleteMany?: Enumerable<WeaponAscensionMaterialScalarWhereInput>
    upsert?: Enumerable<WeaponAscensionMaterialUpsertWithWhereUniqueWithoutDomainInput>
    connectOrCreate?: Enumerable<WeaponAscensionMaterialCreateOrConnectWithoutdomainInput>
  }

  export type CharacterProfileCreateOneWithoutSpecialtyDishInput = {
    create?: XOR<CharacterProfileUncheckedCreateWithoutSpecialtyDishInput, CharacterProfileCreateWithoutSpecialtyDishInput>
    connect?: CharacterProfileWhereUniqueInput
    connectOrCreate?: CharacterProfileCreateOrConnectWithoutspecialtyDishInput
  }

  export type ConsumeableRecipeCreateOneWithoutConsumeableInput = {
    create?: XOR<ConsumeableRecipeUncheckedCreateWithoutConsumeableInput, ConsumeableRecipeCreateWithoutConsumeableInput>
    connect?: ConsumeableRecipeWhereUniqueInput
    connectOrCreate?: ConsumeableRecipeCreateOrConnectWithoutconsumeableInput
  }

  export type ConsumeableRecipeUncheckedCreateOneWithoutConsumeableInput = {
    create?: XOR<ConsumeableRecipeUncheckedCreateWithoutConsumeableInput, ConsumeableRecipeCreateWithoutConsumeableInput>
    connect?: ConsumeableRecipeWhereUniqueInput
    connectOrCreate?: ConsumeableRecipeCreateOrConnectWithoutconsumeableInput
  }

  export type EnumConsumableTypeFieldUpdateOperationsInput = {
    set?: ConsumableType
  }

  export type EnumFoodTypeFieldUpdateOperationsInput = {
    set?: FoodType
  }

  export type CharacterProfileUpdateOneWithoutSpecialtyDishInput = {
    create?: XOR<CharacterProfileUncheckedCreateWithoutSpecialtyDishInput, CharacterProfileCreateWithoutSpecialtyDishInput>
    connect?: CharacterProfileWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<CharacterProfileUncheckedUpdateWithoutSpecialtyDishInput, CharacterProfileUpdateWithoutSpecialtyDishInput>
    upsert?: CharacterProfileUpsertWithoutSpecialtyDishInput
    connectOrCreate?: CharacterProfileCreateOrConnectWithoutspecialtyDishInput
  }

  export type ConsumeableRecipeUpdateOneWithoutConsumeableInput = {
    create?: XOR<ConsumeableRecipeUncheckedCreateWithoutConsumeableInput, ConsumeableRecipeCreateWithoutConsumeableInput>
    connect?: ConsumeableRecipeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ConsumeableRecipeUncheckedUpdateWithoutConsumeableInput, ConsumeableRecipeUpdateWithoutConsumeableInput>
    upsert?: ConsumeableRecipeUpsertWithoutConsumeableInput
    connectOrCreate?: ConsumeableRecipeCreateOrConnectWithoutconsumeableInput
  }

  export type ConsumeableRecipeUncheckedUpdateOneWithoutConsumeableInput = {
    create?: XOR<ConsumeableRecipeUncheckedCreateWithoutConsumeableInput, ConsumeableRecipeCreateWithoutConsumeableInput>
    connect?: ConsumeableRecipeWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ConsumeableRecipeUncheckedUpdateWithoutConsumeableInput, ConsumeableRecipeUpdateWithoutConsumeableInput>
    upsert?: ConsumeableRecipeUpsertWithoutConsumeableInput
    connectOrCreate?: ConsumeableRecipeCreateOrConnectWithoutconsumeableInput
  }

  export type ConsumeableCreateOneWithoutRecipeInput = {
    create?: XOR<ConsumeableUncheckedCreateWithoutRecipeInput, ConsumeableCreateWithoutRecipeInput>
    connect?: ConsumeableWhereUniqueInput
    connectOrCreate?: ConsumeableCreateOrConnectWithoutrecipeInput
  }

  export type CraftingMaterialCreateManyWithoutRecipesInput = {
    create?: XOR<Enumerable<CraftingMaterialUncheckedCreateWithoutRecipesInput>, Enumerable<CraftingMaterialCreateWithoutRecipesInput>>
    connect?: Enumerable<CraftingMaterialWhereUniqueInput>
    connectOrCreate?: Enumerable<CraftingMaterialCreateOrConnectWithoutrecipesInput>
  }

  export type CookingMaterialCreateManyWithoutRecipesInput = {
    create?: XOR<Enumerable<CookingMaterialUncheckedCreateWithoutRecipesInput>, Enumerable<CookingMaterialCreateWithoutRecipesInput>>
    connect?: Enumerable<CookingMaterialWhereUniqueInput>
    connectOrCreate?: Enumerable<CookingMaterialCreateOrConnectWithoutrecipesInput>
  }

  export type ConsumeableUpdateOneWithoutRecipeInput = {
    create?: XOR<ConsumeableUncheckedCreateWithoutRecipeInput, ConsumeableCreateWithoutRecipeInput>
    connect?: ConsumeableWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ConsumeableUncheckedUpdateWithoutRecipeInput, ConsumeableUpdateWithoutRecipeInput>
    upsert?: ConsumeableUpsertWithoutRecipeInput
    connectOrCreate?: ConsumeableCreateOrConnectWithoutrecipeInput
  }

  export type CraftingMaterialUpdateManyWithoutRecipesInput = {
    create?: XOR<Enumerable<CraftingMaterialUncheckedCreateWithoutRecipesInput>, Enumerable<CraftingMaterialCreateWithoutRecipesInput>>
    connect?: Enumerable<CraftingMaterialWhereUniqueInput>
    set?: Enumerable<CraftingMaterialWhereUniqueInput>
    disconnect?: Enumerable<CraftingMaterialWhereUniqueInput>
    delete?: Enumerable<CraftingMaterialWhereUniqueInput>
    update?: Enumerable<CraftingMaterialUpdateWithWhereUniqueWithoutRecipesInput>
    updateMany?: Enumerable<CraftingMaterialUpdateManyWithWhereWithoutRecipesInput>
    deleteMany?: Enumerable<CraftingMaterialScalarWhereInput>
    upsert?: Enumerable<CraftingMaterialUpsertWithWhereUniqueWithoutRecipesInput>
    connectOrCreate?: Enumerable<CraftingMaterialCreateOrConnectWithoutrecipesInput>
  }

  export type CookingMaterialUpdateManyWithoutRecipesInput = {
    create?: XOR<Enumerable<CookingMaterialUncheckedCreateWithoutRecipesInput>, Enumerable<CookingMaterialCreateWithoutRecipesInput>>
    connect?: Enumerable<CookingMaterialWhereUniqueInput>
    set?: Enumerable<CookingMaterialWhereUniqueInput>
    disconnect?: Enumerable<CookingMaterialWhereUniqueInput>
    delete?: Enumerable<CookingMaterialWhereUniqueInput>
    update?: Enumerable<CookingMaterialUpdateWithWhereUniqueWithoutRecipesInput>
    updateMany?: Enumerable<CookingMaterialUpdateManyWithWhereWithoutRecipesInput>
    deleteMany?: Enumerable<CookingMaterialScalarWhereInput>
    upsert?: Enumerable<CookingMaterialUpsertWithWhereUniqueWithoutRecipesInput>
    connectOrCreate?: Enumerable<CookingMaterialCreateOrConnectWithoutrecipesInput>
  }

  export type CookingMaterialCreateOneWithoutProcessingRecipeInput = {
    create?: XOR<CookingMaterialUncheckedCreateWithoutProcessingRecipeInput, CookingMaterialCreateWithoutProcessingRecipeInput>
    connect?: CookingMaterialWhereUniqueInput
    connectOrCreate?: CookingMaterialCreateOrConnectWithoutprocessingRecipeInput
  }

  export type CookingMaterialUpdateOneWithoutProcessingRecipeInput = {
    create?: XOR<CookingMaterialUncheckedCreateWithoutProcessingRecipeInput, CookingMaterialCreateWithoutProcessingRecipeInput>
    connect?: CookingMaterialWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<CookingMaterialUncheckedUpdateWithoutProcessingRecipeInput, CookingMaterialUpdateWithoutProcessingRecipeInput>
    upsert?: CookingMaterialUpsertWithoutProcessingRecipeInput
    connectOrCreate?: CookingMaterialCreateOrConnectWithoutprocessingRecipeInput
  }

  export type WeaponEnhancementMaterialCreateManyWithoutRecipeUseInput = {
    create?: XOR<Enumerable<WeaponEnhancementMaterialUncheckedCreateWithoutRecipeUseInput>, Enumerable<WeaponEnhancementMaterialCreateWithoutRecipeUseInput>>
    connect?: Enumerable<WeaponEnhancementMaterialWhereUniqueInput>
    connectOrCreate?: Enumerable<WeaponEnhancementMaterialCreateOrConnectWithoutrecipeUseInput>
  }

  export type WeaponEnhancementMaterialCreateOneWithoutRecipeCreateInput = {
    create?: XOR<WeaponEnhancementMaterialUncheckedCreateWithoutRecipeCreateInput, WeaponEnhancementMaterialCreateWithoutRecipeCreateInput>
    connect?: WeaponEnhancementMaterialWhereUniqueInput
    connectOrCreate?: WeaponEnhancementMaterialCreateOrConnectWithoutrecipeCreateInput
  }

  export type WeaponCreateOneWithoutForgeRecipeInput = {
    create?: XOR<WeaponUncheckedCreateWithoutForgeRecipeInput, WeaponCreateWithoutForgeRecipeInput>
    connect?: WeaponWhereUniqueInput
    connectOrCreate?: WeaponCreateOrConnectWithoutforgeRecipeInput
  }

  export type WeaponEnhancementMaterialUncheckedCreateManyWithoutRecipeUseInput = {
    create?: XOR<Enumerable<WeaponEnhancementMaterialUncheckedCreateWithoutRecipeUseInput>, Enumerable<WeaponEnhancementMaterialCreateWithoutRecipeUseInput>>
    connect?: Enumerable<WeaponEnhancementMaterialWhereUniqueInput>
    connectOrCreate?: Enumerable<WeaponEnhancementMaterialCreateOrConnectWithoutrecipeUseInput>
  }

  export type WeaponEnhancementMaterialUpdateManyWithoutRecipeUseInput = {
    create?: XOR<Enumerable<WeaponEnhancementMaterialUncheckedCreateWithoutRecipeUseInput>, Enumerable<WeaponEnhancementMaterialCreateWithoutRecipeUseInput>>
    connect?: Enumerable<WeaponEnhancementMaterialWhereUniqueInput>
    set?: Enumerable<WeaponEnhancementMaterialWhereUniqueInput>
    disconnect?: Enumerable<WeaponEnhancementMaterialWhereUniqueInput>
    delete?: Enumerable<WeaponEnhancementMaterialWhereUniqueInput>
    update?: Enumerable<WeaponEnhancementMaterialUpdateWithWhereUniqueWithoutRecipeUseInput>
    updateMany?: Enumerable<WeaponEnhancementMaterialUpdateManyWithWhereWithoutRecipeUseInput>
    deleteMany?: Enumerable<WeaponEnhancementMaterialScalarWhereInput>
    upsert?: Enumerable<WeaponEnhancementMaterialUpsertWithWhereUniqueWithoutRecipeUseInput>
    connectOrCreate?: Enumerable<WeaponEnhancementMaterialCreateOrConnectWithoutrecipeUseInput>
  }

  export type WeaponEnhancementMaterialUpdateOneWithoutRecipeCreateInput = {
    create?: XOR<WeaponEnhancementMaterialUncheckedCreateWithoutRecipeCreateInput, WeaponEnhancementMaterialCreateWithoutRecipeCreateInput>
    connect?: WeaponEnhancementMaterialWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeCreateInput, WeaponEnhancementMaterialUpdateWithoutRecipeCreateInput>
    upsert?: WeaponEnhancementMaterialUpsertWithoutRecipeCreateInput
    connectOrCreate?: WeaponEnhancementMaterialCreateOrConnectWithoutrecipeCreateInput
  }

  export type WeaponUpdateOneWithoutForgeRecipeInput = {
    create?: XOR<WeaponUncheckedCreateWithoutForgeRecipeInput, WeaponCreateWithoutForgeRecipeInput>
    connect?: WeaponWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<WeaponUncheckedUpdateWithoutForgeRecipeInput, WeaponUpdateWithoutForgeRecipeInput>
    upsert?: WeaponUpsertWithoutForgeRecipeInput
    connectOrCreate?: WeaponCreateOrConnectWithoutforgeRecipeInput
  }

  export type WeaponEnhancementMaterialUncheckedUpdateManyWithoutRecipeUseInput = {
    create?: XOR<Enumerable<WeaponEnhancementMaterialUncheckedCreateWithoutRecipeUseInput>, Enumerable<WeaponEnhancementMaterialCreateWithoutRecipeUseInput>>
    connect?: Enumerable<WeaponEnhancementMaterialWhereUniqueInput>
    set?: Enumerable<WeaponEnhancementMaterialWhereUniqueInput>
    disconnect?: Enumerable<WeaponEnhancementMaterialWhereUniqueInput>
    delete?: Enumerable<WeaponEnhancementMaterialWhereUniqueInput>
    update?: Enumerable<WeaponEnhancementMaterialUpdateWithWhereUniqueWithoutRecipeUseInput>
    updateMany?: Enumerable<WeaponEnhancementMaterialUpdateManyWithWhereWithoutRecipeUseInput>
    deleteMany?: Enumerable<WeaponEnhancementMaterialScalarWhereInput>
    upsert?: Enumerable<WeaponEnhancementMaterialUpsertWithWhereUniqueWithoutRecipeUseInput>
    connectOrCreate?: Enumerable<WeaponEnhancementMaterialCreateOrConnectWithoutrecipeUseInput>
  }

  export type ArtifactCreateManyWithoutSetInput = {
    create?: XOR<Enumerable<ArtifactUncheckedCreateWithoutSetInput>, Enumerable<ArtifactCreateWithoutSetInput>>
    connect?: Enumerable<ArtifactWhereUniqueInput>
    connectOrCreate?: Enumerable<ArtifactCreateOrConnectWithoutsetInput>
  }

  export type ArtifactUncheckedCreateManyWithoutSetInput = {
    create?: XOR<Enumerable<ArtifactUncheckedCreateWithoutSetInput>, Enumerable<ArtifactCreateWithoutSetInput>>
    connect?: Enumerable<ArtifactWhereUniqueInput>
    connectOrCreate?: Enumerable<ArtifactCreateOrConnectWithoutsetInput>
  }

  export type ArtifactUpdateManyWithoutSetInput = {
    create?: XOR<Enumerable<ArtifactUncheckedCreateWithoutSetInput>, Enumerable<ArtifactCreateWithoutSetInput>>
    connect?: Enumerable<ArtifactWhereUniqueInput>
    set?: Enumerable<ArtifactWhereUniqueInput>
    disconnect?: Enumerable<ArtifactWhereUniqueInput>
    delete?: Enumerable<ArtifactWhereUniqueInput>
    update?: Enumerable<ArtifactUpdateWithWhereUniqueWithoutSetInput>
    updateMany?: Enumerable<ArtifactUpdateManyWithWhereWithoutSetInput>
    deleteMany?: Enumerable<ArtifactScalarWhereInput>
    upsert?: Enumerable<ArtifactUpsertWithWhereUniqueWithoutSetInput>
    connectOrCreate?: Enumerable<ArtifactCreateOrConnectWithoutsetInput>
  }

  export type ArtifactUncheckedUpdateManyWithoutSetInput = {
    create?: XOR<Enumerable<ArtifactUncheckedCreateWithoutSetInput>, Enumerable<ArtifactCreateWithoutSetInput>>
    connect?: Enumerable<ArtifactWhereUniqueInput>
    set?: Enumerable<ArtifactWhereUniqueInput>
    disconnect?: Enumerable<ArtifactWhereUniqueInput>
    delete?: Enumerable<ArtifactWhereUniqueInput>
    update?: Enumerable<ArtifactUpdateWithWhereUniqueWithoutSetInput>
    updateMany?: Enumerable<ArtifactUpdateManyWithWhereWithoutSetInput>
    deleteMany?: Enumerable<ArtifactScalarWhereInput>
    upsert?: Enumerable<ArtifactUpsertWithWhereUniqueWithoutSetInput>
    connectOrCreate?: Enumerable<ArtifactCreateOrConnectWithoutsetInput>
  }

  export type ArtifactSetCreateOneWithoutArtifactsInput = {
    create?: XOR<ArtifactSetUncheckedCreateWithoutArtifactsInput, ArtifactSetCreateWithoutArtifactsInput>
    connect?: ArtifactSetWhereUniqueInput
    connectOrCreate?: ArtifactSetCreateOrConnectWithoutartifactsInput
  }

  export type DomainCreateOneWithoutArtifactsInput = {
    create?: XOR<DomainUncheckedCreateWithoutArtifactsInput, DomainCreateWithoutArtifactsInput>
    connect?: DomainWhereUniqueInput
    connectOrCreate?: DomainCreateOrConnectWithoutartifactsInput
  }

  export type EnumArtifactTypeFieldUpdateOperationsInput = {
    set?: ArtifactType
  }

  export type ArtifactSetUpdateOneWithoutArtifactsInput = {
    create?: XOR<ArtifactSetUncheckedCreateWithoutArtifactsInput, ArtifactSetCreateWithoutArtifactsInput>
    connect?: ArtifactSetWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<ArtifactSetUncheckedUpdateWithoutArtifactsInput, ArtifactSetUpdateWithoutArtifactsInput>
    upsert?: ArtifactSetUpsertWithoutArtifactsInput
    connectOrCreate?: ArtifactSetCreateOrConnectWithoutartifactsInput
  }

  export type DomainUpdateOneWithoutArtifactsInput = {
    create?: XOR<DomainUncheckedCreateWithoutArtifactsInput, DomainCreateWithoutArtifactsInput>
    connect?: DomainWhereUniqueInput
    disconnect?: boolean
    delete?: boolean
    update?: XOR<DomainUncheckedUpdateWithoutArtifactsInput, DomainUpdateWithoutArtifactsInput>
    upsert?: DomainUpsertWithoutArtifactsInput
    connectOrCreate?: DomainCreateOrConnectWithoutartifactsInput
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedDateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedEnumRoleFilter = {
    equals?: Role
    in?: Enumerable<Role>
    notIn?: Enumerable<Role>
    not?: NestedEnumRoleFilter | Role
  }

  export type NestedBoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedEnumWeaponTypeNullableFilter = {
    equals?: WeaponType | null
    in?: Enumerable<WeaponType> | null
    notIn?: Enumerable<WeaponType> | null
    not?: NestedEnumWeaponTypeNullableFilter | WeaponType | null
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedEnumWeaponSecondaryStatTypeNullableFilter = {
    equals?: WeaponSecondaryStatType | null
    in?: Enumerable<WeaponSecondaryStatType> | null
    notIn?: Enumerable<WeaponSecondaryStatType> | null
    not?: NestedEnumWeaponSecondaryStatTypeNullableFilter | WeaponSecondaryStatType | null
  }

  export type NestedEnumWeaponTypeFilter = {
    equals?: WeaponType
    in?: Enumerable<WeaponType>
    notIn?: Enumerable<WeaponType>
    not?: NestedEnumWeaponTypeFilter | WeaponType
  }

  export type NestedEnumCommonAscensionMaterialGroupFilter = {
    equals?: CommonAscensionMaterialGroup
    in?: Enumerable<CommonAscensionMaterialGroup>
    notIn?: Enumerable<CommonAscensionMaterialGroup>
    not?: NestedEnumCommonAscensionMaterialGroupFilter | CommonAscensionMaterialGroup
  }

  export type NestedEnumWeaponAscensionMaterialGroupFilter = {
    equals?: WeaponAscensionMaterialGroup
    in?: Enumerable<WeaponAscensionMaterialGroup>
    notIn?: Enumerable<WeaponAscensionMaterialGroup>
    not?: NestedEnumWeaponAscensionMaterialGroupFilter | WeaponAscensionMaterialGroup
  }

  export type NestedEnumTalentLevelUpMaterialGroupFilter = {
    equals?: TalentLevelUpMaterialGroup
    in?: Enumerable<TalentLevelUpMaterialGroup>
    notIn?: Enumerable<TalentLevelUpMaterialGroup>
    not?: NestedEnumTalentLevelUpMaterialGroupFilter | TalentLevelUpMaterialGroup
  }

  export type NestedEnumConsumableTypeFilter = {
    equals?: ConsumableType
    in?: Enumerable<ConsumableType>
    notIn?: Enumerable<ConsumableType>
    not?: NestedEnumConsumableTypeFilter | ConsumableType
  }

  export type NestedEnumFoodTypeFilter = {
    equals?: FoodType
    in?: Enumerable<FoodType>
    notIn?: Enumerable<FoodType>
    not?: NestedEnumFoodTypeFilter | FoodType
  }

  export type NestedEnumArtifactTypeFilter = {
    equals?: ArtifactType
    in?: Enumerable<ArtifactType>
    notIn?: Enumerable<ArtifactType>
    not?: NestedEnumArtifactTypeFilter | ArtifactType
  }

  export type UserSecretCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    token?: string | null
    activated?: boolean
    activationToken?: string | null
    passwordAttempts?: number
    password: string
    firstFailedPasswordAttempt?: Date | string | null
    resetPasswordToken?: string | null
    resetPasswordTokenGenerated?: Date | string | null
    resetPasswordAttempts?: number
    firstFailedResetPasswordAttempt?: Date | string | null
  }

  export type UserSecretUncheckedCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    token?: string | null
    activated?: boolean
    activationToken?: string | null
    passwordAttempts?: number
    password: string
    firstFailedPasswordAttempt?: Date | string | null
    resetPasswordToken?: string | null
    resetPasswordTokenGenerated?: Date | string | null
    resetPasswordAttempts?: number
    firstFailedResetPasswordAttempt?: Date | string | null
  }

  export type UserSecretCreateOrConnectWithoutuserInput = {
    where: UserSecretWhereUniqueInput
    create: XOR<UserSecretUncheckedCreateWithoutUserInput, UserSecretCreateWithoutUserInput>
  }

  export type UserSecretUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    activated?: BoolFieldUpdateOperationsInput | boolean
    activationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordAttempts?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    firstFailedPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetPasswordTokenGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordAttempts?: IntFieldUpdateOperationsInput | number
    firstFailedResetPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserSecretUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    activated?: BoolFieldUpdateOperationsInput | boolean
    activationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordAttempts?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    firstFailedPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetPasswordTokenGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resetPasswordAttempts?: IntFieldUpdateOperationsInput | number
    firstFailedResetPasswordAttempt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserSecretUpsertWithoutUserInput = {
    update: XOR<UserSecretUncheckedUpdateWithoutUserInput, UserSecretUpdateWithoutUserInput>
    create: XOR<UserSecretUncheckedCreateWithoutUserInput, UserSecretCreateWithoutUserInput>
  }

  export type UserCreateWithoutUserSecretInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    email: string
    username?: string | null
    slimeColor?: string | null
    role?: Role
  }

  export type UserUncheckedCreateWithoutUserSecretInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    email: string
    username?: string | null
    slimeColor?: string | null
    role?: Role
  }

  export type UserCreateOrConnectWithoutuserSecretInput = {
    where: UserWhereUniqueInput
    create: XOR<UserUncheckedCreateWithoutUserSecretInput, UserCreateWithoutUserSecretInput>
  }

  export type UserUpdateWithoutUserSecretInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    slimeColor?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | Role
  }

  export type UserUncheckedUpdateWithoutUserSecretInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    slimeColor?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | Role
  }

  export type UserUpsertWithoutUserSecretInput = {
    update: XOR<UserUncheckedUpdateWithoutUserSecretInput, UserUpdateWithoutUserSecretInput>
    create: XOR<UserUncheckedCreateWithoutUserSecretInput, UserCreateWithoutUserSecretInput>
  }

  export type CharacterAscensionCreateWithoutCharacterInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    characterAscensionMaterial?: CharacterAscensionMaterialCreateOneWithoutCharacterAscensionsInput
    commonAscensionMaterials?: CommonAscensionMaterialCreateManyWithoutCharacterAscensionsInput
  }

  export type CharacterAscensionUncheckedCreateWithoutCharacterInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    characterAscensionMaterialId?: string | null
  }

  export type CharacterAscensionCreateOrConnectWithoutcharacterInput = {
    where: CharacterAscensionWhereUniqueInput
    create: XOR<CharacterAscensionUncheckedCreateWithoutCharacterInput, CharacterAscensionCreateWithoutCharacterInput>
  }

  export type CharacterProfileCreateWithoutCharacterInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    affiliation?: string | null
    birthday?: string | null
    constellation?: string | null
    images?: InputJsonValue | null
    overview?: string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    region?: RegionCreateOneWithoutCharacterProfilesInput
    specialtyDish?: ConsumeableCreateOneWithoutCharacterSpecialtyInput
    vision?: ElementCreateOneWithoutCharacterProfilesInput
  }

  export type CharacterProfileUncheckedCreateWithoutCharacterInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    affiliation?: string | null
    birthday?: string | null
    constellation?: string | null
    images?: InputJsonValue | null
    overview?: string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    regionId?: string | null
    elementId?: string | null
    specialtyDish?: ConsumeableUncheckedCreateOneWithoutCharacterSpecialtyInput
  }

  export type CharacterProfileCreateOrConnectWithoutcharacterInput = {
    where: CharacterProfileWhereUniqueInput
    create: XOR<CharacterProfileUncheckedCreateWithoutCharacterInput, CharacterProfileCreateWithoutCharacterInput>
  }

  export type ElementCreateWithoutCharactersInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    archon?: string | null
    statusEffect?: string | null
    theme?: string | null
    characterProfiles?: CharacterProfileCreateManyWithoutVisionInput
    region?: RegionCreateOneWithoutElementInput
  }

  export type ElementUncheckedCreateWithoutCharactersInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    archon?: string | null
    statusEffect?: string | null
    theme?: string | null
    regionId?: string | null
    characterProfiles?: CharacterProfileUncheckedCreateManyWithoutVisionInput
  }

  export type ElementCreateOrConnectWithoutcharactersInput = {
    where: ElementWhereUniqueInput
    create: XOR<ElementUncheckedCreateWithoutCharactersInput, ElementCreateWithoutCharactersInput>
  }

  export type TalentCreateWithoutCharacterInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    description?: string | null
    details?: InputJsonValue | null
    name?: string | null
    type?: string | null
    talentLevelUpMaterial?: TalentLevelUpMaterialCreateOneWithoutTalentsInput
  }

  export type TalentUncheckedCreateWithoutCharacterInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    description?: string | null
    details?: InputJsonValue | null
    name?: string | null
    type?: string | null
    talentLevelUpMaterialId?: string | null
  }

  export type TalentCreateOrConnectWithoutcharacterInput = {
    where: TalentWhereUniqueInput
    create: XOR<TalentUncheckedCreateWithoutCharacterInput, TalentCreateWithoutCharacterInput>
  }

  export type CharacterAscensionUpdateWithWhereUniqueWithoutCharacterInput = {
    where: CharacterAscensionWhereUniqueInput
    data: XOR<CharacterAscensionUncheckedUpdateWithoutCharacterInput, CharacterAscensionUpdateWithoutCharacterInput>
  }

  export type CharacterAscensionUpdateManyWithWhereWithoutCharacterInput = {
    where: CharacterAscensionScalarWhereInput
    data: XOR<CharacterAscensionUncheckedUpdateManyWithoutAscensionsInput, CharacterAscensionUpdateManyMutationInput>
  }

  export type CharacterAscensionScalarWhereInput = {
    AND?: Enumerable<CharacterAscensionScalarWhereInput>
    OR?: Enumerable<CharacterAscensionScalarWhereInput>
    NOT?: Enumerable<CharacterAscensionScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    level?: IntFilter | number
    maxLevel?: IntFilter | number
    recipe?: JsonNullableFilter
    characterId?: StringNullableFilter | string | null
    characterAscensionMaterialId?: StringNullableFilter | string | null
  }

  export type CharacterAscensionUpsertWithWhereUniqueWithoutCharacterInput = {
    where: CharacterAscensionWhereUniqueInput
    update: XOR<CharacterAscensionUncheckedUpdateWithoutCharacterInput, CharacterAscensionUpdateWithoutCharacterInput>
    create: XOR<CharacterAscensionUncheckedCreateWithoutCharacterInput, CharacterAscensionCreateWithoutCharacterInput>
  }

  export type CharacterProfileUpdateWithoutCharacterInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    region?: RegionUpdateOneWithoutCharacterProfilesInput
    specialtyDish?: ConsumeableUpdateOneWithoutCharacterSpecialtyInput
    vision?: ElementUpdateOneWithoutCharacterProfilesInput
  }

  export type CharacterProfileUncheckedUpdateWithoutCharacterInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    elementId?: NullableStringFieldUpdateOperationsInput | string | null
    specialtyDish?: ConsumeableUncheckedUpdateOneWithoutCharacterSpecialtyInput
  }

  export type CharacterProfileUpsertWithoutCharacterInput = {
    update: XOR<CharacterProfileUncheckedUpdateWithoutCharacterInput, CharacterProfileUpdateWithoutCharacterInput>
    create: XOR<CharacterProfileUncheckedCreateWithoutCharacterInput, CharacterProfileCreateWithoutCharacterInput>
  }

  export type ElementUpdateWithWhereUniqueWithoutCharactersInput = {
    where: ElementWhereUniqueInput
    data: XOR<ElementUncheckedUpdateWithoutCharactersInput, ElementUpdateWithoutCharactersInput>
  }

  export type ElementUpdateManyWithWhereWithoutCharactersInput = {
    where: ElementScalarWhereInput
    data: XOR<ElementUncheckedUpdateManyWithoutElementsInput, ElementUpdateManyMutationInput>
  }

  export type ElementScalarWhereInput = {
    AND?: Enumerable<ElementScalarWhereInput>
    OR?: Enumerable<ElementScalarWhereInput>
    NOT?: Enumerable<ElementScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    archon?: StringNullableFilter | string | null
    statusEffect?: StringNullableFilter | string | null
    theme?: StringNullableFilter | string | null
    regionId?: StringNullableFilter | string | null
  }

  export type ElementUpsertWithWhereUniqueWithoutCharactersInput = {
    where: ElementWhereUniqueInput
    update: XOR<ElementUncheckedUpdateWithoutCharactersInput, ElementUpdateWithoutCharactersInput>
    create: XOR<ElementUncheckedCreateWithoutCharactersInput, ElementCreateWithoutCharactersInput>
  }

  export type TalentUpdateWithWhereUniqueWithoutCharacterInput = {
    where: TalentWhereUniqueInput
    data: XOR<TalentUncheckedUpdateWithoutCharacterInput, TalentUpdateWithoutCharacterInput>
  }

  export type TalentUpdateManyWithWhereWithoutCharacterInput = {
    where: TalentScalarWhereInput
    data: XOR<TalentUncheckedUpdateManyWithoutTalentsInput, TalentUpdateManyMutationInput>
  }

  export type TalentScalarWhereInput = {
    AND?: Enumerable<TalentScalarWhereInput>
    OR?: Enumerable<TalentScalarWhereInput>
    NOT?: Enumerable<TalentScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    description?: StringNullableFilter | string | null
    details?: JsonNullableFilter
    name?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    characterId?: StringFilter | string
    talentLevelUpMaterialId?: StringNullableFilter | string | null
  }

  export type TalentUpsertWithWhereUniqueWithoutCharacterInput = {
    where: TalentWhereUniqueInput
    update: XOR<TalentUncheckedUpdateWithoutCharacterInput, TalentUpdateWithoutCharacterInput>
    create: XOR<TalentUncheckedCreateWithoutCharacterInput, TalentCreateWithoutCharacterInput>
  }

  export type CharacterCreateWithoutAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    constellations?: InputJsonValue | null
    icon?: string | null
    overview?: string | null
    rarity: number
    stats?: InputJsonValue | null
    weapon?: WeaponType | null
    characterProfile?: CharacterProfileCreateOneWithoutCharacterInput
    elements?: ElementCreateManyWithoutCharactersInput
    talents?: TalentCreateManyWithoutCharacterInput
  }

  export type CharacterUncheckedCreateWithoutAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    constellations?: InputJsonValue | null
    icon?: string | null
    overview?: string | null
    rarity: number
    stats?: InputJsonValue | null
    characterProfileId?: string | null
    weapon?: WeaponType | null
    talents?: TalentUncheckedCreateManyWithoutCharacterInput
  }

  export type CharacterCreateOrConnectWithoutascensionsInput = {
    where: CharacterWhereUniqueInput
    create: XOR<CharacterUncheckedCreateWithoutAscensionsInput, CharacterCreateWithoutAscensionsInput>
  }

  export type CharacterAscensionMaterialCreateWithoutCharacterAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    group: WeaponAscensionMaterialGroup
  }

  export type CharacterAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    group: WeaponAscensionMaterialGroup
  }

  export type CharacterAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput = {
    where: CharacterAscensionMaterialWhereUniqueInput
    create: XOR<CharacterAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput, CharacterAscensionMaterialCreateWithoutCharacterAscensionsInput>
  }

  export type CommonAscensionMaterialCreateWithoutCharacterAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    group: CommonAscensionMaterialGroup
    weaponAscensions?: WeaponAscensionCreateManyWithoutCommonAscensionMaterialsInput
  }

  export type CommonAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    group: CommonAscensionMaterialGroup
  }

  export type CommonAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput = {
    where: CommonAscensionMaterialWhereUniqueInput
    create: XOR<CommonAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput, CommonAscensionMaterialCreateWithoutCharacterAscensionsInput>
  }

  export type CharacterUpdateWithoutAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
    characterProfile?: CharacterProfileUpdateOneWithoutCharacterInput
    elements?: ElementUpdateManyWithoutCharactersInput
    talents?: TalentUpdateManyWithoutCharacterInput
  }

  export type CharacterUncheckedUpdateWithoutAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    characterProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
    talents?: TalentUncheckedUpdateManyWithoutCharacterInput
  }

  export type CharacterUpsertWithoutAscensionsInput = {
    update: XOR<CharacterUncheckedUpdateWithoutAscensionsInput, CharacterUpdateWithoutAscensionsInput>
    create: XOR<CharacterUncheckedCreateWithoutAscensionsInput, CharacterCreateWithoutAscensionsInput>
  }

  export type CharacterAscensionMaterialUpdateWithoutCharacterAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
  }

  export type CharacterAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
  }

  export type CharacterAscensionMaterialUpsertWithoutCharacterAscensionsInput = {
    update: XOR<CharacterAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput, CharacterAscensionMaterialUpdateWithoutCharacterAscensionsInput>
    create: XOR<CharacterAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput, CharacterAscensionMaterialCreateWithoutCharacterAscensionsInput>
  }

  export type CommonAscensionMaterialUpdateWithWhereUniqueWithoutCharacterAscensionsInput = {
    where: CommonAscensionMaterialWhereUniqueInput
    data: XOR<CommonAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput, CommonAscensionMaterialUpdateWithoutCharacterAscensionsInput>
  }

  export type CommonAscensionMaterialUpdateManyWithWhereWithoutCharacterAscensionsInput = {
    where: CommonAscensionMaterialScalarWhereInput
    data: XOR<CommonAscensionMaterialUncheckedUpdateManyWithoutCommonAscensionMaterialsInput, CommonAscensionMaterialUpdateManyMutationInput>
  }

  export type CommonAscensionMaterialScalarWhereInput = {
    AND?: Enumerable<CommonAscensionMaterialScalarWhereInput>
    OR?: Enumerable<CommonAscensionMaterialScalarWhereInput>
    NOT?: Enumerable<CommonAscensionMaterialScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    group?: EnumCommonAscensionMaterialGroupFilter | CommonAscensionMaterialGroup
  }

  export type CommonAscensionMaterialUpsertWithWhereUniqueWithoutCharacterAscensionsInput = {
    where: CommonAscensionMaterialWhereUniqueInput
    update: XOR<CommonAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput, CommonAscensionMaterialUpdateWithoutCharacterAscensionsInput>
    create: XOR<CommonAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput, CommonAscensionMaterialCreateWithoutCharacterAscensionsInput>
  }

  export type RegionCreateWithoutCharacterProfilesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    domains?: DomainCreateManyWithoutRegionInput
    element?: ElementCreateOneWithoutRegionInput
  }

  export type RegionUncheckedCreateWithoutCharacterProfilesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    domains?: DomainUncheckedCreateManyWithoutRegionInput
    element?: ElementUncheckedCreateOneWithoutRegionInput
  }

  export type RegionCreateOrConnectWithoutcharacterProfilesInput = {
    where: RegionWhereUniqueInput
    create: XOR<RegionUncheckedCreateWithoutCharacterProfilesInput, RegionCreateWithoutCharacterProfilesInput>
  }

  export type ConsumeableCreateWithoutCharacterSpecialtyInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    effect?: string | null
    image?: string | null
    rarity: number
    consumeableType: ConsumableType
    foodType: FoodType
    recipe?: ConsumeableRecipeCreateOneWithoutConsumeableInput
  }

  export type ConsumeableUncheckedCreateWithoutCharacterSpecialtyInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    effect?: string | null
    image?: string | null
    rarity: number
    consumeableType: ConsumableType
    foodType: FoodType
    recipe?: ConsumeableRecipeUncheckedCreateOneWithoutConsumeableInput
  }

  export type ConsumeableCreateOrConnectWithoutcharacterSpecialtyInput = {
    where: ConsumeableWhereUniqueInput
    create: XOR<ConsumeableUncheckedCreateWithoutCharacterSpecialtyInput, ConsumeableCreateWithoutCharacterSpecialtyInput>
  }

  export type ElementCreateWithoutCharacterProfilesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    archon?: string | null
    statusEffect?: string | null
    theme?: string | null
    characters?: CharacterCreateManyWithoutElementsInput
    region?: RegionCreateOneWithoutElementInput
  }

  export type ElementUncheckedCreateWithoutCharacterProfilesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    archon?: string | null
    statusEffect?: string | null
    theme?: string | null
    regionId?: string | null
  }

  export type ElementCreateOrConnectWithoutcharacterProfilesInput = {
    where: ElementWhereUniqueInput
    create: XOR<ElementUncheckedCreateWithoutCharacterProfilesInput, ElementCreateWithoutCharacterProfilesInput>
  }

  export type CharacterCreateWithoutCharacterProfileInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    constellations?: InputJsonValue | null
    icon?: string | null
    overview?: string | null
    rarity: number
    stats?: InputJsonValue | null
    weapon?: WeaponType | null
    ascensions?: CharacterAscensionCreateManyWithoutCharacterInput
    elements?: ElementCreateManyWithoutCharactersInput
    talents?: TalentCreateManyWithoutCharacterInput
  }

  export type CharacterUncheckedCreateWithoutCharacterProfileInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    constellations?: InputJsonValue | null
    icon?: string | null
    overview?: string | null
    rarity: number
    stats?: InputJsonValue | null
    weapon?: WeaponType | null
    ascensions?: CharacterAscensionUncheckedCreateManyWithoutCharacterInput
    talents?: TalentUncheckedCreateManyWithoutCharacterInput
  }

  export type CharacterCreateOrConnectWithoutcharacterProfileInput = {
    where: CharacterWhereUniqueInput
    create: XOR<CharacterUncheckedCreateWithoutCharacterProfileInput, CharacterCreateWithoutCharacterProfileInput>
  }

  export type RegionUpdateWithoutCharacterProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    domains?: DomainUpdateManyWithoutRegionInput
    element?: ElementUpdateOneWithoutRegionInput
  }

  export type RegionUncheckedUpdateWithoutCharacterProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    domains?: DomainUncheckedUpdateManyWithoutRegionInput
    element?: ElementUncheckedUpdateOneWithoutRegionInput
  }

  export type RegionUpsertWithoutCharacterProfilesInput = {
    update: XOR<RegionUncheckedUpdateWithoutCharacterProfilesInput, RegionUpdateWithoutCharacterProfilesInput>
    create: XOR<RegionUncheckedCreateWithoutCharacterProfilesInput, RegionCreateWithoutCharacterProfilesInput>
  }

  export type ConsumeableUpdateWithoutCharacterSpecialtyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    consumeableType?: EnumConsumableTypeFieldUpdateOperationsInput | ConsumableType
    foodType?: EnumFoodTypeFieldUpdateOperationsInput | FoodType
    recipe?: ConsumeableRecipeUpdateOneWithoutConsumeableInput
  }

  export type ConsumeableUncheckedUpdateWithoutCharacterSpecialtyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    consumeableType?: EnumConsumableTypeFieldUpdateOperationsInput | ConsumableType
    foodType?: EnumFoodTypeFieldUpdateOperationsInput | FoodType
    recipe?: ConsumeableRecipeUncheckedUpdateOneWithoutConsumeableInput
  }

  export type ConsumeableUpsertWithoutCharacterSpecialtyInput = {
    update: XOR<ConsumeableUncheckedUpdateWithoutCharacterSpecialtyInput, ConsumeableUpdateWithoutCharacterSpecialtyInput>
    create: XOR<ConsumeableUncheckedCreateWithoutCharacterSpecialtyInput, ConsumeableCreateWithoutCharacterSpecialtyInput>
  }

  export type ElementUpdateWithoutCharacterProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    characters?: CharacterUpdateManyWithoutElementsInput
    region?: RegionUpdateOneWithoutElementInput
  }

  export type ElementUncheckedUpdateWithoutCharacterProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ElementUpsertWithoutCharacterProfilesInput = {
    update: XOR<ElementUncheckedUpdateWithoutCharacterProfilesInput, ElementUpdateWithoutCharacterProfilesInput>
    create: XOR<ElementUncheckedCreateWithoutCharacterProfilesInput, ElementCreateWithoutCharacterProfilesInput>
  }

  export type CharacterUpdateWithoutCharacterProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
    ascensions?: CharacterAscensionUpdateManyWithoutCharacterInput
    elements?: ElementUpdateManyWithoutCharactersInput
    talents?: TalentUpdateManyWithoutCharacterInput
  }

  export type CharacterUncheckedUpdateWithoutCharacterProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
    ascensions?: CharacterAscensionUncheckedUpdateManyWithoutCharacterInput
    talents?: TalentUncheckedUpdateManyWithoutCharacterInput
  }

  export type CharacterUpsertWithoutCharacterProfileInput = {
    update: XOR<CharacterUncheckedUpdateWithoutCharacterProfileInput, CharacterUpdateWithoutCharacterProfileInput>
    create: XOR<CharacterUncheckedCreateWithoutCharacterProfileInput, CharacterCreateWithoutCharacterProfileInput>
  }

  export type CharacterCreateWithoutTalentsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    constellations?: InputJsonValue | null
    icon?: string | null
    overview?: string | null
    rarity: number
    stats?: InputJsonValue | null
    weapon?: WeaponType | null
    ascensions?: CharacterAscensionCreateManyWithoutCharacterInput
    characterProfile?: CharacterProfileCreateOneWithoutCharacterInput
    elements?: ElementCreateManyWithoutCharactersInput
  }

  export type CharacterUncheckedCreateWithoutTalentsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    constellations?: InputJsonValue | null
    icon?: string | null
    overview?: string | null
    rarity: number
    stats?: InputJsonValue | null
    characterProfileId?: string | null
    weapon?: WeaponType | null
    ascensions?: CharacterAscensionUncheckedCreateManyWithoutCharacterInput
  }

  export type CharacterCreateOrConnectWithouttalentsInput = {
    where: CharacterWhereUniqueInput
    create: XOR<CharacterUncheckedCreateWithoutTalentsInput, CharacterCreateWithoutTalentsInput>
  }

  export type TalentLevelUpMaterialCreateWithoutTalentsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: TalentLevelUpMaterialGroup
    domain?: DomainCreateOneWithoutTalentLevelUpMaterialsInput
  }

  export type TalentLevelUpMaterialUncheckedCreateWithoutTalentsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: TalentLevelUpMaterialGroup
    domainId?: string | null
  }

  export type TalentLevelUpMaterialCreateOrConnectWithouttalentsInput = {
    where: TalentLevelUpMaterialWhereUniqueInput
    create: XOR<TalentLevelUpMaterialUncheckedCreateWithoutTalentsInput, TalentLevelUpMaterialCreateWithoutTalentsInput>
  }

  export type CharacterUpdateWithoutTalentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
    ascensions?: CharacterAscensionUpdateManyWithoutCharacterInput
    characterProfile?: CharacterProfileUpdateOneWithoutCharacterInput
    elements?: ElementUpdateManyWithoutCharactersInput
  }

  export type CharacterUncheckedUpdateWithoutTalentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    characterProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
    ascensions?: CharacterAscensionUncheckedUpdateManyWithoutCharacterInput
  }

  export type CharacterUpsertWithoutTalentsInput = {
    update: XOR<CharacterUncheckedUpdateWithoutTalentsInput, CharacterUpdateWithoutTalentsInput>
    create: XOR<CharacterUncheckedCreateWithoutTalentsInput, CharacterCreateWithoutTalentsInput>
  }

  export type TalentLevelUpMaterialUpdateWithoutTalentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput | TalentLevelUpMaterialGroup
    domain?: DomainUpdateOneWithoutTalentLevelUpMaterialsInput
  }

  export type TalentLevelUpMaterialUncheckedUpdateWithoutTalentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput | TalentLevelUpMaterialGroup
    domainId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TalentLevelUpMaterialUpsertWithoutTalentsInput = {
    update: XOR<TalentLevelUpMaterialUncheckedUpdateWithoutTalentsInput, TalentLevelUpMaterialUpdateWithoutTalentsInput>
    create: XOR<TalentLevelUpMaterialUncheckedCreateWithoutTalentsInput, TalentLevelUpMaterialCreateWithoutTalentsInput>
  }

  export type CharacterCreateWithoutElementsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    constellations?: InputJsonValue | null
    icon?: string | null
    overview?: string | null
    rarity: number
    stats?: InputJsonValue | null
    weapon?: WeaponType | null
    ascensions?: CharacterAscensionCreateManyWithoutCharacterInput
    characterProfile?: CharacterProfileCreateOneWithoutCharacterInput
    talents?: TalentCreateManyWithoutCharacterInput
  }

  export type CharacterUncheckedCreateWithoutElementsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    constellations?: InputJsonValue | null
    icon?: string | null
    overview?: string | null
    rarity: number
    stats?: InputJsonValue | null
    characterProfileId?: string | null
    weapon?: WeaponType | null
    ascensions?: CharacterAscensionUncheckedCreateManyWithoutCharacterInput
    talents?: TalentUncheckedCreateManyWithoutCharacterInput
  }

  export type CharacterCreateOrConnectWithoutelementsInput = {
    where: CharacterWhereUniqueInput
    create: XOR<CharacterUncheckedCreateWithoutElementsInput, CharacterCreateWithoutElementsInput>
  }

  export type CharacterProfileCreateWithoutVisionInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    affiliation?: string | null
    birthday?: string | null
    constellation?: string | null
    images?: InputJsonValue | null
    overview?: string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    region?: RegionCreateOneWithoutCharacterProfilesInput
    specialtyDish?: ConsumeableCreateOneWithoutCharacterSpecialtyInput
    character?: CharacterCreateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUncheckedCreateWithoutVisionInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    affiliation?: string | null
    birthday?: string | null
    constellation?: string | null
    images?: InputJsonValue | null
    overview?: string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    regionId?: string | null
    specialtyDish?: ConsumeableUncheckedCreateOneWithoutCharacterSpecialtyInput
    character?: CharacterUncheckedCreateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileCreateOrConnectWithoutvisionInput = {
    where: CharacterProfileWhereUniqueInput
    create: XOR<CharacterProfileUncheckedCreateWithoutVisionInput, CharacterProfileCreateWithoutVisionInput>
  }

  export type RegionCreateWithoutElementInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    characterProfiles?: CharacterProfileCreateManyWithoutRegionInput
    domains?: DomainCreateManyWithoutRegionInput
  }

  export type RegionUncheckedCreateWithoutElementInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    characterProfiles?: CharacterProfileUncheckedCreateManyWithoutRegionInput
    domains?: DomainUncheckedCreateManyWithoutRegionInput
  }

  export type RegionCreateOrConnectWithoutelementInput = {
    where: RegionWhereUniqueInput
    create: XOR<RegionUncheckedCreateWithoutElementInput, RegionCreateWithoutElementInput>
  }

  export type CharacterUpdateWithWhereUniqueWithoutElementsInput = {
    where: CharacterWhereUniqueInput
    data: XOR<CharacterUncheckedUpdateWithoutElementsInput, CharacterUpdateWithoutElementsInput>
  }

  export type CharacterUpdateManyWithWhereWithoutElementsInput = {
    where: CharacterScalarWhereInput
    data: XOR<CharacterUncheckedUpdateManyWithoutCharactersInput, CharacterUpdateManyMutationInput>
  }

  export type CharacterScalarWhereInput = {
    AND?: Enumerable<CharacterScalarWhereInput>
    OR?: Enumerable<CharacterScalarWhereInput>
    NOT?: Enumerable<CharacterScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    constellations?: JsonNullableFilter
    icon?: StringNullableFilter | string | null
    overview?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    stats?: JsonNullableFilter
    characterProfileId?: StringNullableFilter | string | null
    weapon?: EnumWeaponTypeNullableFilter | WeaponType | null
  }

  export type CharacterUpsertWithWhereUniqueWithoutElementsInput = {
    where: CharacterWhereUniqueInput
    update: XOR<CharacterUncheckedUpdateWithoutElementsInput, CharacterUpdateWithoutElementsInput>
    create: XOR<CharacterUncheckedCreateWithoutElementsInput, CharacterCreateWithoutElementsInput>
  }

  export type CharacterProfileUpdateWithWhereUniqueWithoutVisionInput = {
    where: CharacterProfileWhereUniqueInput
    data: XOR<CharacterProfileUncheckedUpdateWithoutVisionInput, CharacterProfileUpdateWithoutVisionInput>
  }

  export type CharacterProfileUpdateManyWithWhereWithoutVisionInput = {
    where: CharacterProfileScalarWhereInput
    data: XOR<CharacterProfileUncheckedUpdateManyWithoutCharacterProfilesInput, CharacterProfileUpdateManyMutationInput>
  }

  export type CharacterProfileScalarWhereInput = {
    AND?: Enumerable<CharacterProfileScalarWhereInput>
    OR?: Enumerable<CharacterProfileScalarWhereInput>
    NOT?: Enumerable<CharacterProfileScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    affiliation?: StringNullableFilter | string | null
    birthday?: StringNullableFilter | string | null
    constellation?: StringNullableFilter | string | null
    images?: JsonNullableFilter
    overview?: StringNullableFilter | string | null
    story?: JsonNullableFilter
    voiceActor?: JsonNullableFilter
    voiceLines?: JsonNullableFilter
    regionId?: StringNullableFilter | string | null
    elementId?: StringNullableFilter | string | null
  }

  export type CharacterProfileUpsertWithWhereUniqueWithoutVisionInput = {
    where: CharacterProfileWhereUniqueInput
    update: XOR<CharacterProfileUncheckedUpdateWithoutVisionInput, CharacterProfileUpdateWithoutVisionInput>
    create: XOR<CharacterProfileUncheckedCreateWithoutVisionInput, CharacterProfileCreateWithoutVisionInput>
  }

  export type RegionUpdateWithoutElementInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    characterProfiles?: CharacterProfileUpdateManyWithoutRegionInput
    domains?: DomainUpdateManyWithoutRegionInput
  }

  export type RegionUncheckedUpdateWithoutElementInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    characterProfiles?: CharacterProfileUncheckedUpdateManyWithoutRegionInput
    domains?: DomainUncheckedUpdateManyWithoutRegionInput
  }

  export type RegionUpsertWithoutElementInput = {
    update: XOR<RegionUncheckedUpdateWithoutElementInput, RegionUpdateWithoutElementInput>
    create: XOR<RegionUncheckedCreateWithoutElementInput, RegionCreateWithoutElementInput>
  }

  export type CharacterProfileCreateWithoutRegionInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    affiliation?: string | null
    birthday?: string | null
    constellation?: string | null
    images?: InputJsonValue | null
    overview?: string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    specialtyDish?: ConsumeableCreateOneWithoutCharacterSpecialtyInput
    vision?: ElementCreateOneWithoutCharacterProfilesInput
    character?: CharacterCreateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUncheckedCreateWithoutRegionInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    affiliation?: string | null
    birthday?: string | null
    constellation?: string | null
    images?: InputJsonValue | null
    overview?: string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    elementId?: string | null
    specialtyDish?: ConsumeableUncheckedCreateOneWithoutCharacterSpecialtyInput
    character?: CharacterUncheckedCreateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileCreateOrConnectWithoutregionInput = {
    where: CharacterProfileWhereUniqueInput
    create: XOR<CharacterProfileUncheckedCreateWithoutRegionInput, CharacterProfileCreateWithoutRegionInput>
  }

  export type DomainCreateWithoutRegionInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    levels?: InputJsonValue | null
    type?: string | null
    artifacts?: ArtifactCreateManyWithoutDomainInput
    talentLevelUpMaterials?: TalentLevelUpMaterialCreateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialCreateManyWithoutDomainInput
  }

  export type DomainUncheckedCreateWithoutRegionInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    levels?: InputJsonValue | null
    type?: string | null
    artifacts?: ArtifactUncheckedCreateManyWithoutDomainInput
    talentLevelUpMaterials?: TalentLevelUpMaterialUncheckedCreateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUncheckedCreateManyWithoutDomainInput
  }

  export type DomainCreateOrConnectWithoutregionInput = {
    where: DomainWhereUniqueInput
    create: XOR<DomainUncheckedCreateWithoutRegionInput, DomainCreateWithoutRegionInput>
  }

  export type ElementCreateWithoutRegionInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    archon?: string | null
    statusEffect?: string | null
    theme?: string | null
    characters?: CharacterCreateManyWithoutElementsInput
    characterProfiles?: CharacterProfileCreateManyWithoutVisionInput
  }

  export type ElementUncheckedCreateWithoutRegionInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    archon?: string | null
    statusEffect?: string | null
    theme?: string | null
    characterProfiles?: CharacterProfileUncheckedCreateManyWithoutVisionInput
  }

  export type ElementCreateOrConnectWithoutregionInput = {
    where: ElementWhereUniqueInput
    create: XOR<ElementUncheckedCreateWithoutRegionInput, ElementCreateWithoutRegionInput>
  }

  export type CharacterProfileUpdateWithWhereUniqueWithoutRegionInput = {
    where: CharacterProfileWhereUniqueInput
    data: XOR<CharacterProfileUncheckedUpdateWithoutRegionInput, CharacterProfileUpdateWithoutRegionInput>
  }

  export type CharacterProfileUpdateManyWithWhereWithoutRegionInput = {
    where: CharacterProfileScalarWhereInput
    data: XOR<CharacterProfileUncheckedUpdateManyWithoutCharacterProfilesInput, CharacterProfileUpdateManyMutationInput>
  }

  export type CharacterProfileUpsertWithWhereUniqueWithoutRegionInput = {
    where: CharacterProfileWhereUniqueInput
    update: XOR<CharacterProfileUncheckedUpdateWithoutRegionInput, CharacterProfileUpdateWithoutRegionInput>
    create: XOR<CharacterProfileUncheckedCreateWithoutRegionInput, CharacterProfileCreateWithoutRegionInput>
  }

  export type DomainUpdateWithWhereUniqueWithoutRegionInput = {
    where: DomainWhereUniqueInput
    data: XOR<DomainUncheckedUpdateWithoutRegionInput, DomainUpdateWithoutRegionInput>
  }

  export type DomainUpdateManyWithWhereWithoutRegionInput = {
    where: DomainScalarWhereInput
    data: XOR<DomainUncheckedUpdateManyWithoutDomainsInput, DomainUpdateManyMutationInput>
  }

  export type DomainScalarWhereInput = {
    AND?: Enumerable<DomainScalarWhereInput>
    OR?: Enumerable<DomainScalarWhereInput>
    NOT?: Enumerable<DomainScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    levels?: JsonNullableFilter
    type?: StringNullableFilter | string | null
    regionId?: StringNullableFilter | string | null
  }

  export type DomainUpsertWithWhereUniqueWithoutRegionInput = {
    where: DomainWhereUniqueInput
    update: XOR<DomainUncheckedUpdateWithoutRegionInput, DomainUpdateWithoutRegionInput>
    create: XOR<DomainUncheckedCreateWithoutRegionInput, DomainCreateWithoutRegionInput>
  }

  export type ElementUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    characters?: CharacterUpdateManyWithoutElementsInput
    characterProfiles?: CharacterProfileUpdateManyWithoutVisionInput
  }

  export type ElementUncheckedUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    characterProfiles?: CharacterProfileUncheckedUpdateManyWithoutVisionInput
  }

  export type ElementUpsertWithoutRegionInput = {
    update: XOR<ElementUncheckedUpdateWithoutRegionInput, ElementUpdateWithoutRegionInput>
    create: XOR<ElementUncheckedCreateWithoutRegionInput, ElementCreateWithoutRegionInput>
  }

  export type WeaponAscensionCreateWithoutWeaponInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    commonAscensionMaterials?: CommonAscensionMaterialCreateManyWithoutWeaponAscensionsInput
    weaponAscensionMaterial?: WeaponAscensionMaterialCreateOneWithoutWeaponAscensionsInput
  }

  export type WeaponAscensionUncheckedCreateWithoutWeaponInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    weaponAscensionMaterialId?: string | null
  }

  export type WeaponAscensionCreateOrConnectWithoutweaponInput = {
    where: WeaponAscensionWhereUniqueInput
    create: XOR<WeaponAscensionUncheckedCreateWithoutWeaponInput, WeaponAscensionCreateWithoutWeaponInput>
  }

  export type ForgeRecipeCreateWithoutWeaponInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    craftingTime?: number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialCreateManyWithoutRecipeUseInput
    weaponEnhancementMaterial?: WeaponEnhancementMaterialCreateOneWithoutRecipeCreateInput
  }

  export type ForgeRecipeUncheckedCreateWithoutWeaponInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    craftingTime?: number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterialId?: string | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialUncheckedCreateManyWithoutRecipeUseInput
  }

  export type ForgeRecipeCreateOrConnectWithoutweaponInput = {
    where: ForgeRecipeWhereUniqueInput
    create: XOR<ForgeRecipeUncheckedCreateWithoutWeaponInput, ForgeRecipeCreateWithoutWeaponInput>
  }

  export type WeaponAscensionUpdateWithWhereUniqueWithoutWeaponInput = {
    where: WeaponAscensionWhereUniqueInput
    data: XOR<WeaponAscensionUncheckedUpdateWithoutWeaponInput, WeaponAscensionUpdateWithoutWeaponInput>
  }

  export type WeaponAscensionUpdateManyWithWhereWithoutWeaponInput = {
    where: WeaponAscensionScalarWhereInput
    data: XOR<WeaponAscensionUncheckedUpdateManyWithoutAscensionsInput, WeaponAscensionUpdateManyMutationInput>
  }

  export type WeaponAscensionScalarWhereInput = {
    AND?: Enumerable<WeaponAscensionScalarWhereInput>
    OR?: Enumerable<WeaponAscensionScalarWhereInput>
    NOT?: Enumerable<WeaponAscensionScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    level?: IntFilter | number
    maxLevel?: IntFilter | number
    recipe?: JsonNullableFilter
    weaponAscensionMaterialId?: StringNullableFilter | string | null
    weaponId?: StringNullableFilter | string | null
  }

  export type WeaponAscensionUpsertWithWhereUniqueWithoutWeaponInput = {
    where: WeaponAscensionWhereUniqueInput
    update: XOR<WeaponAscensionUncheckedUpdateWithoutWeaponInput, WeaponAscensionUpdateWithoutWeaponInput>
    create: XOR<WeaponAscensionUncheckedCreateWithoutWeaponInput, WeaponAscensionCreateWithoutWeaponInput>
  }

  export type ForgeRecipeUpdateWithoutWeaponInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    craftingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialUpdateManyWithoutRecipeUseInput
    weaponEnhancementMaterial?: WeaponEnhancementMaterialUpdateOneWithoutRecipeCreateInput
  }

  export type ForgeRecipeUncheckedUpdateWithoutWeaponInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    craftingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialUncheckedUpdateManyWithoutRecipeUseInput
  }

  export type ForgeRecipeUpsertWithoutWeaponInput = {
    update: XOR<ForgeRecipeUncheckedUpdateWithoutWeaponInput, ForgeRecipeUpdateWithoutWeaponInput>
    create: XOR<ForgeRecipeUncheckedCreateWithoutWeaponInput, ForgeRecipeCreateWithoutWeaponInput>
  }

  export type CommonAscensionMaterialCreateWithoutWeaponAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    group: CommonAscensionMaterialGroup
    characterAscensions?: CharacterAscensionCreateManyWithoutCommonAscensionMaterialsInput
  }

  export type CommonAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    group: CommonAscensionMaterialGroup
  }

  export type CommonAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput = {
    where: CommonAscensionMaterialWhereUniqueInput
    create: XOR<CommonAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput, CommonAscensionMaterialCreateWithoutWeaponAscensionsInput>
  }

  export type WeaponAscensionMaterialCreateWithoutWeaponAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: WeaponAscensionMaterialGroup
    domain?: DomainCreateOneWithoutWeaponAscensionMaterialsInput
  }

  export type WeaponAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: WeaponAscensionMaterialGroup
    domainId?: string | null
  }

  export type WeaponAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput = {
    where: WeaponAscensionMaterialWhereUniqueInput
    create: XOR<WeaponAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput, WeaponAscensionMaterialCreateWithoutWeaponAscensionsInput>
  }

  export type WeaponCreateWithoutAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    baseStats?: InputJsonValue | null
    description?: string | null
    image?: string | null
    lore?: string | null
    passive?: InputJsonValue | null
    rarity?: number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: WeaponSecondaryStatType | null
    type: WeaponType
    forgeRecipe?: ForgeRecipeCreateOneWithoutWeaponInput
  }

  export type WeaponUncheckedCreateWithoutAscensionsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    baseStats?: InputJsonValue | null
    description?: string | null
    image?: string | null
    lore?: string | null
    passive?: InputJsonValue | null
    rarity?: number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: WeaponSecondaryStatType | null
    type: WeaponType
    forgeRecipe?: ForgeRecipeUncheckedCreateOneWithoutWeaponInput
  }

  export type WeaponCreateOrConnectWithoutascensionsInput = {
    where: WeaponWhereUniqueInput
    create: XOR<WeaponUncheckedCreateWithoutAscensionsInput, WeaponCreateWithoutAscensionsInput>
  }

  export type CommonAscensionMaterialUpdateWithWhereUniqueWithoutWeaponAscensionsInput = {
    where: CommonAscensionMaterialWhereUniqueInput
    data: XOR<CommonAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput, CommonAscensionMaterialUpdateWithoutWeaponAscensionsInput>
  }

  export type CommonAscensionMaterialUpdateManyWithWhereWithoutWeaponAscensionsInput = {
    where: CommonAscensionMaterialScalarWhereInput
    data: XOR<CommonAscensionMaterialUncheckedUpdateManyWithoutCommonAscensionMaterialsInput, CommonAscensionMaterialUpdateManyMutationInput>
  }

  export type CommonAscensionMaterialUpsertWithWhereUniqueWithoutWeaponAscensionsInput = {
    where: CommonAscensionMaterialWhereUniqueInput
    update: XOR<CommonAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput, CommonAscensionMaterialUpdateWithoutWeaponAscensionsInput>
    create: XOR<CommonAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput, CommonAscensionMaterialCreateWithoutWeaponAscensionsInput>
  }

  export type WeaponAscensionMaterialUpdateWithoutWeaponAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
    domain?: DomainUpdateOneWithoutWeaponAscensionMaterialsInput
  }

  export type WeaponAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
    domainId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WeaponAscensionMaterialUpsertWithoutWeaponAscensionsInput = {
    update: XOR<WeaponAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput, WeaponAscensionMaterialUpdateWithoutWeaponAscensionsInput>
    create: XOR<WeaponAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput, WeaponAscensionMaterialCreateWithoutWeaponAscensionsInput>
  }

  export type WeaponUpdateWithoutAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    baseStats?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    passive?: InputJsonValue | null
    rarity?: NullableIntFieldUpdateOperationsInput | number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput | WeaponSecondaryStatType | null
    type?: EnumWeaponTypeFieldUpdateOperationsInput | WeaponType
    forgeRecipe?: ForgeRecipeUpdateOneWithoutWeaponInput
  }

  export type WeaponUncheckedUpdateWithoutAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    baseStats?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    passive?: InputJsonValue | null
    rarity?: NullableIntFieldUpdateOperationsInput | number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput | WeaponSecondaryStatType | null
    type?: EnumWeaponTypeFieldUpdateOperationsInput | WeaponType
    forgeRecipe?: ForgeRecipeUncheckedUpdateOneWithoutWeaponInput
  }

  export type WeaponUpsertWithoutAscensionsInput = {
    update: XOR<WeaponUncheckedUpdateWithoutAscensionsInput, WeaponUpdateWithoutAscensionsInput>
    create: XOR<WeaponUncheckedCreateWithoutAscensionsInput, WeaponCreateWithoutAscensionsInput>
  }

  export type CharacterAscensionCreateWithoutCommonAscensionMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    character?: CharacterCreateOneWithoutAscensionsInput
    characterAscensionMaterial?: CharacterAscensionMaterialCreateOneWithoutCharacterAscensionsInput
  }

  export type CharacterAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    characterId?: string | null
    characterAscensionMaterialId?: string | null
  }

  export type CharacterAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput = {
    where: CharacterAscensionWhereUniqueInput
    create: XOR<CharacterAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput, CharacterAscensionCreateWithoutCommonAscensionMaterialsInput>
  }

  export type WeaponAscensionCreateWithoutCommonAscensionMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    weaponAscensionMaterial?: WeaponAscensionMaterialCreateOneWithoutWeaponAscensionsInput
    weapon?: WeaponCreateOneWithoutAscensionsInput
  }

  export type WeaponAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    weaponAscensionMaterialId?: string | null
    weaponId?: string | null
  }

  export type WeaponAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput = {
    where: WeaponAscensionWhereUniqueInput
    create: XOR<WeaponAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput, WeaponAscensionCreateWithoutCommonAscensionMaterialsInput>
  }

  export type CharacterAscensionUpdateWithWhereUniqueWithoutCommonAscensionMaterialsInput = {
    where: CharacterAscensionWhereUniqueInput
    data: XOR<CharacterAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput, CharacterAscensionUpdateWithoutCommonAscensionMaterialsInput>
  }

  export type CharacterAscensionUpdateManyWithWhereWithoutCommonAscensionMaterialsInput = {
    where: CharacterAscensionScalarWhereInput
    data: XOR<CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionsInput, CharacterAscensionUpdateManyMutationInput>
  }

  export type CharacterAscensionUpsertWithWhereUniqueWithoutCommonAscensionMaterialsInput = {
    where: CharacterAscensionWhereUniqueInput
    update: XOR<CharacterAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput, CharacterAscensionUpdateWithoutCommonAscensionMaterialsInput>
    create: XOR<CharacterAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput, CharacterAscensionCreateWithoutCommonAscensionMaterialsInput>
  }

  export type WeaponAscensionUpdateWithWhereUniqueWithoutCommonAscensionMaterialsInput = {
    where: WeaponAscensionWhereUniqueInput
    data: XOR<WeaponAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput, WeaponAscensionUpdateWithoutCommonAscensionMaterialsInput>
  }

  export type WeaponAscensionUpdateManyWithWhereWithoutCommonAscensionMaterialsInput = {
    where: WeaponAscensionScalarWhereInput
    data: XOR<WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionsInput, WeaponAscensionUpdateManyMutationInput>
  }

  export type WeaponAscensionUpsertWithWhereUniqueWithoutCommonAscensionMaterialsInput = {
    where: WeaponAscensionWhereUniqueInput
    update: XOR<WeaponAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput, WeaponAscensionUpdateWithoutCommonAscensionMaterialsInput>
    create: XOR<WeaponAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput, WeaponAscensionCreateWithoutCommonAscensionMaterialsInput>
  }

  export type DomainCreateWithoutWeaponAscensionMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    levels?: InputJsonValue | null
    type?: string | null
    artifacts?: ArtifactCreateManyWithoutDomainInput
    region?: RegionCreateOneWithoutDomainsInput
    talentLevelUpMaterials?: TalentLevelUpMaterialCreateManyWithoutDomainInput
  }

  export type DomainUncheckedCreateWithoutWeaponAscensionMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    levels?: InputJsonValue | null
    type?: string | null
    regionId?: string | null
    artifacts?: ArtifactUncheckedCreateManyWithoutDomainInput
    talentLevelUpMaterials?: TalentLevelUpMaterialUncheckedCreateManyWithoutDomainInput
  }

  export type DomainCreateOrConnectWithoutweaponAscensionMaterialsInput = {
    where: DomainWhereUniqueInput
    create: XOR<DomainUncheckedCreateWithoutWeaponAscensionMaterialsInput, DomainCreateWithoutWeaponAscensionMaterialsInput>
  }

  export type WeaponAscensionCreateWithoutWeaponAscensionMaterialInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    commonAscensionMaterials?: CommonAscensionMaterialCreateManyWithoutWeaponAscensionsInput
    weapon?: WeaponCreateOneWithoutAscensionsInput
  }

  export type WeaponAscensionUncheckedCreateWithoutWeaponAscensionMaterialInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    weaponId?: string | null
  }

  export type WeaponAscensionCreateOrConnectWithoutweaponAscensionMaterialInput = {
    where: WeaponAscensionWhereUniqueInput
    create: XOR<WeaponAscensionUncheckedCreateWithoutWeaponAscensionMaterialInput, WeaponAscensionCreateWithoutWeaponAscensionMaterialInput>
  }

  export type DomainUpdateWithoutWeaponAscensionMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    artifacts?: ArtifactUpdateManyWithoutDomainInput
    region?: RegionUpdateOneWithoutDomainsInput
    talentLevelUpMaterials?: TalentLevelUpMaterialUpdateManyWithoutDomainInput
  }

  export type DomainUncheckedUpdateWithoutWeaponAscensionMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    artifacts?: ArtifactUncheckedUpdateManyWithoutDomainInput
    talentLevelUpMaterials?: TalentLevelUpMaterialUncheckedUpdateManyWithoutDomainInput
  }

  export type DomainUpsertWithoutWeaponAscensionMaterialsInput = {
    update: XOR<DomainUncheckedUpdateWithoutWeaponAscensionMaterialsInput, DomainUpdateWithoutWeaponAscensionMaterialsInput>
    create: XOR<DomainUncheckedCreateWithoutWeaponAscensionMaterialsInput, DomainCreateWithoutWeaponAscensionMaterialsInput>
  }

  export type WeaponAscensionUpdateWithWhereUniqueWithoutWeaponAscensionMaterialInput = {
    where: WeaponAscensionWhereUniqueInput
    data: XOR<WeaponAscensionUncheckedUpdateWithoutWeaponAscensionMaterialInput, WeaponAscensionUpdateWithoutWeaponAscensionMaterialInput>
  }

  export type WeaponAscensionUpdateManyWithWhereWithoutWeaponAscensionMaterialInput = {
    where: WeaponAscensionScalarWhereInput
    data: XOR<WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionsInput, WeaponAscensionUpdateManyMutationInput>
  }

  export type WeaponAscensionUpsertWithWhereUniqueWithoutWeaponAscensionMaterialInput = {
    where: WeaponAscensionWhereUniqueInput
    update: XOR<WeaponAscensionUncheckedUpdateWithoutWeaponAscensionMaterialInput, WeaponAscensionUpdateWithoutWeaponAscensionMaterialInput>
    create: XOR<WeaponAscensionUncheckedCreateWithoutWeaponAscensionMaterialInput, WeaponAscensionCreateWithoutWeaponAscensionMaterialInput>
  }

  export type ForgeRecipeCreateWithoutWeaponEnhancementMaterialInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    craftingTime?: number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialCreateManyWithoutRecipeUseInput
    weapon?: WeaponCreateOneWithoutForgeRecipeInput
  }

  export type ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    craftingTime?: number | null
    recipe?: InputJsonValue | null
    weaponId?: string | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialUncheckedCreateManyWithoutRecipeUseInput
  }

  export type ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialInput = {
    where: ForgeRecipeWhereUniqueInput
    create: XOR<ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialInput, ForgeRecipeCreateWithoutWeaponEnhancementMaterialInput>
  }

  export type ForgeRecipeCreateWithoutWeaponEnhancementMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    craftingTime?: number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterial?: WeaponEnhancementMaterialCreateOneWithoutRecipeCreateInput
    weapon?: WeaponCreateOneWithoutForgeRecipeInput
  }

  export type ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    craftingTime?: number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterialId?: string | null
    weaponId?: string | null
  }

  export type ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialsInput = {
    where: ForgeRecipeWhereUniqueInput
    create: XOR<ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialsInput, ForgeRecipeCreateWithoutWeaponEnhancementMaterialsInput>
  }

  export type ForgeRecipeUpdateWithoutWeaponEnhancementMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    craftingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialUpdateManyWithoutRecipeUseInput
    weapon?: WeaponUpdateOneWithoutForgeRecipeInput
  }

  export type ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    craftingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    weaponId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponEnhancementMaterials?: WeaponEnhancementMaterialUncheckedUpdateManyWithoutRecipeUseInput
  }

  export type ForgeRecipeUpsertWithoutWeaponEnhancementMaterialInput = {
    update: XOR<ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialInput, ForgeRecipeUpdateWithoutWeaponEnhancementMaterialInput>
    create: XOR<ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialInput, ForgeRecipeCreateWithoutWeaponEnhancementMaterialInput>
  }

  export type ForgeRecipeUpdateWithoutWeaponEnhancementMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    craftingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterial?: WeaponEnhancementMaterialUpdateOneWithoutRecipeCreateInput
    weapon?: WeaponUpdateOneWithoutForgeRecipeInput
  }

  export type ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    craftingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
    weaponEnhancementMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ForgeRecipeUpsertWithoutWeaponEnhancementMaterialsInput = {
    update: XOR<ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialsInput, ForgeRecipeUpdateWithoutWeaponEnhancementMaterialsInput>
    create: XOR<ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialsInput, ForgeRecipeCreateWithoutWeaponEnhancementMaterialsInput>
  }

  export type CharacterAscensionCreateWithoutCharacterAscensionMaterialInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    character?: CharacterCreateOneWithoutAscensionsInput
    commonAscensionMaterials?: CommonAscensionMaterialCreateManyWithoutCharacterAscensionsInput
  }

  export type CharacterAscensionUncheckedCreateWithoutCharacterAscensionMaterialInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    level: number
    maxLevel: number
    recipe?: InputJsonValue | null
    characterId?: string | null
  }

  export type CharacterAscensionCreateOrConnectWithoutcharacterAscensionMaterialInput = {
    where: CharacterAscensionWhereUniqueInput
    create: XOR<CharacterAscensionUncheckedCreateWithoutCharacterAscensionMaterialInput, CharacterAscensionCreateWithoutCharacterAscensionMaterialInput>
  }

  export type CharacterAscensionUpdateWithWhereUniqueWithoutCharacterAscensionMaterialInput = {
    where: CharacterAscensionWhereUniqueInput
    data: XOR<CharacterAscensionUncheckedUpdateWithoutCharacterAscensionMaterialInput, CharacterAscensionUpdateWithoutCharacterAscensionMaterialInput>
  }

  export type CharacterAscensionUpdateManyWithWhereWithoutCharacterAscensionMaterialInput = {
    where: CharacterAscensionScalarWhereInput
    data: XOR<CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionsInput, CharacterAscensionUpdateManyMutationInput>
  }

  export type CharacterAscensionUpsertWithWhereUniqueWithoutCharacterAscensionMaterialInput = {
    where: CharacterAscensionWhereUniqueInput
    update: XOR<CharacterAscensionUncheckedUpdateWithoutCharacterAscensionMaterialInput, CharacterAscensionUpdateWithoutCharacterAscensionMaterialInput>
    create: XOR<CharacterAscensionUncheckedCreateWithoutCharacterAscensionMaterialInput, CharacterAscensionCreateWithoutCharacterAscensionMaterialInput>
  }

  export type DomainCreateWithoutTalentLevelUpMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    levels?: InputJsonValue | null
    type?: string | null
    artifacts?: ArtifactCreateManyWithoutDomainInput
    region?: RegionCreateOneWithoutDomainsInput
    weaponAscensionMaterials?: WeaponAscensionMaterialCreateManyWithoutDomainInput
  }

  export type DomainUncheckedCreateWithoutTalentLevelUpMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    levels?: InputJsonValue | null
    type?: string | null
    regionId?: string | null
    artifacts?: ArtifactUncheckedCreateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUncheckedCreateManyWithoutDomainInput
  }

  export type DomainCreateOrConnectWithouttalentLevelUpMaterialsInput = {
    where: DomainWhereUniqueInput
    create: XOR<DomainUncheckedCreateWithoutTalentLevelUpMaterialsInput, DomainCreateWithoutTalentLevelUpMaterialsInput>
  }

  export type TalentCreateWithoutTalentLevelUpMaterialInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    description?: string | null
    details?: InputJsonValue | null
    name?: string | null
    type?: string | null
    character: CharacterCreateOneWithoutTalentsInput
  }

  export type TalentUncheckedCreateWithoutTalentLevelUpMaterialInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    description?: string | null
    details?: InputJsonValue | null
    name?: string | null
    type?: string | null
    characterId: string
  }

  export type TalentCreateOrConnectWithouttalentLevelUpMaterialInput = {
    where: TalentWhereUniqueInput
    create: XOR<TalentUncheckedCreateWithoutTalentLevelUpMaterialInput, TalentCreateWithoutTalentLevelUpMaterialInput>
  }

  export type DomainUpdateWithoutTalentLevelUpMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    artifacts?: ArtifactUpdateManyWithoutDomainInput
    region?: RegionUpdateOneWithoutDomainsInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUpdateManyWithoutDomainInput
  }

  export type DomainUncheckedUpdateWithoutTalentLevelUpMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    artifacts?: ArtifactUncheckedUpdateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUncheckedUpdateManyWithoutDomainInput
  }

  export type DomainUpsertWithoutTalentLevelUpMaterialsInput = {
    update: XOR<DomainUncheckedUpdateWithoutTalentLevelUpMaterialsInput, DomainUpdateWithoutTalentLevelUpMaterialsInput>
    create: XOR<DomainUncheckedCreateWithoutTalentLevelUpMaterialsInput, DomainCreateWithoutTalentLevelUpMaterialsInput>
  }

  export type TalentUpdateWithWhereUniqueWithoutTalentLevelUpMaterialInput = {
    where: TalentWhereUniqueInput
    data: XOR<TalentUncheckedUpdateWithoutTalentLevelUpMaterialInput, TalentUpdateWithoutTalentLevelUpMaterialInput>
  }

  export type TalentUpdateManyWithWhereWithoutTalentLevelUpMaterialInput = {
    where: TalentScalarWhereInput
    data: XOR<TalentUncheckedUpdateManyWithoutTalentsInput, TalentUpdateManyMutationInput>
  }

  export type TalentUpsertWithWhereUniqueWithoutTalentLevelUpMaterialInput = {
    where: TalentWhereUniqueInput
    update: XOR<TalentUncheckedUpdateWithoutTalentLevelUpMaterialInput, TalentUpdateWithoutTalentLevelUpMaterialInput>
    create: XOR<TalentUncheckedCreateWithoutTalentLevelUpMaterialInput, TalentCreateWithoutTalentLevelUpMaterialInput>
  }

  export type ConsumeableRecipeCreateWithoutCraftingMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    recipe?: InputJsonValue | null
    consumeable?: ConsumeableCreateOneWithoutRecipeInput
    cookingMaterials?: CookingMaterialCreateManyWithoutRecipesInput
  }

  export type ConsumeableRecipeUncheckedCreateWithoutCraftingMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    recipe?: InputJsonValue | null
    consumeableId?: string | null
  }

  export type ConsumeableRecipeCreateOrConnectWithoutcraftingMaterialsInput = {
    where: ConsumeableRecipeWhereUniqueInput
    create: XOR<ConsumeableRecipeUncheckedCreateWithoutCraftingMaterialsInput, ConsumeableRecipeCreateWithoutCraftingMaterialsInput>
  }

  export type ConsumeableRecipeUpdateWithWhereUniqueWithoutCraftingMaterialsInput = {
    where: ConsumeableRecipeWhereUniqueInput
    data: XOR<ConsumeableRecipeUncheckedUpdateWithoutCraftingMaterialsInput, ConsumeableRecipeUpdateWithoutCraftingMaterialsInput>
  }

  export type ConsumeableRecipeUpdateManyWithWhereWithoutCraftingMaterialsInput = {
    where: ConsumeableRecipeScalarWhereInput
    data: XOR<ConsumeableRecipeUncheckedUpdateManyWithoutRecipesInput, ConsumeableRecipeUpdateManyMutationInput>
  }

  export type ConsumeableRecipeScalarWhereInput = {
    AND?: Enumerable<ConsumeableRecipeScalarWhereInput>
    OR?: Enumerable<ConsumeableRecipeScalarWhereInput>
    NOT?: Enumerable<ConsumeableRecipeScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    recipe?: JsonNullableFilter
    consumeableId?: StringNullableFilter | string | null
  }

  export type ConsumeableRecipeUpsertWithWhereUniqueWithoutCraftingMaterialsInput = {
    where: ConsumeableRecipeWhereUniqueInput
    update: XOR<ConsumeableRecipeUncheckedUpdateWithoutCraftingMaterialsInput, ConsumeableRecipeUpdateWithoutCraftingMaterialsInput>
    create: XOR<ConsumeableRecipeUncheckedCreateWithoutCraftingMaterialsInput, ConsumeableRecipeCreateWithoutCraftingMaterialsInput>
  }

  export type ProcessRecipeCreateWithoutMaterialInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    processingTime?: number | null
    recipe?: InputJsonValue | null
  }

  export type ProcessRecipeUncheckedCreateWithoutMaterialInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    processingTime?: number | null
    recipe?: InputJsonValue | null
  }

  export type ProcessRecipeCreateOrConnectWithoutmaterialInput = {
    where: ProcessRecipeWhereUniqueInput
    create: XOR<ProcessRecipeUncheckedCreateWithoutMaterialInput, ProcessRecipeCreateWithoutMaterialInput>
  }

  export type ConsumeableRecipeCreateWithoutCookingMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    recipe?: InputJsonValue | null
    consumeable?: ConsumeableCreateOneWithoutRecipeInput
    craftingMaterials?: CraftingMaterialCreateManyWithoutRecipesInput
  }

  export type ConsumeableRecipeUncheckedCreateWithoutCookingMaterialsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    recipe?: InputJsonValue | null
    consumeableId?: string | null
  }

  export type ConsumeableRecipeCreateOrConnectWithoutcookingMaterialsInput = {
    where: ConsumeableRecipeWhereUniqueInput
    create: XOR<ConsumeableRecipeUncheckedCreateWithoutCookingMaterialsInput, ConsumeableRecipeCreateWithoutCookingMaterialsInput>
  }

  export type ProcessRecipeUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
  }

  export type ProcessRecipeUncheckedUpdateWithoutMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    recipe?: InputJsonValue | null
  }

  export type ProcessRecipeUpsertWithoutMaterialInput = {
    update: XOR<ProcessRecipeUncheckedUpdateWithoutMaterialInput, ProcessRecipeUpdateWithoutMaterialInput>
    create: XOR<ProcessRecipeUncheckedCreateWithoutMaterialInput, ProcessRecipeCreateWithoutMaterialInput>
  }

  export type ConsumeableRecipeUpdateWithWhereUniqueWithoutCookingMaterialsInput = {
    where: ConsumeableRecipeWhereUniqueInput
    data: XOR<ConsumeableRecipeUncheckedUpdateWithoutCookingMaterialsInput, ConsumeableRecipeUpdateWithoutCookingMaterialsInput>
  }

  export type ConsumeableRecipeUpdateManyWithWhereWithoutCookingMaterialsInput = {
    where: ConsumeableRecipeScalarWhereInput
    data: XOR<ConsumeableRecipeUncheckedUpdateManyWithoutRecipesInput, ConsumeableRecipeUpdateManyMutationInput>
  }

  export type ConsumeableRecipeUpsertWithWhereUniqueWithoutCookingMaterialsInput = {
    where: ConsumeableRecipeWhereUniqueInput
    update: XOR<ConsumeableRecipeUncheckedUpdateWithoutCookingMaterialsInput, ConsumeableRecipeUpdateWithoutCookingMaterialsInput>
    create: XOR<ConsumeableRecipeUncheckedCreateWithoutCookingMaterialsInput, ConsumeableRecipeCreateWithoutCookingMaterialsInput>
  }

  export type ArtifactCreateWithoutDomainInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    lore?: string | null
    minRarity: number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type: ArtifactType
    set?: ArtifactSetCreateOneWithoutArtifactsInput
  }

  export type ArtifactUncheckedCreateWithoutDomainInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    lore?: string | null
    minRarity: number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type: ArtifactType
    artifactSetId?: string | null
  }

  export type ArtifactCreateOrConnectWithoutdomainInput = {
    where: ArtifactWhereUniqueInput
    create: XOR<ArtifactUncheckedCreateWithoutDomainInput, ArtifactCreateWithoutDomainInput>
  }

  export type RegionCreateWithoutDomainsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    characterProfiles?: CharacterProfileCreateManyWithoutRegionInput
    element?: ElementCreateOneWithoutRegionInput
  }

  export type RegionUncheckedCreateWithoutDomainsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    characterProfiles?: CharacterProfileUncheckedCreateManyWithoutRegionInput
    element?: ElementUncheckedCreateOneWithoutRegionInput
  }

  export type RegionCreateOrConnectWithoutdomainsInput = {
    where: RegionWhereUniqueInput
    create: XOR<RegionUncheckedCreateWithoutDomainsInput, RegionCreateWithoutDomainsInput>
  }

  export type TalentLevelUpMaterialCreateWithoutDomainInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: TalentLevelUpMaterialGroup
    talents?: TalentCreateManyWithoutTalentLevelUpMaterialInput
  }

  export type TalentLevelUpMaterialUncheckedCreateWithoutDomainInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: TalentLevelUpMaterialGroup
    talents?: TalentUncheckedCreateManyWithoutTalentLevelUpMaterialInput
  }

  export type TalentLevelUpMaterialCreateOrConnectWithoutdomainInput = {
    where: TalentLevelUpMaterialWhereUniqueInput
    create: XOR<TalentLevelUpMaterialUncheckedCreateWithoutDomainInput, TalentLevelUpMaterialCreateWithoutDomainInput>
  }

  export type WeaponAscensionMaterialCreateWithoutDomainInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: WeaponAscensionMaterialGroup
    weaponAscensions?: WeaponAscensionCreateManyWithoutWeaponAscensionMaterialInput
  }

  export type WeaponAscensionMaterialUncheckedCreateWithoutDomainInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    availability?: InputJsonValue | null
    description?: string | null
    image?: string | null
    rarity: number
    group: WeaponAscensionMaterialGroup
    weaponAscensions?: WeaponAscensionUncheckedCreateManyWithoutWeaponAscensionMaterialInput
  }

  export type WeaponAscensionMaterialCreateOrConnectWithoutdomainInput = {
    where: WeaponAscensionMaterialWhereUniqueInput
    create: XOR<WeaponAscensionMaterialUncheckedCreateWithoutDomainInput, WeaponAscensionMaterialCreateWithoutDomainInput>
  }

  export type ArtifactUpdateWithWhereUniqueWithoutDomainInput = {
    where: ArtifactWhereUniqueInput
    data: XOR<ArtifactUncheckedUpdateWithoutDomainInput, ArtifactUpdateWithoutDomainInput>
  }

  export type ArtifactUpdateManyWithWhereWithoutDomainInput = {
    where: ArtifactScalarWhereInput
    data: XOR<ArtifactUncheckedUpdateManyWithoutArtifactsInput, ArtifactUpdateManyMutationInput>
  }

  export type ArtifactScalarWhereInput = {
    AND?: Enumerable<ArtifactScalarWhereInput>
    OR?: Enumerable<ArtifactScalarWhereInput>
    NOT?: Enumerable<ArtifactScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    lore?: StringNullableFilter | string | null
    minRarity?: IntFilter | number
    possibleMainStats?: JsonNullableFilter
    possibleSubStats?: JsonNullableFilter
    source?: JsonNullableFilter
    type?: EnumArtifactTypeFilter | ArtifactType
    artifactSetId?: StringNullableFilter | string | null
    domainId?: StringNullableFilter | string | null
  }

  export type ArtifactUpsertWithWhereUniqueWithoutDomainInput = {
    where: ArtifactWhereUniqueInput
    update: XOR<ArtifactUncheckedUpdateWithoutDomainInput, ArtifactUpdateWithoutDomainInput>
    create: XOR<ArtifactUncheckedCreateWithoutDomainInput, ArtifactCreateWithoutDomainInput>
  }

  export type RegionUpdateWithoutDomainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    characterProfiles?: CharacterProfileUpdateManyWithoutRegionInput
    element?: ElementUpdateOneWithoutRegionInput
  }

  export type RegionUncheckedUpdateWithoutDomainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    characterProfiles?: CharacterProfileUncheckedUpdateManyWithoutRegionInput
    element?: ElementUncheckedUpdateOneWithoutRegionInput
  }

  export type RegionUpsertWithoutDomainsInput = {
    update: XOR<RegionUncheckedUpdateWithoutDomainsInput, RegionUpdateWithoutDomainsInput>
    create: XOR<RegionUncheckedCreateWithoutDomainsInput, RegionCreateWithoutDomainsInput>
  }

  export type TalentLevelUpMaterialUpdateWithWhereUniqueWithoutDomainInput = {
    where: TalentLevelUpMaterialWhereUniqueInput
    data: XOR<TalentLevelUpMaterialUncheckedUpdateWithoutDomainInput, TalentLevelUpMaterialUpdateWithoutDomainInput>
  }

  export type TalentLevelUpMaterialUpdateManyWithWhereWithoutDomainInput = {
    where: TalentLevelUpMaterialScalarWhereInput
    data: XOR<TalentLevelUpMaterialUncheckedUpdateManyWithoutTalentLevelUpMaterialsInput, TalentLevelUpMaterialUpdateManyMutationInput>
  }

  export type TalentLevelUpMaterialScalarWhereInput = {
    AND?: Enumerable<TalentLevelUpMaterialScalarWhereInput>
    OR?: Enumerable<TalentLevelUpMaterialScalarWhereInput>
    NOT?: Enumerable<TalentLevelUpMaterialScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    availability?: JsonNullableFilter
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    group?: EnumTalentLevelUpMaterialGroupFilter | TalentLevelUpMaterialGroup
    domainId?: StringNullableFilter | string | null
  }

  export type TalentLevelUpMaterialUpsertWithWhereUniqueWithoutDomainInput = {
    where: TalentLevelUpMaterialWhereUniqueInput
    update: XOR<TalentLevelUpMaterialUncheckedUpdateWithoutDomainInput, TalentLevelUpMaterialUpdateWithoutDomainInput>
    create: XOR<TalentLevelUpMaterialUncheckedCreateWithoutDomainInput, TalentLevelUpMaterialCreateWithoutDomainInput>
  }

  export type WeaponAscensionMaterialUpdateWithWhereUniqueWithoutDomainInput = {
    where: WeaponAscensionMaterialWhereUniqueInput
    data: XOR<WeaponAscensionMaterialUncheckedUpdateWithoutDomainInput, WeaponAscensionMaterialUpdateWithoutDomainInput>
  }

  export type WeaponAscensionMaterialUpdateManyWithWhereWithoutDomainInput = {
    where: WeaponAscensionMaterialScalarWhereInput
    data: XOR<WeaponAscensionMaterialUncheckedUpdateManyWithoutWeaponAscensionMaterialsInput, WeaponAscensionMaterialUpdateManyMutationInput>
  }

  export type WeaponAscensionMaterialScalarWhereInput = {
    AND?: Enumerable<WeaponAscensionMaterialScalarWhereInput>
    OR?: Enumerable<WeaponAscensionMaterialScalarWhereInput>
    NOT?: Enumerable<WeaponAscensionMaterialScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    availability?: JsonNullableFilter
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    group?: EnumWeaponAscensionMaterialGroupFilter | WeaponAscensionMaterialGroup
    domainId?: StringNullableFilter | string | null
  }

  export type WeaponAscensionMaterialUpsertWithWhereUniqueWithoutDomainInput = {
    where: WeaponAscensionMaterialWhereUniqueInput
    update: XOR<WeaponAscensionMaterialUncheckedUpdateWithoutDomainInput, WeaponAscensionMaterialUpdateWithoutDomainInput>
    create: XOR<WeaponAscensionMaterialUncheckedCreateWithoutDomainInput, WeaponAscensionMaterialCreateWithoutDomainInput>
  }

  export type CharacterProfileCreateWithoutSpecialtyDishInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    affiliation?: string | null
    birthday?: string | null
    constellation?: string | null
    images?: InputJsonValue | null
    overview?: string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    region?: RegionCreateOneWithoutCharacterProfilesInput
    vision?: ElementCreateOneWithoutCharacterProfilesInput
    character?: CharacterCreateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUncheckedCreateWithoutSpecialtyDishInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    affiliation?: string | null
    birthday?: string | null
    constellation?: string | null
    images?: InputJsonValue | null
    overview?: string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    regionId?: string | null
    elementId?: string | null
    character?: CharacterUncheckedCreateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileCreateOrConnectWithoutspecialtyDishInput = {
    where: CharacterProfileWhereUniqueInput
    create: XOR<CharacterProfileUncheckedCreateWithoutSpecialtyDishInput, CharacterProfileCreateWithoutSpecialtyDishInput>
  }

  export type ConsumeableRecipeCreateWithoutConsumeableInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    recipe?: InputJsonValue | null
    craftingMaterials?: CraftingMaterialCreateManyWithoutRecipesInput
    cookingMaterials?: CookingMaterialCreateManyWithoutRecipesInput
  }

  export type ConsumeableRecipeUncheckedCreateWithoutConsumeableInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    recipe?: InputJsonValue | null
  }

  export type ConsumeableRecipeCreateOrConnectWithoutconsumeableInput = {
    where: ConsumeableRecipeWhereUniqueInput
    create: XOR<ConsumeableRecipeUncheckedCreateWithoutConsumeableInput, ConsumeableRecipeCreateWithoutConsumeableInput>
  }

  export type CharacterProfileUpdateWithoutSpecialtyDishInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    region?: RegionUpdateOneWithoutCharacterProfilesInput
    vision?: ElementUpdateOneWithoutCharacterProfilesInput
    character?: CharacterUpdateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUncheckedUpdateWithoutSpecialtyDishInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    elementId?: NullableStringFieldUpdateOperationsInput | string | null
    character?: CharacterUncheckedUpdateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUpsertWithoutSpecialtyDishInput = {
    update: XOR<CharacterProfileUncheckedUpdateWithoutSpecialtyDishInput, CharacterProfileUpdateWithoutSpecialtyDishInput>
    create: XOR<CharacterProfileUncheckedCreateWithoutSpecialtyDishInput, CharacterProfileCreateWithoutSpecialtyDishInput>
  }

  export type ConsumeableRecipeUpdateWithoutConsumeableInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
    craftingMaterials?: CraftingMaterialUpdateManyWithoutRecipesInput
    cookingMaterials?: CookingMaterialUpdateManyWithoutRecipesInput
  }

  export type ConsumeableRecipeUncheckedUpdateWithoutConsumeableInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
  }

  export type ConsumeableRecipeUpsertWithoutConsumeableInput = {
    update: XOR<ConsumeableRecipeUncheckedUpdateWithoutConsumeableInput, ConsumeableRecipeUpdateWithoutConsumeableInput>
    create: XOR<ConsumeableRecipeUncheckedCreateWithoutConsumeableInput, ConsumeableRecipeCreateWithoutConsumeableInput>
  }

  export type ConsumeableCreateWithoutRecipeInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    effect?: string | null
    image?: string | null
    rarity: number
    consumeableType: ConsumableType
    foodType: FoodType
    characterSpecialty?: CharacterProfileCreateOneWithoutSpecialtyDishInput
  }

  export type ConsumeableUncheckedCreateWithoutRecipeInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    effect?: string | null
    image?: string | null
    rarity: number
    consumeableType: ConsumableType
    foodType: FoodType
    characterProfileId?: string | null
  }

  export type ConsumeableCreateOrConnectWithoutrecipeInput = {
    where: ConsumeableWhereUniqueInput
    create: XOR<ConsumeableUncheckedCreateWithoutRecipeInput, ConsumeableCreateWithoutRecipeInput>
  }

  export type CraftingMaterialCreateWithoutRecipesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
  }

  export type CraftingMaterialUncheckedCreateWithoutRecipesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
  }

  export type CraftingMaterialCreateOrConnectWithoutrecipesInput = {
    where: CraftingMaterialWhereUniqueInput
    create: XOR<CraftingMaterialUncheckedCreateWithoutRecipesInput, CraftingMaterialCreateWithoutRecipesInput>
  }

  export type CookingMaterialCreateWithoutRecipesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    processingRecipe?: ProcessRecipeCreateOneWithoutMaterialInput
  }

  export type CookingMaterialUncheckedCreateWithoutRecipesInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    processingRecipe?: ProcessRecipeUncheckedCreateOneWithoutMaterialInput
  }

  export type CookingMaterialCreateOrConnectWithoutrecipesInput = {
    where: CookingMaterialWhereUniqueInput
    create: XOR<CookingMaterialUncheckedCreateWithoutRecipesInput, CookingMaterialCreateWithoutRecipesInput>
  }

  export type ConsumeableUpdateWithoutRecipeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    consumeableType?: EnumConsumableTypeFieldUpdateOperationsInput | ConsumableType
    foodType?: EnumFoodTypeFieldUpdateOperationsInput | FoodType
    characterSpecialty?: CharacterProfileUpdateOneWithoutSpecialtyDishInput
  }

  export type ConsumeableUncheckedUpdateWithoutRecipeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    effect?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    consumeableType?: EnumConsumableTypeFieldUpdateOperationsInput | ConsumableType
    foodType?: EnumFoodTypeFieldUpdateOperationsInput | FoodType
    characterProfileId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConsumeableUpsertWithoutRecipeInput = {
    update: XOR<ConsumeableUncheckedUpdateWithoutRecipeInput, ConsumeableUpdateWithoutRecipeInput>
    create: XOR<ConsumeableUncheckedCreateWithoutRecipeInput, ConsumeableCreateWithoutRecipeInput>
  }

  export type CraftingMaterialUpdateWithWhereUniqueWithoutRecipesInput = {
    where: CraftingMaterialWhereUniqueInput
    data: XOR<CraftingMaterialUncheckedUpdateWithoutRecipesInput, CraftingMaterialUpdateWithoutRecipesInput>
  }

  export type CraftingMaterialUpdateManyWithWhereWithoutRecipesInput = {
    where: CraftingMaterialScalarWhereInput
    data: XOR<CraftingMaterialUncheckedUpdateManyWithoutCraftingMaterialsInput, CraftingMaterialUpdateManyMutationInput>
  }

  export type CraftingMaterialScalarWhereInput = {
    AND?: Enumerable<CraftingMaterialScalarWhereInput>
    OR?: Enumerable<CraftingMaterialScalarWhereInput>
    NOT?: Enumerable<CraftingMaterialScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    source?: JsonNullableFilter
  }

  export type CraftingMaterialUpsertWithWhereUniqueWithoutRecipesInput = {
    where: CraftingMaterialWhereUniqueInput
    update: XOR<CraftingMaterialUncheckedUpdateWithoutRecipesInput, CraftingMaterialUpdateWithoutRecipesInput>
    create: XOR<CraftingMaterialUncheckedCreateWithoutRecipesInput, CraftingMaterialCreateWithoutRecipesInput>
  }

  export type CookingMaterialUpdateWithWhereUniqueWithoutRecipesInput = {
    where: CookingMaterialWhereUniqueInput
    data: XOR<CookingMaterialUncheckedUpdateWithoutRecipesInput, CookingMaterialUpdateWithoutRecipesInput>
  }

  export type CookingMaterialUpdateManyWithWhereWithoutRecipesInput = {
    where: CookingMaterialScalarWhereInput
    data: XOR<CookingMaterialUncheckedUpdateManyWithoutCookingMaterialsInput, CookingMaterialUpdateManyMutationInput>
  }

  export type CookingMaterialScalarWhereInput = {
    AND?: Enumerable<CookingMaterialScalarWhereInput>
    OR?: Enumerable<CookingMaterialScalarWhereInput>
    NOT?: Enumerable<CookingMaterialScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    source?: JsonNullableFilter
  }

  export type CookingMaterialUpsertWithWhereUniqueWithoutRecipesInput = {
    where: CookingMaterialWhereUniqueInput
    update: XOR<CookingMaterialUncheckedUpdateWithoutRecipesInput, CookingMaterialUpdateWithoutRecipesInput>
    create: XOR<CookingMaterialUncheckedCreateWithoutRecipesInput, CookingMaterialCreateWithoutRecipesInput>
  }

  export type CookingMaterialCreateWithoutProcessingRecipeInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    recipes?: ConsumeableRecipeCreateManyWithoutCookingMaterialsInput
  }

  export type CookingMaterialUncheckedCreateWithoutProcessingRecipeInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
  }

  export type CookingMaterialCreateOrConnectWithoutprocessingRecipeInput = {
    where: CookingMaterialWhereUniqueInput
    create: XOR<CookingMaterialUncheckedCreateWithoutProcessingRecipeInput, CookingMaterialCreateWithoutProcessingRecipeInput>
  }

  export type CookingMaterialUpdateWithoutProcessingRecipeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    recipes?: ConsumeableRecipeUpdateManyWithoutCookingMaterialsInput
  }

  export type CookingMaterialUncheckedUpdateWithoutProcessingRecipeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CookingMaterialUpsertWithoutProcessingRecipeInput = {
    update: XOR<CookingMaterialUncheckedUpdateWithoutProcessingRecipeInput, CookingMaterialUpdateWithoutProcessingRecipeInput>
    create: XOR<CookingMaterialUncheckedCreateWithoutProcessingRecipeInput, CookingMaterialCreateWithoutProcessingRecipeInput>
  }

  export type WeaponEnhancementMaterialCreateWithoutRecipeUseInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    recipeCreate?: ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialInput
  }

  export type WeaponEnhancementMaterialUncheckedCreateWithoutRecipeUseInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    recipeCreate?: ForgeRecipeUncheckedCreateOneWithoutWeaponEnhancementMaterialInput
  }

  export type WeaponEnhancementMaterialCreateOrConnectWithoutrecipeUseInput = {
    where: WeaponEnhancementMaterialWhereUniqueInput
    create: XOR<WeaponEnhancementMaterialUncheckedCreateWithoutRecipeUseInput, WeaponEnhancementMaterialCreateWithoutRecipeUseInput>
  }

  export type WeaponEnhancementMaterialCreateWithoutRecipeCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    recipeUse?: ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialsInput
  }

  export type WeaponEnhancementMaterialUncheckedCreateWithoutRecipeCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    image?: string | null
    rarity: number
    source?: InputJsonValue | null
    recipeUseId?: string | null
  }

  export type WeaponEnhancementMaterialCreateOrConnectWithoutrecipeCreateInput = {
    where: WeaponEnhancementMaterialWhereUniqueInput
    create: XOR<WeaponEnhancementMaterialUncheckedCreateWithoutRecipeCreateInput, WeaponEnhancementMaterialCreateWithoutRecipeCreateInput>
  }

  export type WeaponCreateWithoutForgeRecipeInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    baseStats?: InputJsonValue | null
    description?: string | null
    image?: string | null
    lore?: string | null
    passive?: InputJsonValue | null
    rarity?: number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: WeaponSecondaryStatType | null
    type: WeaponType
    ascensions?: WeaponAscensionCreateManyWithoutWeaponInput
  }

  export type WeaponUncheckedCreateWithoutForgeRecipeInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    baseStats?: InputJsonValue | null
    description?: string | null
    image?: string | null
    lore?: string | null
    passive?: InputJsonValue | null
    rarity?: number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: WeaponSecondaryStatType | null
    type: WeaponType
    ascensions?: WeaponAscensionUncheckedCreateManyWithoutWeaponInput
  }

  export type WeaponCreateOrConnectWithoutforgeRecipeInput = {
    where: WeaponWhereUniqueInput
    create: XOR<WeaponUncheckedCreateWithoutForgeRecipeInput, WeaponCreateWithoutForgeRecipeInput>
  }

  export type WeaponEnhancementMaterialUpdateWithWhereUniqueWithoutRecipeUseInput = {
    where: WeaponEnhancementMaterialWhereUniqueInput
    data: XOR<WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeUseInput, WeaponEnhancementMaterialUpdateWithoutRecipeUseInput>
  }

  export type WeaponEnhancementMaterialUpdateManyWithWhereWithoutRecipeUseInput = {
    where: WeaponEnhancementMaterialScalarWhereInput
    data: XOR<WeaponEnhancementMaterialUncheckedUpdateManyWithoutWeaponEnhancementMaterialsInput, WeaponEnhancementMaterialUpdateManyMutationInput>
  }

  export type WeaponEnhancementMaterialScalarWhereInput = {
    AND?: Enumerable<WeaponEnhancementMaterialScalarWhereInput>
    OR?: Enumerable<WeaponEnhancementMaterialScalarWhereInput>
    NOT?: Enumerable<WeaponEnhancementMaterialScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    name?: StringFilter | string
    description?: StringNullableFilter | string | null
    image?: StringNullableFilter | string | null
    rarity?: IntFilter | number
    source?: JsonNullableFilter
    recipeUseId?: StringNullableFilter | string | null
  }

  export type WeaponEnhancementMaterialUpsertWithWhereUniqueWithoutRecipeUseInput = {
    where: WeaponEnhancementMaterialWhereUniqueInput
    update: XOR<WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeUseInput, WeaponEnhancementMaterialUpdateWithoutRecipeUseInput>
    create: XOR<WeaponEnhancementMaterialUncheckedCreateWithoutRecipeUseInput, WeaponEnhancementMaterialCreateWithoutRecipeUseInput>
  }

  export type WeaponEnhancementMaterialUpdateWithoutRecipeCreateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    recipeUse?: ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialsInput
  }

  export type WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeCreateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    recipeUseId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WeaponEnhancementMaterialUpsertWithoutRecipeCreateInput = {
    update: XOR<WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeCreateInput, WeaponEnhancementMaterialUpdateWithoutRecipeCreateInput>
    create: XOR<WeaponEnhancementMaterialUncheckedCreateWithoutRecipeCreateInput, WeaponEnhancementMaterialCreateWithoutRecipeCreateInput>
  }

  export type WeaponUpdateWithoutForgeRecipeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    baseStats?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    passive?: InputJsonValue | null
    rarity?: NullableIntFieldUpdateOperationsInput | number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput | WeaponSecondaryStatType | null
    type?: EnumWeaponTypeFieldUpdateOperationsInput | WeaponType
    ascensions?: WeaponAscensionUpdateManyWithoutWeaponInput
  }

  export type WeaponUncheckedUpdateWithoutForgeRecipeInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    baseStats?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    passive?: InputJsonValue | null
    rarity?: NullableIntFieldUpdateOperationsInput | number | null
    refinements?: InputJsonValue | null
    stats?: InputJsonValue | null
    secondaryStatType?: NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput | WeaponSecondaryStatType | null
    type?: EnumWeaponTypeFieldUpdateOperationsInput | WeaponType
    ascensions?: WeaponAscensionUncheckedUpdateManyWithoutWeaponInput
  }

  export type WeaponUpsertWithoutForgeRecipeInput = {
    update: XOR<WeaponUncheckedUpdateWithoutForgeRecipeInput, WeaponUpdateWithoutForgeRecipeInput>
    create: XOR<WeaponUncheckedCreateWithoutForgeRecipeInput, WeaponCreateWithoutForgeRecipeInput>
  }

  export type ArtifactCreateWithoutSetInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    lore?: string | null
    minRarity: number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type: ArtifactType
    domain?: DomainCreateOneWithoutArtifactsInput
  }

  export type ArtifactUncheckedCreateWithoutSetInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    lore?: string | null
    minRarity: number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type: ArtifactType
    domainId?: string | null
  }

  export type ArtifactCreateOrConnectWithoutsetInput = {
    where: ArtifactWhereUniqueInput
    create: XOR<ArtifactUncheckedCreateWithoutSetInput, ArtifactCreateWithoutSetInput>
  }

  export type ArtifactUpdateWithWhereUniqueWithoutSetInput = {
    where: ArtifactWhereUniqueInput
    data: XOR<ArtifactUncheckedUpdateWithoutSetInput, ArtifactUpdateWithoutSetInput>
  }

  export type ArtifactUpdateManyWithWhereWithoutSetInput = {
    where: ArtifactScalarWhereInput
    data: XOR<ArtifactUncheckedUpdateManyWithoutArtifactsInput, ArtifactUpdateManyMutationInput>
  }

  export type ArtifactUpsertWithWhereUniqueWithoutSetInput = {
    where: ArtifactWhereUniqueInput
    update: XOR<ArtifactUncheckedUpdateWithoutSetInput, ArtifactUpdateWithoutSetInput>
    create: XOR<ArtifactUncheckedCreateWithoutSetInput, ArtifactCreateWithoutSetInput>
  }

  export type ArtifactSetCreateWithoutArtifactsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    image?: string | null
    maxRarity?: number | null
    pieceBonusFour?: string | null
    pieceBonusOne?: string | null
    pieceBonusTwo?: string | null
  }

  export type ArtifactSetUncheckedCreateWithoutArtifactsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    image?: string | null
    maxRarity?: number | null
    pieceBonusFour?: string | null
    pieceBonusOne?: string | null
    pieceBonusTwo?: string | null
  }

  export type ArtifactSetCreateOrConnectWithoutartifactsInput = {
    where: ArtifactSetWhereUniqueInput
    create: XOR<ArtifactSetUncheckedCreateWithoutArtifactsInput, ArtifactSetCreateWithoutArtifactsInput>
  }

  export type DomainCreateWithoutArtifactsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    levels?: InputJsonValue | null
    type?: string | null
    region?: RegionCreateOneWithoutDomainsInput
    talentLevelUpMaterials?: TalentLevelUpMaterialCreateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialCreateManyWithoutDomainInput
  }

  export type DomainUncheckedCreateWithoutArtifactsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    name: string
    description?: string | null
    levels?: InputJsonValue | null
    type?: string | null
    regionId?: string | null
    talentLevelUpMaterials?: TalentLevelUpMaterialUncheckedCreateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUncheckedCreateManyWithoutDomainInput
  }

  export type DomainCreateOrConnectWithoutartifactsInput = {
    where: DomainWhereUniqueInput
    create: XOR<DomainUncheckedCreateWithoutArtifactsInput, DomainCreateWithoutArtifactsInput>
  }

  export type ArtifactSetUpdateWithoutArtifactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    maxRarity?: NullableIntFieldUpdateOperationsInput | number | null
    pieceBonusFour?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusOne?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusTwo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArtifactSetUncheckedUpdateWithoutArtifactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    maxRarity?: NullableIntFieldUpdateOperationsInput | number | null
    pieceBonusFour?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusOne?: NullableStringFieldUpdateOperationsInput | string | null
    pieceBonusTwo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArtifactSetUpsertWithoutArtifactsInput = {
    update: XOR<ArtifactSetUncheckedUpdateWithoutArtifactsInput, ArtifactSetUpdateWithoutArtifactsInput>
    create: XOR<ArtifactSetUncheckedCreateWithoutArtifactsInput, ArtifactSetCreateWithoutArtifactsInput>
  }

  export type DomainUpdateWithoutArtifactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    region?: RegionUpdateOneWithoutDomainsInput
    talentLevelUpMaterials?: TalentLevelUpMaterialUpdateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUpdateManyWithoutDomainInput
  }

  export type DomainUncheckedUpdateWithoutArtifactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    talentLevelUpMaterials?: TalentLevelUpMaterialUncheckedUpdateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUncheckedUpdateManyWithoutDomainInput
  }

  export type DomainUpsertWithoutArtifactsInput = {
    update: XOR<DomainUncheckedUpdateWithoutArtifactsInput, DomainUpdateWithoutArtifactsInput>
    create: XOR<DomainUncheckedCreateWithoutArtifactsInput, DomainCreateWithoutArtifactsInput>
  }

  export type CharacterAscensionUpdateWithoutCharacterInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    characterAscensionMaterial?: CharacterAscensionMaterialUpdateOneWithoutCharacterAscensionsInput
    commonAscensionMaterials?: CommonAscensionMaterialUpdateManyWithoutCharacterAscensionsInput
  }

  export type CharacterAscensionUncheckedUpdateWithoutCharacterInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    characterAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CharacterAscensionUncheckedUpdateManyWithoutAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    characterAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ElementUpdateWithoutCharactersInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    characterProfiles?: CharacterProfileUpdateManyWithoutVisionInput
    region?: RegionUpdateOneWithoutElementInput
  }

  export type ElementUncheckedUpdateWithoutCharactersInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    characterProfiles?: CharacterProfileUncheckedUpdateManyWithoutVisionInput
  }

  export type ElementUncheckedUpdateManyWithoutElementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    archon?: NullableStringFieldUpdateOperationsInput | string | null
    statusEffect?: NullableStringFieldUpdateOperationsInput | string | null
    theme?: NullableStringFieldUpdateOperationsInput | string | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TalentUpdateWithoutCharacterInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InputJsonValue | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    talentLevelUpMaterial?: TalentLevelUpMaterialUpdateOneWithoutTalentsInput
  }

  export type TalentUncheckedUpdateWithoutCharacterInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InputJsonValue | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    talentLevelUpMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TalentUncheckedUpdateManyWithoutTalentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InputJsonValue | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    talentLevelUpMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommonAscensionMaterialUpdateWithoutCharacterAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput | CommonAscensionMaterialGroup
    weaponAscensions?: WeaponAscensionUpdateManyWithoutCommonAscensionMaterialsInput
  }

  export type CommonAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput | CommonAscensionMaterialGroup
  }

  export type CommonAscensionMaterialUncheckedUpdateManyWithoutCommonAscensionMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput | CommonAscensionMaterialGroup
  }

  export type CharacterUpdateWithoutElementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
    ascensions?: CharacterAscensionUpdateManyWithoutCharacterInput
    characterProfile?: CharacterProfileUpdateOneWithoutCharacterInput
    talents?: TalentUpdateManyWithoutCharacterInput
  }

  export type CharacterUncheckedUpdateWithoutElementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    characterProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
    ascensions?: CharacterAscensionUncheckedUpdateManyWithoutCharacterInput
    talents?: TalentUncheckedUpdateManyWithoutCharacterInput
  }

  export type CharacterUncheckedUpdateManyWithoutCharactersInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    constellations?: InputJsonValue | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    stats?: InputJsonValue | null
    characterProfileId?: NullableStringFieldUpdateOperationsInput | string | null
    weapon?: NullableEnumWeaponTypeFieldUpdateOperationsInput | WeaponType | null
  }

  export type CharacterProfileUpdateWithoutVisionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    region?: RegionUpdateOneWithoutCharacterProfilesInput
    specialtyDish?: ConsumeableUpdateOneWithoutCharacterSpecialtyInput
    character?: CharacterUpdateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUncheckedUpdateWithoutVisionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
    specialtyDish?: ConsumeableUncheckedUpdateOneWithoutCharacterSpecialtyInput
    character?: CharacterUncheckedUpdateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUncheckedUpdateManyWithoutCharacterProfilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    regionId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CharacterProfileUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    specialtyDish?: ConsumeableUpdateOneWithoutCharacterSpecialtyInput
    vision?: ElementUpdateOneWithoutCharacterProfilesInput
    character?: CharacterUpdateOneWithoutCharacterProfileInput
  }

  export type CharacterProfileUncheckedUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    affiliation?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    constellation?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InputJsonValue | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    story?: InputJsonValue | null
    voiceActor?: InputJsonValue | null
    voiceLines?: InputJsonValue | null
    elementId?: NullableStringFieldUpdateOperationsInput | string | null
    specialtyDish?: ConsumeableUncheckedUpdateOneWithoutCharacterSpecialtyInput
    character?: CharacterUncheckedUpdateOneWithoutCharacterProfileInput
  }

  export type DomainUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    artifacts?: ArtifactUpdateManyWithoutDomainInput
    talentLevelUpMaterials?: TalentLevelUpMaterialUpdateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUpdateManyWithoutDomainInput
  }

  export type DomainUncheckedUpdateWithoutRegionInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    artifacts?: ArtifactUncheckedUpdateManyWithoutDomainInput
    talentLevelUpMaterials?: TalentLevelUpMaterialUncheckedUpdateManyWithoutDomainInput
    weaponAscensionMaterials?: WeaponAscensionMaterialUncheckedUpdateManyWithoutDomainInput
  }

  export type DomainUncheckedUpdateManyWithoutDomainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    levels?: InputJsonValue | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WeaponAscensionUpdateWithoutWeaponInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    commonAscensionMaterials?: CommonAscensionMaterialUpdateManyWithoutWeaponAscensionsInput
    weaponAscensionMaterial?: WeaponAscensionMaterialUpdateOneWithoutWeaponAscensionsInput
  }

  export type WeaponAscensionUncheckedUpdateWithoutWeaponInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    weaponAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WeaponAscensionUncheckedUpdateManyWithoutAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    weaponAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommonAscensionMaterialUpdateWithoutWeaponAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput | CommonAscensionMaterialGroup
    characterAscensions?: CharacterAscensionUpdateManyWithoutCommonAscensionMaterialsInput
  }

  export type CommonAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput | CommonAscensionMaterialGroup
  }

  export type CharacterAscensionUpdateWithoutCommonAscensionMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    character?: CharacterUpdateOneWithoutAscensionsInput
    characterAscensionMaterial?: CharacterAscensionMaterialUpdateOneWithoutCharacterAscensionsInput
  }

  export type CharacterAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    characterId?: NullableStringFieldUpdateOperationsInput | string | null
    characterAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    characterId?: NullableStringFieldUpdateOperationsInput | string | null
    characterAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WeaponAscensionUpdateWithoutCommonAscensionMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    weaponAscensionMaterial?: WeaponAscensionMaterialUpdateOneWithoutWeaponAscensionsInput
    weapon?: WeaponUpdateOneWithoutAscensionsInput
  }

  export type WeaponAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    weaponAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    weaponAscensionMaterialId?: NullableStringFieldUpdateOperationsInput | string | null
    weaponId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WeaponAscensionUpdateWithoutWeaponAscensionMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    commonAscensionMaterials?: CommonAscensionMaterialUpdateManyWithoutWeaponAscensionsInput
    weapon?: WeaponUpdateOneWithoutAscensionsInput
  }

  export type WeaponAscensionUncheckedUpdateWithoutWeaponAscensionMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    weaponId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CharacterAscensionUpdateWithoutCharacterAscensionMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    character?: CharacterUpdateOneWithoutAscensionsInput
    commonAscensionMaterials?: CommonAscensionMaterialUpdateManyWithoutCharacterAscensionsInput
  }

  export type CharacterAscensionUncheckedUpdateWithoutCharacterAscensionMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    level?: IntFieldUpdateOperationsInput | number
    maxLevel?: IntFieldUpdateOperationsInput | number
    recipe?: InputJsonValue | null
    characterId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TalentUpdateWithoutTalentLevelUpMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InputJsonValue | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    character?: CharacterUpdateOneRequiredWithoutTalentsInput
  }

  export type TalentUncheckedUpdateWithoutTalentLevelUpMaterialInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    details?: InputJsonValue | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    characterId?: StringFieldUpdateOperationsInput | string
  }

  export type ConsumeableRecipeUpdateWithoutCraftingMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
    consumeable?: ConsumeableUpdateOneWithoutRecipeInput
    cookingMaterials?: CookingMaterialUpdateManyWithoutRecipesInput
  }

  export type ConsumeableRecipeUncheckedUpdateWithoutCraftingMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
    consumeableId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConsumeableRecipeUncheckedUpdateManyWithoutRecipesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
    consumeableId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConsumeableRecipeUpdateWithoutCookingMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
    consumeable?: ConsumeableUpdateOneWithoutRecipeInput
    craftingMaterials?: CraftingMaterialUpdateManyWithoutRecipesInput
  }

  export type ConsumeableRecipeUncheckedUpdateWithoutCookingMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recipe?: InputJsonValue | null
    consumeableId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArtifactUpdateWithoutDomainInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    minRarity?: IntFieldUpdateOperationsInput | number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type?: EnumArtifactTypeFieldUpdateOperationsInput | ArtifactType
    set?: ArtifactSetUpdateOneWithoutArtifactsInput
  }

  export type ArtifactUncheckedUpdateWithoutDomainInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    minRarity?: IntFieldUpdateOperationsInput | number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type?: EnumArtifactTypeFieldUpdateOperationsInput | ArtifactType
    artifactSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArtifactUncheckedUpdateManyWithoutArtifactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    minRarity?: IntFieldUpdateOperationsInput | number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type?: EnumArtifactTypeFieldUpdateOperationsInput | ArtifactType
    artifactSetId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TalentLevelUpMaterialUpdateWithoutDomainInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput | TalentLevelUpMaterialGroup
    talents?: TalentUpdateManyWithoutTalentLevelUpMaterialInput
  }

  export type TalentLevelUpMaterialUncheckedUpdateWithoutDomainInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput | TalentLevelUpMaterialGroup
    talents?: TalentUncheckedUpdateManyWithoutTalentLevelUpMaterialInput
  }

  export type TalentLevelUpMaterialUncheckedUpdateManyWithoutTalentLevelUpMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput | TalentLevelUpMaterialGroup
  }

  export type WeaponAscensionMaterialUpdateWithoutDomainInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
    weaponAscensions?: WeaponAscensionUpdateManyWithoutWeaponAscensionMaterialInput
  }

  export type WeaponAscensionMaterialUncheckedUpdateWithoutDomainInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
    weaponAscensions?: WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionMaterialInput
  }

  export type WeaponAscensionMaterialUncheckedUpdateManyWithoutWeaponAscensionMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    availability?: InputJsonValue | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    group?: EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput | WeaponAscensionMaterialGroup
  }

  export type CraftingMaterialUpdateWithoutRecipesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CraftingMaterialUncheckedUpdateWithoutRecipesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CraftingMaterialUncheckedUpdateManyWithoutCraftingMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type CookingMaterialUpdateWithoutRecipesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    processingRecipe?: ProcessRecipeUpdateOneWithoutMaterialInput
  }

  export type CookingMaterialUncheckedUpdateWithoutRecipesInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    processingRecipe?: ProcessRecipeUncheckedUpdateOneWithoutMaterialInput
  }

  export type CookingMaterialUncheckedUpdateManyWithoutCookingMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type WeaponEnhancementMaterialUpdateWithoutRecipeUseInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    recipeCreate?: ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialInput
  }

  export type WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeUseInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
    recipeCreate?: ForgeRecipeUncheckedUpdateOneWithoutWeaponEnhancementMaterialInput
  }

  export type WeaponEnhancementMaterialUncheckedUpdateManyWithoutWeaponEnhancementMaterialsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    rarity?: IntFieldUpdateOperationsInput | number
    source?: InputJsonValue | null
  }

  export type ArtifactUpdateWithoutSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    minRarity?: IntFieldUpdateOperationsInput | number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type?: EnumArtifactTypeFieldUpdateOperationsInput | ArtifactType
    domain?: DomainUpdateOneWithoutArtifactsInput
  }

  export type ArtifactUncheckedUpdateWithoutSetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    lore?: NullableStringFieldUpdateOperationsInput | string | null
    minRarity?: IntFieldUpdateOperationsInput | number
    possibleMainStats?: InputJsonValue | null
    possibleSubStats?: InputJsonValue | null
    source?: InputJsonValue | null
    type?: EnumArtifactTypeFieldUpdateOperationsInput | ArtifactType
    domainId?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.DMMF.Document;
}

/*
* Exports for compatibility introduced in 2.12.0
* Please import from the Prisma namespace instead
*/

/**
 * @deprecated Renamed to `Prisma.UserScalarFieldEnum`
 */
export type UserScalarFieldEnum = Prisma.UserScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.UserSecretScalarFieldEnum`
 */
export type UserSecretScalarFieldEnum = Prisma.UserSecretScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.CharacterScalarFieldEnum`
 */
export type CharacterScalarFieldEnum = Prisma.CharacterScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionScalarFieldEnum`
 */
export type CharacterAscensionScalarFieldEnum = Prisma.CharacterAscensionScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.CharacterProfileScalarFieldEnum`
 */
export type CharacterProfileScalarFieldEnum = Prisma.CharacterProfileScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.TalentScalarFieldEnum`
 */
export type TalentScalarFieldEnum = Prisma.TalentScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.ElementScalarFieldEnum`
 */
export type ElementScalarFieldEnum = Prisma.ElementScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.RegionScalarFieldEnum`
 */
export type RegionScalarFieldEnum = Prisma.RegionScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.WeaponScalarFieldEnum`
 */
export type WeaponScalarFieldEnum = Prisma.WeaponScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionScalarFieldEnum`
 */
export type WeaponAscensionScalarFieldEnum = Prisma.WeaponAscensionScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialScalarFieldEnum`
 */
export type CommonAscensionMaterialScalarFieldEnum = Prisma.CommonAscensionMaterialScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialScalarFieldEnum`
 */
export type WeaponAscensionMaterialScalarFieldEnum = Prisma.WeaponAscensionMaterialScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialScalarFieldEnum`
 */
export type WeaponEnhancementMaterialScalarFieldEnum = Prisma.WeaponEnhancementMaterialScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialScalarFieldEnum`
 */
export type CharacterAscensionMaterialScalarFieldEnum = Prisma.CharacterAscensionMaterialScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialScalarFieldEnum`
 */
export type TalentLevelUpMaterialScalarFieldEnum = Prisma.TalentLevelUpMaterialScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialScalarFieldEnum`
 */
export type CraftingMaterialScalarFieldEnum = Prisma.CraftingMaterialScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.CookingMaterialScalarFieldEnum`
 */
export type CookingMaterialScalarFieldEnum = Prisma.CookingMaterialScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.CommonMaterialScalarFieldEnum`
 */
export type CommonMaterialScalarFieldEnum = Prisma.CommonMaterialScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.DomainScalarFieldEnum`
 */
export type DomainScalarFieldEnum = Prisma.DomainScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.ConsumeableScalarFieldEnum`
 */
export type ConsumeableScalarFieldEnum = Prisma.ConsumeableScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeScalarFieldEnum`
 */
export type ConsumeableRecipeScalarFieldEnum = Prisma.ConsumeableRecipeScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeScalarFieldEnum`
 */
export type ProcessRecipeScalarFieldEnum = Prisma.ProcessRecipeScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeScalarFieldEnum`
 */
export type ForgeRecipeScalarFieldEnum = Prisma.ForgeRecipeScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.ArtifactSetScalarFieldEnum`
 */
export type ArtifactSetScalarFieldEnum = Prisma.ArtifactSetScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.ArtifactScalarFieldEnum`
 */
export type ArtifactScalarFieldEnum = Prisma.ArtifactScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.GadgetScalarFieldEnum`
 */
export type GadgetScalarFieldEnum = Prisma.GadgetScalarFieldEnum

/**
 * @deprecated Renamed to `Prisma.SortOrder`
 */
export type SortOrder = Prisma.SortOrder

/**
 * @deprecated Renamed to `Prisma.QueryMode`
 */
export type QueryMode = Prisma.QueryMode

/**
 * @deprecated Renamed to `Prisma.ModelName`
 */
export type ModelName = Prisma.ModelName

/**
 * @deprecated Renamed to `Prisma.AggregateUser`
 */
export type AggregateUser = Prisma.AggregateUser

/**
 * @deprecated Renamed to `Prisma.UserMinAggregateOutputType`
 */
export type UserMinAggregateOutputType = Prisma.UserMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.UserMaxAggregateOutputType`
 */
export type UserMaxAggregateOutputType = Prisma.UserMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.UserCountAggregateOutputType`
 */
export type UserCountAggregateOutputType = Prisma.UserCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateUserArgs`
 */
export type AggregateUserArgs = Prisma.AggregateUserArgs

/**
 * @deprecated Renamed to `Prisma.UserMinAggregateInputType`
 */
export type UserMinAggregateInputType = Prisma.UserMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.UserMaxAggregateInputType`
 */
export type UserMaxAggregateInputType = Prisma.UserMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.UserCountAggregateInputType`
 */
export type UserCountAggregateInputType = Prisma.UserCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.UserSelect`
 */
export type UserSelect = Prisma.UserSelect

/**
 * @deprecated Renamed to `Prisma.UserInclude`
 */
export type UserInclude = Prisma.UserInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueUserArgs`
 */
export type FindUniqueUserArgs = Prisma.FindUniqueUserArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstUserArgs`
 */
export type FindFirstUserArgs = Prisma.FindFirstUserArgs

/**
 * @deprecated Renamed to `Prisma.FindManyUserArgs`
 */
export type FindManyUserArgs = Prisma.FindManyUserArgs

/**
 * @deprecated Renamed to `Prisma.UserCreateArgs`
 */
export type UserCreateArgs = Prisma.UserCreateArgs

/**
 * @deprecated Renamed to `Prisma.UserUpdateArgs`
 */
export type UserUpdateArgs = Prisma.UserUpdateArgs

/**
 * @deprecated Renamed to `Prisma.UserUpdateManyArgs`
 */
export type UserUpdateManyArgs = Prisma.UserUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.UserUpsertArgs`
 */
export type UserUpsertArgs = Prisma.UserUpsertArgs

/**
 * @deprecated Renamed to `Prisma.UserDeleteArgs`
 */
export type UserDeleteArgs = Prisma.UserDeleteArgs

/**
 * @deprecated Renamed to `Prisma.UserDeleteManyArgs`
 */
export type UserDeleteManyArgs = Prisma.UserDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateUserSecret`
 */
export type AggregateUserSecret = Prisma.AggregateUserSecret

/**
 * @deprecated Renamed to `Prisma.UserSecretAvgAggregateOutputType`
 */
export type UserSecretAvgAggregateOutputType = Prisma.UserSecretAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.UserSecretSumAggregateOutputType`
 */
export type UserSecretSumAggregateOutputType = Prisma.UserSecretSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.UserSecretMinAggregateOutputType`
 */
export type UserSecretMinAggregateOutputType = Prisma.UserSecretMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.UserSecretMaxAggregateOutputType`
 */
export type UserSecretMaxAggregateOutputType = Prisma.UserSecretMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.UserSecretCountAggregateOutputType`
 */
export type UserSecretCountAggregateOutputType = Prisma.UserSecretCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateUserSecretArgs`
 */
export type AggregateUserSecretArgs = Prisma.AggregateUserSecretArgs

/**
 * @deprecated Renamed to `Prisma.UserSecretAvgAggregateInputType`
 */
export type UserSecretAvgAggregateInputType = Prisma.UserSecretAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.UserSecretSumAggregateInputType`
 */
export type UserSecretSumAggregateInputType = Prisma.UserSecretSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.UserSecretMinAggregateInputType`
 */
export type UserSecretMinAggregateInputType = Prisma.UserSecretMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.UserSecretMaxAggregateInputType`
 */
export type UserSecretMaxAggregateInputType = Prisma.UserSecretMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.UserSecretCountAggregateInputType`
 */
export type UserSecretCountAggregateInputType = Prisma.UserSecretCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.UserSecretSelect`
 */
export type UserSecretSelect = Prisma.UserSecretSelect

/**
 * @deprecated Renamed to `Prisma.UserSecretInclude`
 */
export type UserSecretInclude = Prisma.UserSecretInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueUserSecretArgs`
 */
export type FindUniqueUserSecretArgs = Prisma.FindUniqueUserSecretArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstUserSecretArgs`
 */
export type FindFirstUserSecretArgs = Prisma.FindFirstUserSecretArgs

/**
 * @deprecated Renamed to `Prisma.FindManyUserSecretArgs`
 */
export type FindManyUserSecretArgs = Prisma.FindManyUserSecretArgs

/**
 * @deprecated Renamed to `Prisma.UserSecretCreateArgs`
 */
export type UserSecretCreateArgs = Prisma.UserSecretCreateArgs

/**
 * @deprecated Renamed to `Prisma.UserSecretUpdateArgs`
 */
export type UserSecretUpdateArgs = Prisma.UserSecretUpdateArgs

/**
 * @deprecated Renamed to `Prisma.UserSecretUpdateManyArgs`
 */
export type UserSecretUpdateManyArgs = Prisma.UserSecretUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.UserSecretUpsertArgs`
 */
export type UserSecretUpsertArgs = Prisma.UserSecretUpsertArgs

/**
 * @deprecated Renamed to `Prisma.UserSecretDeleteArgs`
 */
export type UserSecretDeleteArgs = Prisma.UserSecretDeleteArgs

/**
 * @deprecated Renamed to `Prisma.UserSecretDeleteManyArgs`
 */
export type UserSecretDeleteManyArgs = Prisma.UserSecretDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateCharacter`
 */
export type AggregateCharacter = Prisma.AggregateCharacter

/**
 * @deprecated Renamed to `Prisma.CharacterAvgAggregateOutputType`
 */
export type CharacterAvgAggregateOutputType = Prisma.CharacterAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterSumAggregateOutputType`
 */
export type CharacterSumAggregateOutputType = Prisma.CharacterSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterMinAggregateOutputType`
 */
export type CharacterMinAggregateOutputType = Prisma.CharacterMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterMaxAggregateOutputType`
 */
export type CharacterMaxAggregateOutputType = Prisma.CharacterMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterCountAggregateOutputType`
 */
export type CharacterCountAggregateOutputType = Prisma.CharacterCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateCharacterArgs`
 */
export type AggregateCharacterArgs = Prisma.AggregateCharacterArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAvgAggregateInputType`
 */
export type CharacterAvgAggregateInputType = Prisma.CharacterAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterSumAggregateInputType`
 */
export type CharacterSumAggregateInputType = Prisma.CharacterSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterMinAggregateInputType`
 */
export type CharacterMinAggregateInputType = Prisma.CharacterMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterMaxAggregateInputType`
 */
export type CharacterMaxAggregateInputType = Prisma.CharacterMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterCountAggregateInputType`
 */
export type CharacterCountAggregateInputType = Prisma.CharacterCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterSelect`
 */
export type CharacterSelect = Prisma.CharacterSelect

/**
 * @deprecated Renamed to `Prisma.CharacterInclude`
 */
export type CharacterInclude = Prisma.CharacterInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueCharacterArgs`
 */
export type FindUniqueCharacterArgs = Prisma.FindUniqueCharacterArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstCharacterArgs`
 */
export type FindFirstCharacterArgs = Prisma.FindFirstCharacterArgs

/**
 * @deprecated Renamed to `Prisma.FindManyCharacterArgs`
 */
export type FindManyCharacterArgs = Prisma.FindManyCharacterArgs

/**
 * @deprecated Renamed to `Prisma.CharacterCreateArgs`
 */
export type CharacterCreateArgs = Prisma.CharacterCreateArgs

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateArgs`
 */
export type CharacterUpdateArgs = Prisma.CharacterUpdateArgs

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateManyArgs`
 */
export type CharacterUpdateManyArgs = Prisma.CharacterUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.CharacterUpsertArgs`
 */
export type CharacterUpsertArgs = Prisma.CharacterUpsertArgs

/**
 * @deprecated Renamed to `Prisma.CharacterDeleteArgs`
 */
export type CharacterDeleteArgs = Prisma.CharacterDeleteArgs

/**
 * @deprecated Renamed to `Prisma.CharacterDeleteManyArgs`
 */
export type CharacterDeleteManyArgs = Prisma.CharacterDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateCharacterAscension`
 */
export type AggregateCharacterAscension = Prisma.AggregateCharacterAscension

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionAvgAggregateOutputType`
 */
export type CharacterAscensionAvgAggregateOutputType = Prisma.CharacterAscensionAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionSumAggregateOutputType`
 */
export type CharacterAscensionSumAggregateOutputType = Prisma.CharacterAscensionSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMinAggregateOutputType`
 */
export type CharacterAscensionMinAggregateOutputType = Prisma.CharacterAscensionMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaxAggregateOutputType`
 */
export type CharacterAscensionMaxAggregateOutputType = Prisma.CharacterAscensionMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCountAggregateOutputType`
 */
export type CharacterAscensionCountAggregateOutputType = Prisma.CharacterAscensionCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateCharacterAscensionArgs`
 */
export type AggregateCharacterAscensionArgs = Prisma.AggregateCharacterAscensionArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionAvgAggregateInputType`
 */
export type CharacterAscensionAvgAggregateInputType = Prisma.CharacterAscensionAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionSumAggregateInputType`
 */
export type CharacterAscensionSumAggregateInputType = Prisma.CharacterAscensionSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMinAggregateInputType`
 */
export type CharacterAscensionMinAggregateInputType = Prisma.CharacterAscensionMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaxAggregateInputType`
 */
export type CharacterAscensionMaxAggregateInputType = Prisma.CharacterAscensionMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCountAggregateInputType`
 */
export type CharacterAscensionCountAggregateInputType = Prisma.CharacterAscensionCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionSelect`
 */
export type CharacterAscensionSelect = Prisma.CharacterAscensionSelect

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionInclude`
 */
export type CharacterAscensionInclude = Prisma.CharacterAscensionInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueCharacterAscensionArgs`
 */
export type FindUniqueCharacterAscensionArgs = Prisma.FindUniqueCharacterAscensionArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstCharacterAscensionArgs`
 */
export type FindFirstCharacterAscensionArgs = Prisma.FindFirstCharacterAscensionArgs

/**
 * @deprecated Renamed to `Prisma.FindManyCharacterAscensionArgs`
 */
export type FindManyCharacterAscensionArgs = Prisma.FindManyCharacterAscensionArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateArgs`
 */
export type CharacterAscensionCreateArgs = Prisma.CharacterAscensionCreateArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateArgs`
 */
export type CharacterAscensionUpdateArgs = Prisma.CharacterAscensionUpdateArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateManyArgs`
 */
export type CharacterAscensionUpdateManyArgs = Prisma.CharacterAscensionUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpsertArgs`
 */
export type CharacterAscensionUpsertArgs = Prisma.CharacterAscensionUpsertArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionDeleteArgs`
 */
export type CharacterAscensionDeleteArgs = Prisma.CharacterAscensionDeleteArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionDeleteManyArgs`
 */
export type CharacterAscensionDeleteManyArgs = Prisma.CharacterAscensionDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateCharacterProfile`
 */
export type AggregateCharacterProfile = Prisma.AggregateCharacterProfile

/**
 * @deprecated Renamed to `Prisma.CharacterProfileMinAggregateOutputType`
 */
export type CharacterProfileMinAggregateOutputType = Prisma.CharacterProfileMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterProfileMaxAggregateOutputType`
 */
export type CharacterProfileMaxAggregateOutputType = Prisma.CharacterProfileMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCountAggregateOutputType`
 */
export type CharacterProfileCountAggregateOutputType = Prisma.CharacterProfileCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateCharacterProfileArgs`
 */
export type AggregateCharacterProfileArgs = Prisma.AggregateCharacterProfileArgs

/**
 * @deprecated Renamed to `Prisma.CharacterProfileMinAggregateInputType`
 */
export type CharacterProfileMinAggregateInputType = Prisma.CharacterProfileMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterProfileMaxAggregateInputType`
 */
export type CharacterProfileMaxAggregateInputType = Prisma.CharacterProfileMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCountAggregateInputType`
 */
export type CharacterProfileCountAggregateInputType = Prisma.CharacterProfileCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterProfileSelect`
 */
export type CharacterProfileSelect = Prisma.CharacterProfileSelect

/**
 * @deprecated Renamed to `Prisma.CharacterProfileInclude`
 */
export type CharacterProfileInclude = Prisma.CharacterProfileInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueCharacterProfileArgs`
 */
export type FindUniqueCharacterProfileArgs = Prisma.FindUniqueCharacterProfileArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstCharacterProfileArgs`
 */
export type FindFirstCharacterProfileArgs = Prisma.FindFirstCharacterProfileArgs

/**
 * @deprecated Renamed to `Prisma.FindManyCharacterProfileArgs`
 */
export type FindManyCharacterProfileArgs = Prisma.FindManyCharacterProfileArgs

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateArgs`
 */
export type CharacterProfileCreateArgs = Prisma.CharacterProfileCreateArgs

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateArgs`
 */
export type CharacterProfileUpdateArgs = Prisma.CharacterProfileUpdateArgs

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateManyArgs`
 */
export type CharacterProfileUpdateManyArgs = Prisma.CharacterProfileUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpsertArgs`
 */
export type CharacterProfileUpsertArgs = Prisma.CharacterProfileUpsertArgs

/**
 * @deprecated Renamed to `Prisma.CharacterProfileDeleteArgs`
 */
export type CharacterProfileDeleteArgs = Prisma.CharacterProfileDeleteArgs

/**
 * @deprecated Renamed to `Prisma.CharacterProfileDeleteManyArgs`
 */
export type CharacterProfileDeleteManyArgs = Prisma.CharacterProfileDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateTalent`
 */
export type AggregateTalent = Prisma.AggregateTalent

/**
 * @deprecated Renamed to `Prisma.TalentMinAggregateOutputType`
 */
export type TalentMinAggregateOutputType = Prisma.TalentMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.TalentMaxAggregateOutputType`
 */
export type TalentMaxAggregateOutputType = Prisma.TalentMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.TalentCountAggregateOutputType`
 */
export type TalentCountAggregateOutputType = Prisma.TalentCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateTalentArgs`
 */
export type AggregateTalentArgs = Prisma.AggregateTalentArgs

/**
 * @deprecated Renamed to `Prisma.TalentMinAggregateInputType`
 */
export type TalentMinAggregateInputType = Prisma.TalentMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.TalentMaxAggregateInputType`
 */
export type TalentMaxAggregateInputType = Prisma.TalentMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.TalentCountAggregateInputType`
 */
export type TalentCountAggregateInputType = Prisma.TalentCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.TalentSelect`
 */
export type TalentSelect = Prisma.TalentSelect

/**
 * @deprecated Renamed to `Prisma.TalentInclude`
 */
export type TalentInclude = Prisma.TalentInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueTalentArgs`
 */
export type FindUniqueTalentArgs = Prisma.FindUniqueTalentArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstTalentArgs`
 */
export type FindFirstTalentArgs = Prisma.FindFirstTalentArgs

/**
 * @deprecated Renamed to `Prisma.FindManyTalentArgs`
 */
export type FindManyTalentArgs = Prisma.FindManyTalentArgs

/**
 * @deprecated Renamed to `Prisma.TalentCreateArgs`
 */
export type TalentCreateArgs = Prisma.TalentCreateArgs

/**
 * @deprecated Renamed to `Prisma.TalentUpdateArgs`
 */
export type TalentUpdateArgs = Prisma.TalentUpdateArgs

/**
 * @deprecated Renamed to `Prisma.TalentUpdateManyArgs`
 */
export type TalentUpdateManyArgs = Prisma.TalentUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.TalentUpsertArgs`
 */
export type TalentUpsertArgs = Prisma.TalentUpsertArgs

/**
 * @deprecated Renamed to `Prisma.TalentDeleteArgs`
 */
export type TalentDeleteArgs = Prisma.TalentDeleteArgs

/**
 * @deprecated Renamed to `Prisma.TalentDeleteManyArgs`
 */
export type TalentDeleteManyArgs = Prisma.TalentDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateElement`
 */
export type AggregateElement = Prisma.AggregateElement

/**
 * @deprecated Renamed to `Prisma.ElementMinAggregateOutputType`
 */
export type ElementMinAggregateOutputType = Prisma.ElementMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ElementMaxAggregateOutputType`
 */
export type ElementMaxAggregateOutputType = Prisma.ElementMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ElementCountAggregateOutputType`
 */
export type ElementCountAggregateOutputType = Prisma.ElementCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateElementArgs`
 */
export type AggregateElementArgs = Prisma.AggregateElementArgs

/**
 * @deprecated Renamed to `Prisma.ElementMinAggregateInputType`
 */
export type ElementMinAggregateInputType = Prisma.ElementMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ElementMaxAggregateInputType`
 */
export type ElementMaxAggregateInputType = Prisma.ElementMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ElementCountAggregateInputType`
 */
export type ElementCountAggregateInputType = Prisma.ElementCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ElementSelect`
 */
export type ElementSelect = Prisma.ElementSelect

/**
 * @deprecated Renamed to `Prisma.ElementInclude`
 */
export type ElementInclude = Prisma.ElementInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueElementArgs`
 */
export type FindUniqueElementArgs = Prisma.FindUniqueElementArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstElementArgs`
 */
export type FindFirstElementArgs = Prisma.FindFirstElementArgs

/**
 * @deprecated Renamed to `Prisma.FindManyElementArgs`
 */
export type FindManyElementArgs = Prisma.FindManyElementArgs

/**
 * @deprecated Renamed to `Prisma.ElementCreateArgs`
 */
export type ElementCreateArgs = Prisma.ElementCreateArgs

/**
 * @deprecated Renamed to `Prisma.ElementUpdateArgs`
 */
export type ElementUpdateArgs = Prisma.ElementUpdateArgs

/**
 * @deprecated Renamed to `Prisma.ElementUpdateManyArgs`
 */
export type ElementUpdateManyArgs = Prisma.ElementUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.ElementUpsertArgs`
 */
export type ElementUpsertArgs = Prisma.ElementUpsertArgs

/**
 * @deprecated Renamed to `Prisma.ElementDeleteArgs`
 */
export type ElementDeleteArgs = Prisma.ElementDeleteArgs

/**
 * @deprecated Renamed to `Prisma.ElementDeleteManyArgs`
 */
export type ElementDeleteManyArgs = Prisma.ElementDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateRegion`
 */
export type AggregateRegion = Prisma.AggregateRegion

/**
 * @deprecated Renamed to `Prisma.RegionMinAggregateOutputType`
 */
export type RegionMinAggregateOutputType = Prisma.RegionMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.RegionMaxAggregateOutputType`
 */
export type RegionMaxAggregateOutputType = Prisma.RegionMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.RegionCountAggregateOutputType`
 */
export type RegionCountAggregateOutputType = Prisma.RegionCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateRegionArgs`
 */
export type AggregateRegionArgs = Prisma.AggregateRegionArgs

/**
 * @deprecated Renamed to `Prisma.RegionMinAggregateInputType`
 */
export type RegionMinAggregateInputType = Prisma.RegionMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.RegionMaxAggregateInputType`
 */
export type RegionMaxAggregateInputType = Prisma.RegionMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.RegionCountAggregateInputType`
 */
export type RegionCountAggregateInputType = Prisma.RegionCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.RegionSelect`
 */
export type RegionSelect = Prisma.RegionSelect

/**
 * @deprecated Renamed to `Prisma.RegionInclude`
 */
export type RegionInclude = Prisma.RegionInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueRegionArgs`
 */
export type FindUniqueRegionArgs = Prisma.FindUniqueRegionArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstRegionArgs`
 */
export type FindFirstRegionArgs = Prisma.FindFirstRegionArgs

/**
 * @deprecated Renamed to `Prisma.FindManyRegionArgs`
 */
export type FindManyRegionArgs = Prisma.FindManyRegionArgs

/**
 * @deprecated Renamed to `Prisma.RegionCreateArgs`
 */
export type RegionCreateArgs = Prisma.RegionCreateArgs

/**
 * @deprecated Renamed to `Prisma.RegionUpdateArgs`
 */
export type RegionUpdateArgs = Prisma.RegionUpdateArgs

/**
 * @deprecated Renamed to `Prisma.RegionUpdateManyArgs`
 */
export type RegionUpdateManyArgs = Prisma.RegionUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.RegionUpsertArgs`
 */
export type RegionUpsertArgs = Prisma.RegionUpsertArgs

/**
 * @deprecated Renamed to `Prisma.RegionDeleteArgs`
 */
export type RegionDeleteArgs = Prisma.RegionDeleteArgs

/**
 * @deprecated Renamed to `Prisma.RegionDeleteManyArgs`
 */
export type RegionDeleteManyArgs = Prisma.RegionDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateWeapon`
 */
export type AggregateWeapon = Prisma.AggregateWeapon

/**
 * @deprecated Renamed to `Prisma.WeaponAvgAggregateOutputType`
 */
export type WeaponAvgAggregateOutputType = Prisma.WeaponAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponSumAggregateOutputType`
 */
export type WeaponSumAggregateOutputType = Prisma.WeaponSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponMinAggregateOutputType`
 */
export type WeaponMinAggregateOutputType = Prisma.WeaponMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponMaxAggregateOutputType`
 */
export type WeaponMaxAggregateOutputType = Prisma.WeaponMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponCountAggregateOutputType`
 */
export type WeaponCountAggregateOutputType = Prisma.WeaponCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateWeaponArgs`
 */
export type AggregateWeaponArgs = Prisma.AggregateWeaponArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAvgAggregateInputType`
 */
export type WeaponAvgAggregateInputType = Prisma.WeaponAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponSumAggregateInputType`
 */
export type WeaponSumAggregateInputType = Prisma.WeaponSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponMinAggregateInputType`
 */
export type WeaponMinAggregateInputType = Prisma.WeaponMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponMaxAggregateInputType`
 */
export type WeaponMaxAggregateInputType = Prisma.WeaponMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponCountAggregateInputType`
 */
export type WeaponCountAggregateInputType = Prisma.WeaponCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponSelect`
 */
export type WeaponSelect = Prisma.WeaponSelect

/**
 * @deprecated Renamed to `Prisma.WeaponInclude`
 */
export type WeaponInclude = Prisma.WeaponInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueWeaponArgs`
 */
export type FindUniqueWeaponArgs = Prisma.FindUniqueWeaponArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstWeaponArgs`
 */
export type FindFirstWeaponArgs = Prisma.FindFirstWeaponArgs

/**
 * @deprecated Renamed to `Prisma.FindManyWeaponArgs`
 */
export type FindManyWeaponArgs = Prisma.FindManyWeaponArgs

/**
 * @deprecated Renamed to `Prisma.WeaponCreateArgs`
 */
export type WeaponCreateArgs = Prisma.WeaponCreateArgs

/**
 * @deprecated Renamed to `Prisma.WeaponUpdateArgs`
 */
export type WeaponUpdateArgs = Prisma.WeaponUpdateArgs

/**
 * @deprecated Renamed to `Prisma.WeaponUpdateManyArgs`
 */
export type WeaponUpdateManyArgs = Prisma.WeaponUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.WeaponUpsertArgs`
 */
export type WeaponUpsertArgs = Prisma.WeaponUpsertArgs

/**
 * @deprecated Renamed to `Prisma.WeaponDeleteArgs`
 */
export type WeaponDeleteArgs = Prisma.WeaponDeleteArgs

/**
 * @deprecated Renamed to `Prisma.WeaponDeleteManyArgs`
 */
export type WeaponDeleteManyArgs = Prisma.WeaponDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateWeaponAscension`
 */
export type AggregateWeaponAscension = Prisma.AggregateWeaponAscension

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionAvgAggregateOutputType`
 */
export type WeaponAscensionAvgAggregateOutputType = Prisma.WeaponAscensionAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionSumAggregateOutputType`
 */
export type WeaponAscensionSumAggregateOutputType = Prisma.WeaponAscensionSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMinAggregateOutputType`
 */
export type WeaponAscensionMinAggregateOutputType = Prisma.WeaponAscensionMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaxAggregateOutputType`
 */
export type WeaponAscensionMaxAggregateOutputType = Prisma.WeaponAscensionMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCountAggregateOutputType`
 */
export type WeaponAscensionCountAggregateOutputType = Prisma.WeaponAscensionCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateWeaponAscensionArgs`
 */
export type AggregateWeaponAscensionArgs = Prisma.AggregateWeaponAscensionArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionAvgAggregateInputType`
 */
export type WeaponAscensionAvgAggregateInputType = Prisma.WeaponAscensionAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionSumAggregateInputType`
 */
export type WeaponAscensionSumAggregateInputType = Prisma.WeaponAscensionSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMinAggregateInputType`
 */
export type WeaponAscensionMinAggregateInputType = Prisma.WeaponAscensionMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaxAggregateInputType`
 */
export type WeaponAscensionMaxAggregateInputType = Prisma.WeaponAscensionMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCountAggregateInputType`
 */
export type WeaponAscensionCountAggregateInputType = Prisma.WeaponAscensionCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionSelect`
 */
export type WeaponAscensionSelect = Prisma.WeaponAscensionSelect

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionInclude`
 */
export type WeaponAscensionInclude = Prisma.WeaponAscensionInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueWeaponAscensionArgs`
 */
export type FindUniqueWeaponAscensionArgs = Prisma.FindUniqueWeaponAscensionArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstWeaponAscensionArgs`
 */
export type FindFirstWeaponAscensionArgs = Prisma.FindFirstWeaponAscensionArgs

/**
 * @deprecated Renamed to `Prisma.FindManyWeaponAscensionArgs`
 */
export type FindManyWeaponAscensionArgs = Prisma.FindManyWeaponAscensionArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateArgs`
 */
export type WeaponAscensionCreateArgs = Prisma.WeaponAscensionCreateArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateArgs`
 */
export type WeaponAscensionUpdateArgs = Prisma.WeaponAscensionUpdateArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateManyArgs`
 */
export type WeaponAscensionUpdateManyArgs = Prisma.WeaponAscensionUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpsertArgs`
 */
export type WeaponAscensionUpsertArgs = Prisma.WeaponAscensionUpsertArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionDeleteArgs`
 */
export type WeaponAscensionDeleteArgs = Prisma.WeaponAscensionDeleteArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionDeleteManyArgs`
 */
export type WeaponAscensionDeleteManyArgs = Prisma.WeaponAscensionDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateCommonAscensionMaterial`
 */
export type AggregateCommonAscensionMaterial = Prisma.AggregateCommonAscensionMaterial

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialAvgAggregateOutputType`
 */
export type CommonAscensionMaterialAvgAggregateOutputType = Prisma.CommonAscensionMaterialAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialSumAggregateOutputType`
 */
export type CommonAscensionMaterialSumAggregateOutputType = Prisma.CommonAscensionMaterialSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialMinAggregateOutputType`
 */
export type CommonAscensionMaterialMinAggregateOutputType = Prisma.CommonAscensionMaterialMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialMaxAggregateOutputType`
 */
export type CommonAscensionMaterialMaxAggregateOutputType = Prisma.CommonAscensionMaterialMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialCountAggregateOutputType`
 */
export type CommonAscensionMaterialCountAggregateOutputType = Prisma.CommonAscensionMaterialCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateCommonAscensionMaterialArgs`
 */
export type AggregateCommonAscensionMaterialArgs = Prisma.AggregateCommonAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialAvgAggregateInputType`
 */
export type CommonAscensionMaterialAvgAggregateInputType = Prisma.CommonAscensionMaterialAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialSumAggregateInputType`
 */
export type CommonAscensionMaterialSumAggregateInputType = Prisma.CommonAscensionMaterialSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialMinAggregateInputType`
 */
export type CommonAscensionMaterialMinAggregateInputType = Prisma.CommonAscensionMaterialMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialMaxAggregateInputType`
 */
export type CommonAscensionMaterialMaxAggregateInputType = Prisma.CommonAscensionMaterialMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialCountAggregateInputType`
 */
export type CommonAscensionMaterialCountAggregateInputType = Prisma.CommonAscensionMaterialCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialSelect`
 */
export type CommonAscensionMaterialSelect = Prisma.CommonAscensionMaterialSelect

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialInclude`
 */
export type CommonAscensionMaterialInclude = Prisma.CommonAscensionMaterialInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueCommonAscensionMaterialArgs`
 */
export type FindUniqueCommonAscensionMaterialArgs = Prisma.FindUniqueCommonAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstCommonAscensionMaterialArgs`
 */
export type FindFirstCommonAscensionMaterialArgs = Prisma.FindFirstCommonAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindManyCommonAscensionMaterialArgs`
 */
export type FindManyCommonAscensionMaterialArgs = Prisma.FindManyCommonAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialCreateArgs`
 */
export type CommonAscensionMaterialCreateArgs = Prisma.CommonAscensionMaterialCreateArgs

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateArgs`
 */
export type CommonAscensionMaterialUpdateArgs = Prisma.CommonAscensionMaterialUpdateArgs

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateManyArgs`
 */
export type CommonAscensionMaterialUpdateManyArgs = Prisma.CommonAscensionMaterialUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpsertArgs`
 */
export type CommonAscensionMaterialUpsertArgs = Prisma.CommonAscensionMaterialUpsertArgs

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialDeleteArgs`
 */
export type CommonAscensionMaterialDeleteArgs = Prisma.CommonAscensionMaterialDeleteArgs

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialDeleteManyArgs`
 */
export type CommonAscensionMaterialDeleteManyArgs = Prisma.CommonAscensionMaterialDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateWeaponAscensionMaterial`
 */
export type AggregateWeaponAscensionMaterial = Prisma.AggregateWeaponAscensionMaterial

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialAvgAggregateOutputType`
 */
export type WeaponAscensionMaterialAvgAggregateOutputType = Prisma.WeaponAscensionMaterialAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialSumAggregateOutputType`
 */
export type WeaponAscensionMaterialSumAggregateOutputType = Prisma.WeaponAscensionMaterialSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialMinAggregateOutputType`
 */
export type WeaponAscensionMaterialMinAggregateOutputType = Prisma.WeaponAscensionMaterialMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialMaxAggregateOutputType`
 */
export type WeaponAscensionMaterialMaxAggregateOutputType = Prisma.WeaponAscensionMaterialMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialCountAggregateOutputType`
 */
export type WeaponAscensionMaterialCountAggregateOutputType = Prisma.WeaponAscensionMaterialCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateWeaponAscensionMaterialArgs`
 */
export type AggregateWeaponAscensionMaterialArgs = Prisma.AggregateWeaponAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialAvgAggregateInputType`
 */
export type WeaponAscensionMaterialAvgAggregateInputType = Prisma.WeaponAscensionMaterialAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialSumAggregateInputType`
 */
export type WeaponAscensionMaterialSumAggregateInputType = Prisma.WeaponAscensionMaterialSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialMinAggregateInputType`
 */
export type WeaponAscensionMaterialMinAggregateInputType = Prisma.WeaponAscensionMaterialMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialMaxAggregateInputType`
 */
export type WeaponAscensionMaterialMaxAggregateInputType = Prisma.WeaponAscensionMaterialMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialCountAggregateInputType`
 */
export type WeaponAscensionMaterialCountAggregateInputType = Prisma.WeaponAscensionMaterialCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialSelect`
 */
export type WeaponAscensionMaterialSelect = Prisma.WeaponAscensionMaterialSelect

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialInclude`
 */
export type WeaponAscensionMaterialInclude = Prisma.WeaponAscensionMaterialInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueWeaponAscensionMaterialArgs`
 */
export type FindUniqueWeaponAscensionMaterialArgs = Prisma.FindUniqueWeaponAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstWeaponAscensionMaterialArgs`
 */
export type FindFirstWeaponAscensionMaterialArgs = Prisma.FindFirstWeaponAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindManyWeaponAscensionMaterialArgs`
 */
export type FindManyWeaponAscensionMaterialArgs = Prisma.FindManyWeaponAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialCreateArgs`
 */
export type WeaponAscensionMaterialCreateArgs = Prisma.WeaponAscensionMaterialCreateArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpdateArgs`
 */
export type WeaponAscensionMaterialUpdateArgs = Prisma.WeaponAscensionMaterialUpdateArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpdateManyArgs`
 */
export type WeaponAscensionMaterialUpdateManyArgs = Prisma.WeaponAscensionMaterialUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpsertArgs`
 */
export type WeaponAscensionMaterialUpsertArgs = Prisma.WeaponAscensionMaterialUpsertArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialDeleteArgs`
 */
export type WeaponAscensionMaterialDeleteArgs = Prisma.WeaponAscensionMaterialDeleteArgs

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialDeleteManyArgs`
 */
export type WeaponAscensionMaterialDeleteManyArgs = Prisma.WeaponAscensionMaterialDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateWeaponEnhancementMaterial`
 */
export type AggregateWeaponEnhancementMaterial = Prisma.AggregateWeaponEnhancementMaterial

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialAvgAggregateOutputType`
 */
export type WeaponEnhancementMaterialAvgAggregateOutputType = Prisma.WeaponEnhancementMaterialAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialSumAggregateOutputType`
 */
export type WeaponEnhancementMaterialSumAggregateOutputType = Prisma.WeaponEnhancementMaterialSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialMinAggregateOutputType`
 */
export type WeaponEnhancementMaterialMinAggregateOutputType = Prisma.WeaponEnhancementMaterialMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialMaxAggregateOutputType`
 */
export type WeaponEnhancementMaterialMaxAggregateOutputType = Prisma.WeaponEnhancementMaterialMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialCountAggregateOutputType`
 */
export type WeaponEnhancementMaterialCountAggregateOutputType = Prisma.WeaponEnhancementMaterialCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateWeaponEnhancementMaterialArgs`
 */
export type AggregateWeaponEnhancementMaterialArgs = Prisma.AggregateWeaponEnhancementMaterialArgs

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialAvgAggregateInputType`
 */
export type WeaponEnhancementMaterialAvgAggregateInputType = Prisma.WeaponEnhancementMaterialAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialSumAggregateInputType`
 */
export type WeaponEnhancementMaterialSumAggregateInputType = Prisma.WeaponEnhancementMaterialSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialMinAggregateInputType`
 */
export type WeaponEnhancementMaterialMinAggregateInputType = Prisma.WeaponEnhancementMaterialMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialMaxAggregateInputType`
 */
export type WeaponEnhancementMaterialMaxAggregateInputType = Prisma.WeaponEnhancementMaterialMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialCountAggregateInputType`
 */
export type WeaponEnhancementMaterialCountAggregateInputType = Prisma.WeaponEnhancementMaterialCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialSelect`
 */
export type WeaponEnhancementMaterialSelect = Prisma.WeaponEnhancementMaterialSelect

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialInclude`
 */
export type WeaponEnhancementMaterialInclude = Prisma.WeaponEnhancementMaterialInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueWeaponEnhancementMaterialArgs`
 */
export type FindUniqueWeaponEnhancementMaterialArgs = Prisma.FindUniqueWeaponEnhancementMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstWeaponEnhancementMaterialArgs`
 */
export type FindFirstWeaponEnhancementMaterialArgs = Prisma.FindFirstWeaponEnhancementMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindManyWeaponEnhancementMaterialArgs`
 */
export type FindManyWeaponEnhancementMaterialArgs = Prisma.FindManyWeaponEnhancementMaterialArgs

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialCreateArgs`
 */
export type WeaponEnhancementMaterialCreateArgs = Prisma.WeaponEnhancementMaterialCreateArgs

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpdateArgs`
 */
export type WeaponEnhancementMaterialUpdateArgs = Prisma.WeaponEnhancementMaterialUpdateArgs

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpdateManyArgs`
 */
export type WeaponEnhancementMaterialUpdateManyArgs = Prisma.WeaponEnhancementMaterialUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpsertArgs`
 */
export type WeaponEnhancementMaterialUpsertArgs = Prisma.WeaponEnhancementMaterialUpsertArgs

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialDeleteArgs`
 */
export type WeaponEnhancementMaterialDeleteArgs = Prisma.WeaponEnhancementMaterialDeleteArgs

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialDeleteManyArgs`
 */
export type WeaponEnhancementMaterialDeleteManyArgs = Prisma.WeaponEnhancementMaterialDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateCharacterAscensionMaterial`
 */
export type AggregateCharacterAscensionMaterial = Prisma.AggregateCharacterAscensionMaterial

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialAvgAggregateOutputType`
 */
export type CharacterAscensionMaterialAvgAggregateOutputType = Prisma.CharacterAscensionMaterialAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialSumAggregateOutputType`
 */
export type CharacterAscensionMaterialSumAggregateOutputType = Prisma.CharacterAscensionMaterialSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialMinAggregateOutputType`
 */
export type CharacterAscensionMaterialMinAggregateOutputType = Prisma.CharacterAscensionMaterialMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialMaxAggregateOutputType`
 */
export type CharacterAscensionMaterialMaxAggregateOutputType = Prisma.CharacterAscensionMaterialMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialCountAggregateOutputType`
 */
export type CharacterAscensionMaterialCountAggregateOutputType = Prisma.CharacterAscensionMaterialCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateCharacterAscensionMaterialArgs`
 */
export type AggregateCharacterAscensionMaterialArgs = Prisma.AggregateCharacterAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialAvgAggregateInputType`
 */
export type CharacterAscensionMaterialAvgAggregateInputType = Prisma.CharacterAscensionMaterialAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialSumAggregateInputType`
 */
export type CharacterAscensionMaterialSumAggregateInputType = Prisma.CharacterAscensionMaterialSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialMinAggregateInputType`
 */
export type CharacterAscensionMaterialMinAggregateInputType = Prisma.CharacterAscensionMaterialMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialMaxAggregateInputType`
 */
export type CharacterAscensionMaterialMaxAggregateInputType = Prisma.CharacterAscensionMaterialMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialCountAggregateInputType`
 */
export type CharacterAscensionMaterialCountAggregateInputType = Prisma.CharacterAscensionMaterialCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialSelect`
 */
export type CharacterAscensionMaterialSelect = Prisma.CharacterAscensionMaterialSelect

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialInclude`
 */
export type CharacterAscensionMaterialInclude = Prisma.CharacterAscensionMaterialInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueCharacterAscensionMaterialArgs`
 */
export type FindUniqueCharacterAscensionMaterialArgs = Prisma.FindUniqueCharacterAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstCharacterAscensionMaterialArgs`
 */
export type FindFirstCharacterAscensionMaterialArgs = Prisma.FindFirstCharacterAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindManyCharacterAscensionMaterialArgs`
 */
export type FindManyCharacterAscensionMaterialArgs = Prisma.FindManyCharacterAscensionMaterialArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialCreateArgs`
 */
export type CharacterAscensionMaterialCreateArgs = Prisma.CharacterAscensionMaterialCreateArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUpdateArgs`
 */
export type CharacterAscensionMaterialUpdateArgs = Prisma.CharacterAscensionMaterialUpdateArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUpdateManyArgs`
 */
export type CharacterAscensionMaterialUpdateManyArgs = Prisma.CharacterAscensionMaterialUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUpsertArgs`
 */
export type CharacterAscensionMaterialUpsertArgs = Prisma.CharacterAscensionMaterialUpsertArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialDeleteArgs`
 */
export type CharacterAscensionMaterialDeleteArgs = Prisma.CharacterAscensionMaterialDeleteArgs

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialDeleteManyArgs`
 */
export type CharacterAscensionMaterialDeleteManyArgs = Prisma.CharacterAscensionMaterialDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateTalentLevelUpMaterial`
 */
export type AggregateTalentLevelUpMaterial = Prisma.AggregateTalentLevelUpMaterial

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialAvgAggregateOutputType`
 */
export type TalentLevelUpMaterialAvgAggregateOutputType = Prisma.TalentLevelUpMaterialAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialSumAggregateOutputType`
 */
export type TalentLevelUpMaterialSumAggregateOutputType = Prisma.TalentLevelUpMaterialSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialMinAggregateOutputType`
 */
export type TalentLevelUpMaterialMinAggregateOutputType = Prisma.TalentLevelUpMaterialMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialMaxAggregateOutputType`
 */
export type TalentLevelUpMaterialMaxAggregateOutputType = Prisma.TalentLevelUpMaterialMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialCountAggregateOutputType`
 */
export type TalentLevelUpMaterialCountAggregateOutputType = Prisma.TalentLevelUpMaterialCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateTalentLevelUpMaterialArgs`
 */
export type AggregateTalentLevelUpMaterialArgs = Prisma.AggregateTalentLevelUpMaterialArgs

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialAvgAggregateInputType`
 */
export type TalentLevelUpMaterialAvgAggregateInputType = Prisma.TalentLevelUpMaterialAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialSumAggregateInputType`
 */
export type TalentLevelUpMaterialSumAggregateInputType = Prisma.TalentLevelUpMaterialSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialMinAggregateInputType`
 */
export type TalentLevelUpMaterialMinAggregateInputType = Prisma.TalentLevelUpMaterialMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialMaxAggregateInputType`
 */
export type TalentLevelUpMaterialMaxAggregateInputType = Prisma.TalentLevelUpMaterialMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialCountAggregateInputType`
 */
export type TalentLevelUpMaterialCountAggregateInputType = Prisma.TalentLevelUpMaterialCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialSelect`
 */
export type TalentLevelUpMaterialSelect = Prisma.TalentLevelUpMaterialSelect

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialInclude`
 */
export type TalentLevelUpMaterialInclude = Prisma.TalentLevelUpMaterialInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueTalentLevelUpMaterialArgs`
 */
export type FindUniqueTalentLevelUpMaterialArgs = Prisma.FindUniqueTalentLevelUpMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstTalentLevelUpMaterialArgs`
 */
export type FindFirstTalentLevelUpMaterialArgs = Prisma.FindFirstTalentLevelUpMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindManyTalentLevelUpMaterialArgs`
 */
export type FindManyTalentLevelUpMaterialArgs = Prisma.FindManyTalentLevelUpMaterialArgs

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialCreateArgs`
 */
export type TalentLevelUpMaterialCreateArgs = Prisma.TalentLevelUpMaterialCreateArgs

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpdateArgs`
 */
export type TalentLevelUpMaterialUpdateArgs = Prisma.TalentLevelUpMaterialUpdateArgs

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpdateManyArgs`
 */
export type TalentLevelUpMaterialUpdateManyArgs = Prisma.TalentLevelUpMaterialUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpsertArgs`
 */
export type TalentLevelUpMaterialUpsertArgs = Prisma.TalentLevelUpMaterialUpsertArgs

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialDeleteArgs`
 */
export type TalentLevelUpMaterialDeleteArgs = Prisma.TalentLevelUpMaterialDeleteArgs

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialDeleteManyArgs`
 */
export type TalentLevelUpMaterialDeleteManyArgs = Prisma.TalentLevelUpMaterialDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateCraftingMaterial`
 */
export type AggregateCraftingMaterial = Prisma.AggregateCraftingMaterial

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialAvgAggregateOutputType`
 */
export type CraftingMaterialAvgAggregateOutputType = Prisma.CraftingMaterialAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialSumAggregateOutputType`
 */
export type CraftingMaterialSumAggregateOutputType = Prisma.CraftingMaterialSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialMinAggregateOutputType`
 */
export type CraftingMaterialMinAggregateOutputType = Prisma.CraftingMaterialMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialMaxAggregateOutputType`
 */
export type CraftingMaterialMaxAggregateOutputType = Prisma.CraftingMaterialMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialCountAggregateOutputType`
 */
export type CraftingMaterialCountAggregateOutputType = Prisma.CraftingMaterialCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateCraftingMaterialArgs`
 */
export type AggregateCraftingMaterialArgs = Prisma.AggregateCraftingMaterialArgs

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialAvgAggregateInputType`
 */
export type CraftingMaterialAvgAggregateInputType = Prisma.CraftingMaterialAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialSumAggregateInputType`
 */
export type CraftingMaterialSumAggregateInputType = Prisma.CraftingMaterialSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialMinAggregateInputType`
 */
export type CraftingMaterialMinAggregateInputType = Prisma.CraftingMaterialMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialMaxAggregateInputType`
 */
export type CraftingMaterialMaxAggregateInputType = Prisma.CraftingMaterialMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialCountAggregateInputType`
 */
export type CraftingMaterialCountAggregateInputType = Prisma.CraftingMaterialCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialSelect`
 */
export type CraftingMaterialSelect = Prisma.CraftingMaterialSelect

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialInclude`
 */
export type CraftingMaterialInclude = Prisma.CraftingMaterialInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueCraftingMaterialArgs`
 */
export type FindUniqueCraftingMaterialArgs = Prisma.FindUniqueCraftingMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstCraftingMaterialArgs`
 */
export type FindFirstCraftingMaterialArgs = Prisma.FindFirstCraftingMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindManyCraftingMaterialArgs`
 */
export type FindManyCraftingMaterialArgs = Prisma.FindManyCraftingMaterialArgs

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialCreateArgs`
 */
export type CraftingMaterialCreateArgs = Prisma.CraftingMaterialCreateArgs

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUpdateArgs`
 */
export type CraftingMaterialUpdateArgs = Prisma.CraftingMaterialUpdateArgs

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUpdateManyArgs`
 */
export type CraftingMaterialUpdateManyArgs = Prisma.CraftingMaterialUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUpsertArgs`
 */
export type CraftingMaterialUpsertArgs = Prisma.CraftingMaterialUpsertArgs

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialDeleteArgs`
 */
export type CraftingMaterialDeleteArgs = Prisma.CraftingMaterialDeleteArgs

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialDeleteManyArgs`
 */
export type CraftingMaterialDeleteManyArgs = Prisma.CraftingMaterialDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateCookingMaterial`
 */
export type AggregateCookingMaterial = Prisma.AggregateCookingMaterial

/**
 * @deprecated Renamed to `Prisma.CookingMaterialAvgAggregateOutputType`
 */
export type CookingMaterialAvgAggregateOutputType = Prisma.CookingMaterialAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CookingMaterialSumAggregateOutputType`
 */
export type CookingMaterialSumAggregateOutputType = Prisma.CookingMaterialSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CookingMaterialMinAggregateOutputType`
 */
export type CookingMaterialMinAggregateOutputType = Prisma.CookingMaterialMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CookingMaterialMaxAggregateOutputType`
 */
export type CookingMaterialMaxAggregateOutputType = Prisma.CookingMaterialMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CookingMaterialCountAggregateOutputType`
 */
export type CookingMaterialCountAggregateOutputType = Prisma.CookingMaterialCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateCookingMaterialArgs`
 */
export type AggregateCookingMaterialArgs = Prisma.AggregateCookingMaterialArgs

/**
 * @deprecated Renamed to `Prisma.CookingMaterialAvgAggregateInputType`
 */
export type CookingMaterialAvgAggregateInputType = Prisma.CookingMaterialAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CookingMaterialSumAggregateInputType`
 */
export type CookingMaterialSumAggregateInputType = Prisma.CookingMaterialSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CookingMaterialMinAggregateInputType`
 */
export type CookingMaterialMinAggregateInputType = Prisma.CookingMaterialMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CookingMaterialMaxAggregateInputType`
 */
export type CookingMaterialMaxAggregateInputType = Prisma.CookingMaterialMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CookingMaterialCountAggregateInputType`
 */
export type CookingMaterialCountAggregateInputType = Prisma.CookingMaterialCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CookingMaterialSelect`
 */
export type CookingMaterialSelect = Prisma.CookingMaterialSelect

/**
 * @deprecated Renamed to `Prisma.CookingMaterialInclude`
 */
export type CookingMaterialInclude = Prisma.CookingMaterialInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueCookingMaterialArgs`
 */
export type FindUniqueCookingMaterialArgs = Prisma.FindUniqueCookingMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstCookingMaterialArgs`
 */
export type FindFirstCookingMaterialArgs = Prisma.FindFirstCookingMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindManyCookingMaterialArgs`
 */
export type FindManyCookingMaterialArgs = Prisma.FindManyCookingMaterialArgs

/**
 * @deprecated Renamed to `Prisma.CookingMaterialCreateArgs`
 */
export type CookingMaterialCreateArgs = Prisma.CookingMaterialCreateArgs

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpdateArgs`
 */
export type CookingMaterialUpdateArgs = Prisma.CookingMaterialUpdateArgs

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpdateManyArgs`
 */
export type CookingMaterialUpdateManyArgs = Prisma.CookingMaterialUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpsertArgs`
 */
export type CookingMaterialUpsertArgs = Prisma.CookingMaterialUpsertArgs

/**
 * @deprecated Renamed to `Prisma.CookingMaterialDeleteArgs`
 */
export type CookingMaterialDeleteArgs = Prisma.CookingMaterialDeleteArgs

/**
 * @deprecated Renamed to `Prisma.CookingMaterialDeleteManyArgs`
 */
export type CookingMaterialDeleteManyArgs = Prisma.CookingMaterialDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateCommonMaterial`
 */
export type AggregateCommonMaterial = Prisma.AggregateCommonMaterial

/**
 * @deprecated Renamed to `Prisma.CommonMaterialAvgAggregateOutputType`
 */
export type CommonMaterialAvgAggregateOutputType = Prisma.CommonMaterialAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CommonMaterialSumAggregateOutputType`
 */
export type CommonMaterialSumAggregateOutputType = Prisma.CommonMaterialSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CommonMaterialMinAggregateOutputType`
 */
export type CommonMaterialMinAggregateOutputType = Prisma.CommonMaterialMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CommonMaterialMaxAggregateOutputType`
 */
export type CommonMaterialMaxAggregateOutputType = Prisma.CommonMaterialMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.CommonMaterialCountAggregateOutputType`
 */
export type CommonMaterialCountAggregateOutputType = Prisma.CommonMaterialCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateCommonMaterialArgs`
 */
export type AggregateCommonMaterialArgs = Prisma.AggregateCommonMaterialArgs

/**
 * @deprecated Renamed to `Prisma.CommonMaterialAvgAggregateInputType`
 */
export type CommonMaterialAvgAggregateInputType = Prisma.CommonMaterialAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CommonMaterialSumAggregateInputType`
 */
export type CommonMaterialSumAggregateInputType = Prisma.CommonMaterialSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CommonMaterialMinAggregateInputType`
 */
export type CommonMaterialMinAggregateInputType = Prisma.CommonMaterialMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CommonMaterialMaxAggregateInputType`
 */
export type CommonMaterialMaxAggregateInputType = Prisma.CommonMaterialMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CommonMaterialCountAggregateInputType`
 */
export type CommonMaterialCountAggregateInputType = Prisma.CommonMaterialCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.CommonMaterialSelect`
 */
export type CommonMaterialSelect = Prisma.CommonMaterialSelect

/**
 * @deprecated Renamed to `Prisma.FindUniqueCommonMaterialArgs`
 */
export type FindUniqueCommonMaterialArgs = Prisma.FindUniqueCommonMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstCommonMaterialArgs`
 */
export type FindFirstCommonMaterialArgs = Prisma.FindFirstCommonMaterialArgs

/**
 * @deprecated Renamed to `Prisma.FindManyCommonMaterialArgs`
 */
export type FindManyCommonMaterialArgs = Prisma.FindManyCommonMaterialArgs

/**
 * @deprecated Renamed to `Prisma.CommonMaterialCreateArgs`
 */
export type CommonMaterialCreateArgs = Prisma.CommonMaterialCreateArgs

/**
 * @deprecated Renamed to `Prisma.CommonMaterialUpdateArgs`
 */
export type CommonMaterialUpdateArgs = Prisma.CommonMaterialUpdateArgs

/**
 * @deprecated Renamed to `Prisma.CommonMaterialUpdateManyArgs`
 */
export type CommonMaterialUpdateManyArgs = Prisma.CommonMaterialUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.CommonMaterialUpsertArgs`
 */
export type CommonMaterialUpsertArgs = Prisma.CommonMaterialUpsertArgs

/**
 * @deprecated Renamed to `Prisma.CommonMaterialDeleteArgs`
 */
export type CommonMaterialDeleteArgs = Prisma.CommonMaterialDeleteArgs

/**
 * @deprecated Renamed to `Prisma.CommonMaterialDeleteManyArgs`
 */
export type CommonMaterialDeleteManyArgs = Prisma.CommonMaterialDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateDomain`
 */
export type AggregateDomain = Prisma.AggregateDomain

/**
 * @deprecated Renamed to `Prisma.DomainMinAggregateOutputType`
 */
export type DomainMinAggregateOutputType = Prisma.DomainMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.DomainMaxAggregateOutputType`
 */
export type DomainMaxAggregateOutputType = Prisma.DomainMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.DomainCountAggregateOutputType`
 */
export type DomainCountAggregateOutputType = Prisma.DomainCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateDomainArgs`
 */
export type AggregateDomainArgs = Prisma.AggregateDomainArgs

/**
 * @deprecated Renamed to `Prisma.DomainMinAggregateInputType`
 */
export type DomainMinAggregateInputType = Prisma.DomainMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.DomainMaxAggregateInputType`
 */
export type DomainMaxAggregateInputType = Prisma.DomainMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.DomainCountAggregateInputType`
 */
export type DomainCountAggregateInputType = Prisma.DomainCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.DomainSelect`
 */
export type DomainSelect = Prisma.DomainSelect

/**
 * @deprecated Renamed to `Prisma.DomainInclude`
 */
export type DomainInclude = Prisma.DomainInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueDomainArgs`
 */
export type FindUniqueDomainArgs = Prisma.FindUniqueDomainArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstDomainArgs`
 */
export type FindFirstDomainArgs = Prisma.FindFirstDomainArgs

/**
 * @deprecated Renamed to `Prisma.FindManyDomainArgs`
 */
export type FindManyDomainArgs = Prisma.FindManyDomainArgs

/**
 * @deprecated Renamed to `Prisma.DomainCreateArgs`
 */
export type DomainCreateArgs = Prisma.DomainCreateArgs

/**
 * @deprecated Renamed to `Prisma.DomainUpdateArgs`
 */
export type DomainUpdateArgs = Prisma.DomainUpdateArgs

/**
 * @deprecated Renamed to `Prisma.DomainUpdateManyArgs`
 */
export type DomainUpdateManyArgs = Prisma.DomainUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.DomainUpsertArgs`
 */
export type DomainUpsertArgs = Prisma.DomainUpsertArgs

/**
 * @deprecated Renamed to `Prisma.DomainDeleteArgs`
 */
export type DomainDeleteArgs = Prisma.DomainDeleteArgs

/**
 * @deprecated Renamed to `Prisma.DomainDeleteManyArgs`
 */
export type DomainDeleteManyArgs = Prisma.DomainDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateConsumeable`
 */
export type AggregateConsumeable = Prisma.AggregateConsumeable

/**
 * @deprecated Renamed to `Prisma.ConsumeableAvgAggregateOutputType`
 */
export type ConsumeableAvgAggregateOutputType = Prisma.ConsumeableAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableSumAggregateOutputType`
 */
export type ConsumeableSumAggregateOutputType = Prisma.ConsumeableSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableMinAggregateOutputType`
 */
export type ConsumeableMinAggregateOutputType = Prisma.ConsumeableMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableMaxAggregateOutputType`
 */
export type ConsumeableMaxAggregateOutputType = Prisma.ConsumeableMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableCountAggregateOutputType`
 */
export type ConsumeableCountAggregateOutputType = Prisma.ConsumeableCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateConsumeableArgs`
 */
export type AggregateConsumeableArgs = Prisma.AggregateConsumeableArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableAvgAggregateInputType`
 */
export type ConsumeableAvgAggregateInputType = Prisma.ConsumeableAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableSumAggregateInputType`
 */
export type ConsumeableSumAggregateInputType = Prisma.ConsumeableSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableMinAggregateInputType`
 */
export type ConsumeableMinAggregateInputType = Prisma.ConsumeableMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableMaxAggregateInputType`
 */
export type ConsumeableMaxAggregateInputType = Prisma.ConsumeableMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableCountAggregateInputType`
 */
export type ConsumeableCountAggregateInputType = Prisma.ConsumeableCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableSelect`
 */
export type ConsumeableSelect = Prisma.ConsumeableSelect

/**
 * @deprecated Renamed to `Prisma.ConsumeableInclude`
 */
export type ConsumeableInclude = Prisma.ConsumeableInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueConsumeableArgs`
 */
export type FindUniqueConsumeableArgs = Prisma.FindUniqueConsumeableArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstConsumeableArgs`
 */
export type FindFirstConsumeableArgs = Prisma.FindFirstConsumeableArgs

/**
 * @deprecated Renamed to `Prisma.FindManyConsumeableArgs`
 */
export type FindManyConsumeableArgs = Prisma.FindManyConsumeableArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableCreateArgs`
 */
export type ConsumeableCreateArgs = Prisma.ConsumeableCreateArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpdateArgs`
 */
export type ConsumeableUpdateArgs = Prisma.ConsumeableUpdateArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpdateManyArgs`
 */
export type ConsumeableUpdateManyArgs = Prisma.ConsumeableUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpsertArgs`
 */
export type ConsumeableUpsertArgs = Prisma.ConsumeableUpsertArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableDeleteArgs`
 */
export type ConsumeableDeleteArgs = Prisma.ConsumeableDeleteArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableDeleteManyArgs`
 */
export type ConsumeableDeleteManyArgs = Prisma.ConsumeableDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateConsumeableRecipe`
 */
export type AggregateConsumeableRecipe = Prisma.AggregateConsumeableRecipe

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeMinAggregateOutputType`
 */
export type ConsumeableRecipeMinAggregateOutputType = Prisma.ConsumeableRecipeMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeMaxAggregateOutputType`
 */
export type ConsumeableRecipeMaxAggregateOutputType = Prisma.ConsumeableRecipeMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCountAggregateOutputType`
 */
export type ConsumeableRecipeCountAggregateOutputType = Prisma.ConsumeableRecipeCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateConsumeableRecipeArgs`
 */
export type AggregateConsumeableRecipeArgs = Prisma.AggregateConsumeableRecipeArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeMinAggregateInputType`
 */
export type ConsumeableRecipeMinAggregateInputType = Prisma.ConsumeableRecipeMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeMaxAggregateInputType`
 */
export type ConsumeableRecipeMaxAggregateInputType = Prisma.ConsumeableRecipeMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCountAggregateInputType`
 */
export type ConsumeableRecipeCountAggregateInputType = Prisma.ConsumeableRecipeCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeSelect`
 */
export type ConsumeableRecipeSelect = Prisma.ConsumeableRecipeSelect

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeInclude`
 */
export type ConsumeableRecipeInclude = Prisma.ConsumeableRecipeInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueConsumeableRecipeArgs`
 */
export type FindUniqueConsumeableRecipeArgs = Prisma.FindUniqueConsumeableRecipeArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstConsumeableRecipeArgs`
 */
export type FindFirstConsumeableRecipeArgs = Prisma.FindFirstConsumeableRecipeArgs

/**
 * @deprecated Renamed to `Prisma.FindManyConsumeableRecipeArgs`
 */
export type FindManyConsumeableRecipeArgs = Prisma.FindManyConsumeableRecipeArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateArgs`
 */
export type ConsumeableRecipeCreateArgs = Prisma.ConsumeableRecipeCreateArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateArgs`
 */
export type ConsumeableRecipeUpdateArgs = Prisma.ConsumeableRecipeUpdateArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateManyArgs`
 */
export type ConsumeableRecipeUpdateManyArgs = Prisma.ConsumeableRecipeUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpsertArgs`
 */
export type ConsumeableRecipeUpsertArgs = Prisma.ConsumeableRecipeUpsertArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeDeleteArgs`
 */
export type ConsumeableRecipeDeleteArgs = Prisma.ConsumeableRecipeDeleteArgs

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeDeleteManyArgs`
 */
export type ConsumeableRecipeDeleteManyArgs = Prisma.ConsumeableRecipeDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateProcessRecipe`
 */
export type AggregateProcessRecipe = Prisma.AggregateProcessRecipe

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeAvgAggregateOutputType`
 */
export type ProcessRecipeAvgAggregateOutputType = Prisma.ProcessRecipeAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeSumAggregateOutputType`
 */
export type ProcessRecipeSumAggregateOutputType = Prisma.ProcessRecipeSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeMinAggregateOutputType`
 */
export type ProcessRecipeMinAggregateOutputType = Prisma.ProcessRecipeMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeMaxAggregateOutputType`
 */
export type ProcessRecipeMaxAggregateOutputType = Prisma.ProcessRecipeMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeCountAggregateOutputType`
 */
export type ProcessRecipeCountAggregateOutputType = Prisma.ProcessRecipeCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateProcessRecipeArgs`
 */
export type AggregateProcessRecipeArgs = Prisma.AggregateProcessRecipeArgs

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeAvgAggregateInputType`
 */
export type ProcessRecipeAvgAggregateInputType = Prisma.ProcessRecipeAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeSumAggregateInputType`
 */
export type ProcessRecipeSumAggregateInputType = Prisma.ProcessRecipeSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeMinAggregateInputType`
 */
export type ProcessRecipeMinAggregateInputType = Prisma.ProcessRecipeMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeMaxAggregateInputType`
 */
export type ProcessRecipeMaxAggregateInputType = Prisma.ProcessRecipeMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeCountAggregateInputType`
 */
export type ProcessRecipeCountAggregateInputType = Prisma.ProcessRecipeCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeSelect`
 */
export type ProcessRecipeSelect = Prisma.ProcessRecipeSelect

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeInclude`
 */
export type ProcessRecipeInclude = Prisma.ProcessRecipeInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueProcessRecipeArgs`
 */
export type FindUniqueProcessRecipeArgs = Prisma.FindUniqueProcessRecipeArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstProcessRecipeArgs`
 */
export type FindFirstProcessRecipeArgs = Prisma.FindFirstProcessRecipeArgs

/**
 * @deprecated Renamed to `Prisma.FindManyProcessRecipeArgs`
 */
export type FindManyProcessRecipeArgs = Prisma.FindManyProcessRecipeArgs

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeCreateArgs`
 */
export type ProcessRecipeCreateArgs = Prisma.ProcessRecipeCreateArgs

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUpdateArgs`
 */
export type ProcessRecipeUpdateArgs = Prisma.ProcessRecipeUpdateArgs

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUpdateManyArgs`
 */
export type ProcessRecipeUpdateManyArgs = Prisma.ProcessRecipeUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUpsertArgs`
 */
export type ProcessRecipeUpsertArgs = Prisma.ProcessRecipeUpsertArgs

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeDeleteArgs`
 */
export type ProcessRecipeDeleteArgs = Prisma.ProcessRecipeDeleteArgs

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeDeleteManyArgs`
 */
export type ProcessRecipeDeleteManyArgs = Prisma.ProcessRecipeDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateForgeRecipe`
 */
export type AggregateForgeRecipe = Prisma.AggregateForgeRecipe

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeAvgAggregateOutputType`
 */
export type ForgeRecipeAvgAggregateOutputType = Prisma.ForgeRecipeAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeSumAggregateOutputType`
 */
export type ForgeRecipeSumAggregateOutputType = Prisma.ForgeRecipeSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeMinAggregateOutputType`
 */
export type ForgeRecipeMinAggregateOutputType = Prisma.ForgeRecipeMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeMaxAggregateOutputType`
 */
export type ForgeRecipeMaxAggregateOutputType = Prisma.ForgeRecipeMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCountAggregateOutputType`
 */
export type ForgeRecipeCountAggregateOutputType = Prisma.ForgeRecipeCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateForgeRecipeArgs`
 */
export type AggregateForgeRecipeArgs = Prisma.AggregateForgeRecipeArgs

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeAvgAggregateInputType`
 */
export type ForgeRecipeAvgAggregateInputType = Prisma.ForgeRecipeAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeSumAggregateInputType`
 */
export type ForgeRecipeSumAggregateInputType = Prisma.ForgeRecipeSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeMinAggregateInputType`
 */
export type ForgeRecipeMinAggregateInputType = Prisma.ForgeRecipeMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeMaxAggregateInputType`
 */
export type ForgeRecipeMaxAggregateInputType = Prisma.ForgeRecipeMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCountAggregateInputType`
 */
export type ForgeRecipeCountAggregateInputType = Prisma.ForgeRecipeCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeSelect`
 */
export type ForgeRecipeSelect = Prisma.ForgeRecipeSelect

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeInclude`
 */
export type ForgeRecipeInclude = Prisma.ForgeRecipeInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueForgeRecipeArgs`
 */
export type FindUniqueForgeRecipeArgs = Prisma.FindUniqueForgeRecipeArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstForgeRecipeArgs`
 */
export type FindFirstForgeRecipeArgs = Prisma.FindFirstForgeRecipeArgs

/**
 * @deprecated Renamed to `Prisma.FindManyForgeRecipeArgs`
 */
export type FindManyForgeRecipeArgs = Prisma.FindManyForgeRecipeArgs

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateArgs`
 */
export type ForgeRecipeCreateArgs = Prisma.ForgeRecipeCreateArgs

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpdateArgs`
 */
export type ForgeRecipeUpdateArgs = Prisma.ForgeRecipeUpdateArgs

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpdateManyArgs`
 */
export type ForgeRecipeUpdateManyArgs = Prisma.ForgeRecipeUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpsertArgs`
 */
export type ForgeRecipeUpsertArgs = Prisma.ForgeRecipeUpsertArgs

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeDeleteArgs`
 */
export type ForgeRecipeDeleteArgs = Prisma.ForgeRecipeDeleteArgs

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeDeleteManyArgs`
 */
export type ForgeRecipeDeleteManyArgs = Prisma.ForgeRecipeDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateArtifactSet`
 */
export type AggregateArtifactSet = Prisma.AggregateArtifactSet

/**
 * @deprecated Renamed to `Prisma.ArtifactSetAvgAggregateOutputType`
 */
export type ArtifactSetAvgAggregateOutputType = Prisma.ArtifactSetAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSetSumAggregateOutputType`
 */
export type ArtifactSetSumAggregateOutputType = Prisma.ArtifactSetSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSetMinAggregateOutputType`
 */
export type ArtifactSetMinAggregateOutputType = Prisma.ArtifactSetMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSetMaxAggregateOutputType`
 */
export type ArtifactSetMaxAggregateOutputType = Prisma.ArtifactSetMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSetCountAggregateOutputType`
 */
export type ArtifactSetCountAggregateOutputType = Prisma.ArtifactSetCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateArtifactSetArgs`
 */
export type AggregateArtifactSetArgs = Prisma.AggregateArtifactSetArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactSetAvgAggregateInputType`
 */
export type ArtifactSetAvgAggregateInputType = Prisma.ArtifactSetAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSetSumAggregateInputType`
 */
export type ArtifactSetSumAggregateInputType = Prisma.ArtifactSetSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSetMinAggregateInputType`
 */
export type ArtifactSetMinAggregateInputType = Prisma.ArtifactSetMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSetMaxAggregateInputType`
 */
export type ArtifactSetMaxAggregateInputType = Prisma.ArtifactSetMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSetCountAggregateInputType`
 */
export type ArtifactSetCountAggregateInputType = Prisma.ArtifactSetCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSetSelect`
 */
export type ArtifactSetSelect = Prisma.ArtifactSetSelect

/**
 * @deprecated Renamed to `Prisma.ArtifactSetInclude`
 */
export type ArtifactSetInclude = Prisma.ArtifactSetInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueArtifactSetArgs`
 */
export type FindUniqueArtifactSetArgs = Prisma.FindUniqueArtifactSetArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstArtifactSetArgs`
 */
export type FindFirstArtifactSetArgs = Prisma.FindFirstArtifactSetArgs

/**
 * @deprecated Renamed to `Prisma.FindManyArtifactSetArgs`
 */
export type FindManyArtifactSetArgs = Prisma.FindManyArtifactSetArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactSetCreateArgs`
 */
export type ArtifactSetCreateArgs = Prisma.ArtifactSetCreateArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUpdateArgs`
 */
export type ArtifactSetUpdateArgs = Prisma.ArtifactSetUpdateArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUpdateManyArgs`
 */
export type ArtifactSetUpdateManyArgs = Prisma.ArtifactSetUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUpsertArgs`
 */
export type ArtifactSetUpsertArgs = Prisma.ArtifactSetUpsertArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactSetDeleteArgs`
 */
export type ArtifactSetDeleteArgs = Prisma.ArtifactSetDeleteArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactSetDeleteManyArgs`
 */
export type ArtifactSetDeleteManyArgs = Prisma.ArtifactSetDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateArtifact`
 */
export type AggregateArtifact = Prisma.AggregateArtifact

/**
 * @deprecated Renamed to `Prisma.ArtifactAvgAggregateOutputType`
 */
export type ArtifactAvgAggregateOutputType = Prisma.ArtifactAvgAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSumAggregateOutputType`
 */
export type ArtifactSumAggregateOutputType = Prisma.ArtifactSumAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ArtifactMinAggregateOutputType`
 */
export type ArtifactMinAggregateOutputType = Prisma.ArtifactMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ArtifactMaxAggregateOutputType`
 */
export type ArtifactMaxAggregateOutputType = Prisma.ArtifactMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.ArtifactCountAggregateOutputType`
 */
export type ArtifactCountAggregateOutputType = Prisma.ArtifactCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateArtifactArgs`
 */
export type AggregateArtifactArgs = Prisma.AggregateArtifactArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactAvgAggregateInputType`
 */
export type ArtifactAvgAggregateInputType = Prisma.ArtifactAvgAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSumAggregateInputType`
 */
export type ArtifactSumAggregateInputType = Prisma.ArtifactSumAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ArtifactMinAggregateInputType`
 */
export type ArtifactMinAggregateInputType = Prisma.ArtifactMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ArtifactMaxAggregateInputType`
 */
export type ArtifactMaxAggregateInputType = Prisma.ArtifactMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ArtifactCountAggregateInputType`
 */
export type ArtifactCountAggregateInputType = Prisma.ArtifactCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.ArtifactSelect`
 */
export type ArtifactSelect = Prisma.ArtifactSelect

/**
 * @deprecated Renamed to `Prisma.ArtifactInclude`
 */
export type ArtifactInclude = Prisma.ArtifactInclude

/**
 * @deprecated Renamed to `Prisma.FindUniqueArtifactArgs`
 */
export type FindUniqueArtifactArgs = Prisma.FindUniqueArtifactArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstArtifactArgs`
 */
export type FindFirstArtifactArgs = Prisma.FindFirstArtifactArgs

/**
 * @deprecated Renamed to `Prisma.FindManyArtifactArgs`
 */
export type FindManyArtifactArgs = Prisma.FindManyArtifactArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactCreateArgs`
 */
export type ArtifactCreateArgs = Prisma.ArtifactCreateArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateArgs`
 */
export type ArtifactUpdateArgs = Prisma.ArtifactUpdateArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateManyArgs`
 */
export type ArtifactUpdateManyArgs = Prisma.ArtifactUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactUpsertArgs`
 */
export type ArtifactUpsertArgs = Prisma.ArtifactUpsertArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactDeleteArgs`
 */
export type ArtifactDeleteArgs = Prisma.ArtifactDeleteArgs

/**
 * @deprecated Renamed to `Prisma.ArtifactDeleteManyArgs`
 */
export type ArtifactDeleteManyArgs = Prisma.ArtifactDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.AggregateGadget`
 */
export type AggregateGadget = Prisma.AggregateGadget

/**
 * @deprecated Renamed to `Prisma.GadgetMinAggregateOutputType`
 */
export type GadgetMinAggregateOutputType = Prisma.GadgetMinAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.GadgetMaxAggregateOutputType`
 */
export type GadgetMaxAggregateOutputType = Prisma.GadgetMaxAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.GadgetCountAggregateOutputType`
 */
export type GadgetCountAggregateOutputType = Prisma.GadgetCountAggregateOutputType

/**
 * @deprecated Renamed to `Prisma.AggregateGadgetArgs`
 */
export type AggregateGadgetArgs = Prisma.AggregateGadgetArgs

/**
 * @deprecated Renamed to `Prisma.GadgetMinAggregateInputType`
 */
export type GadgetMinAggregateInputType = Prisma.GadgetMinAggregateInputType

/**
 * @deprecated Renamed to `Prisma.GadgetMaxAggregateInputType`
 */
export type GadgetMaxAggregateInputType = Prisma.GadgetMaxAggregateInputType

/**
 * @deprecated Renamed to `Prisma.GadgetCountAggregateInputType`
 */
export type GadgetCountAggregateInputType = Prisma.GadgetCountAggregateInputType

/**
 * @deprecated Renamed to `Prisma.GadgetSelect`
 */
export type GadgetSelect = Prisma.GadgetSelect

/**
 * @deprecated Renamed to `Prisma.FindUniqueGadgetArgs`
 */
export type FindUniqueGadgetArgs = Prisma.FindUniqueGadgetArgs

/**
 * @deprecated Renamed to `Prisma.FindFirstGadgetArgs`
 */
export type FindFirstGadgetArgs = Prisma.FindFirstGadgetArgs

/**
 * @deprecated Renamed to `Prisma.FindManyGadgetArgs`
 */
export type FindManyGadgetArgs = Prisma.FindManyGadgetArgs

/**
 * @deprecated Renamed to `Prisma.GadgetCreateArgs`
 */
export type GadgetCreateArgs = Prisma.GadgetCreateArgs

/**
 * @deprecated Renamed to `Prisma.GadgetUpdateArgs`
 */
export type GadgetUpdateArgs = Prisma.GadgetUpdateArgs

/**
 * @deprecated Renamed to `Prisma.GadgetUpdateManyArgs`
 */
export type GadgetUpdateManyArgs = Prisma.GadgetUpdateManyArgs

/**
 * @deprecated Renamed to `Prisma.GadgetUpsertArgs`
 */
export type GadgetUpsertArgs = Prisma.GadgetUpsertArgs

/**
 * @deprecated Renamed to `Prisma.GadgetDeleteArgs`
 */
export type GadgetDeleteArgs = Prisma.GadgetDeleteArgs

/**
 * @deprecated Renamed to `Prisma.GadgetDeleteManyArgs`
 */
export type GadgetDeleteManyArgs = Prisma.GadgetDeleteManyArgs

/**
 * @deprecated Renamed to `Prisma.UserWhereInput`
 */
export type UserWhereInput = Prisma.UserWhereInput

/**
 * @deprecated Renamed to `Prisma.UserOrderByInput`
 */
export type UserOrderByInput = Prisma.UserOrderByInput

/**
 * @deprecated Renamed to `Prisma.UserWhereUniqueInput`
 */
export type UserWhereUniqueInput = Prisma.UserWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.UserSecretWhereInput`
 */
export type UserSecretWhereInput = Prisma.UserSecretWhereInput

/**
 * @deprecated Renamed to `Prisma.UserSecretOrderByInput`
 */
export type UserSecretOrderByInput = Prisma.UserSecretOrderByInput

/**
 * @deprecated Renamed to `Prisma.UserSecretWhereUniqueInput`
 */
export type UserSecretWhereUniqueInput = Prisma.UserSecretWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.CharacterWhereInput`
 */
export type CharacterWhereInput = Prisma.CharacterWhereInput

/**
 * @deprecated Renamed to `Prisma.CharacterOrderByInput`
 */
export type CharacterOrderByInput = Prisma.CharacterOrderByInput

/**
 * @deprecated Renamed to `Prisma.CharacterWhereUniqueInput`
 */
export type CharacterWhereUniqueInput = Prisma.CharacterWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionWhereInput`
 */
export type CharacterAscensionWhereInput = Prisma.CharacterAscensionWhereInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionOrderByInput`
 */
export type CharacterAscensionOrderByInput = Prisma.CharacterAscensionOrderByInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionWhereUniqueInput`
 */
export type CharacterAscensionWhereUniqueInput = Prisma.CharacterAscensionWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileWhereInput`
 */
export type CharacterProfileWhereInput = Prisma.CharacterProfileWhereInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileOrderByInput`
 */
export type CharacterProfileOrderByInput = Prisma.CharacterProfileOrderByInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileWhereUniqueInput`
 */
export type CharacterProfileWhereUniqueInput = Prisma.CharacterProfileWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.TalentWhereInput`
 */
export type TalentWhereInput = Prisma.TalentWhereInput

/**
 * @deprecated Renamed to `Prisma.TalentOrderByInput`
 */
export type TalentOrderByInput = Prisma.TalentOrderByInput

/**
 * @deprecated Renamed to `Prisma.TalentWhereUniqueInput`
 */
export type TalentWhereUniqueInput = Prisma.TalentWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.ElementWhereInput`
 */
export type ElementWhereInput = Prisma.ElementWhereInput

/**
 * @deprecated Renamed to `Prisma.ElementOrderByInput`
 */
export type ElementOrderByInput = Prisma.ElementOrderByInput

/**
 * @deprecated Renamed to `Prisma.ElementWhereUniqueInput`
 */
export type ElementWhereUniqueInput = Prisma.ElementWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.RegionWhereInput`
 */
export type RegionWhereInput = Prisma.RegionWhereInput

/**
 * @deprecated Renamed to `Prisma.RegionOrderByInput`
 */
export type RegionOrderByInput = Prisma.RegionOrderByInput

/**
 * @deprecated Renamed to `Prisma.RegionWhereUniqueInput`
 */
export type RegionWhereUniqueInput = Prisma.RegionWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.WeaponWhereInput`
 */
export type WeaponWhereInput = Prisma.WeaponWhereInput

/**
 * @deprecated Renamed to `Prisma.WeaponOrderByInput`
 */
export type WeaponOrderByInput = Prisma.WeaponOrderByInput

/**
 * @deprecated Renamed to `Prisma.WeaponWhereUniqueInput`
 */
export type WeaponWhereUniqueInput = Prisma.WeaponWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionWhereInput`
 */
export type WeaponAscensionWhereInput = Prisma.WeaponAscensionWhereInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionOrderByInput`
 */
export type WeaponAscensionOrderByInput = Prisma.WeaponAscensionOrderByInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionWhereUniqueInput`
 */
export type WeaponAscensionWhereUniqueInput = Prisma.WeaponAscensionWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialWhereInput`
 */
export type CommonAscensionMaterialWhereInput = Prisma.CommonAscensionMaterialWhereInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialOrderByInput`
 */
export type CommonAscensionMaterialOrderByInput = Prisma.CommonAscensionMaterialOrderByInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialWhereUniqueInput`
 */
export type CommonAscensionMaterialWhereUniqueInput = Prisma.CommonAscensionMaterialWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialWhereInput`
 */
export type WeaponAscensionMaterialWhereInput = Prisma.WeaponAscensionMaterialWhereInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialOrderByInput`
 */
export type WeaponAscensionMaterialOrderByInput = Prisma.WeaponAscensionMaterialOrderByInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialWhereUniqueInput`
 */
export type WeaponAscensionMaterialWhereUniqueInput = Prisma.WeaponAscensionMaterialWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialWhereInput`
 */
export type WeaponEnhancementMaterialWhereInput = Prisma.WeaponEnhancementMaterialWhereInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialOrderByInput`
 */
export type WeaponEnhancementMaterialOrderByInput = Prisma.WeaponEnhancementMaterialOrderByInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialWhereUniqueInput`
 */
export type WeaponEnhancementMaterialWhereUniqueInput = Prisma.WeaponEnhancementMaterialWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialWhereInput`
 */
export type CharacterAscensionMaterialWhereInput = Prisma.CharacterAscensionMaterialWhereInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialOrderByInput`
 */
export type CharacterAscensionMaterialOrderByInput = Prisma.CharacterAscensionMaterialOrderByInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialWhereUniqueInput`
 */
export type CharacterAscensionMaterialWhereUniqueInput = Prisma.CharacterAscensionMaterialWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialWhereInput`
 */
export type TalentLevelUpMaterialWhereInput = Prisma.TalentLevelUpMaterialWhereInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialOrderByInput`
 */
export type TalentLevelUpMaterialOrderByInput = Prisma.TalentLevelUpMaterialOrderByInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialWhereUniqueInput`
 */
export type TalentLevelUpMaterialWhereUniqueInput = Prisma.TalentLevelUpMaterialWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialWhereInput`
 */
export type CraftingMaterialWhereInput = Prisma.CraftingMaterialWhereInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialOrderByInput`
 */
export type CraftingMaterialOrderByInput = Prisma.CraftingMaterialOrderByInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialWhereUniqueInput`
 */
export type CraftingMaterialWhereUniqueInput = Prisma.CraftingMaterialWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialWhereInput`
 */
export type CookingMaterialWhereInput = Prisma.CookingMaterialWhereInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialOrderByInput`
 */
export type CookingMaterialOrderByInput = Prisma.CookingMaterialOrderByInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialWhereUniqueInput`
 */
export type CookingMaterialWhereUniqueInput = Prisma.CookingMaterialWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.CommonMaterialWhereInput`
 */
export type CommonMaterialWhereInput = Prisma.CommonMaterialWhereInput

/**
 * @deprecated Renamed to `Prisma.CommonMaterialOrderByInput`
 */
export type CommonMaterialOrderByInput = Prisma.CommonMaterialOrderByInput

/**
 * @deprecated Renamed to `Prisma.CommonMaterialWhereUniqueInput`
 */
export type CommonMaterialWhereUniqueInput = Prisma.CommonMaterialWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.DomainWhereInput`
 */
export type DomainWhereInput = Prisma.DomainWhereInput

/**
 * @deprecated Renamed to `Prisma.DomainOrderByInput`
 */
export type DomainOrderByInput = Prisma.DomainOrderByInput

/**
 * @deprecated Renamed to `Prisma.DomainWhereUniqueInput`
 */
export type DomainWhereUniqueInput = Prisma.DomainWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableWhereInput`
 */
export type ConsumeableWhereInput = Prisma.ConsumeableWhereInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableOrderByInput`
 */
export type ConsumeableOrderByInput = Prisma.ConsumeableOrderByInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableWhereUniqueInput`
 */
export type ConsumeableWhereUniqueInput = Prisma.ConsumeableWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeWhereInput`
 */
export type ConsumeableRecipeWhereInput = Prisma.ConsumeableRecipeWhereInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeOrderByInput`
 */
export type ConsumeableRecipeOrderByInput = Prisma.ConsumeableRecipeOrderByInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeWhereUniqueInput`
 */
export type ConsumeableRecipeWhereUniqueInput = Prisma.ConsumeableRecipeWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeWhereInput`
 */
export type ProcessRecipeWhereInput = Prisma.ProcessRecipeWhereInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeOrderByInput`
 */
export type ProcessRecipeOrderByInput = Prisma.ProcessRecipeOrderByInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeWhereUniqueInput`
 */
export type ProcessRecipeWhereUniqueInput = Prisma.ProcessRecipeWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeWhereInput`
 */
export type ForgeRecipeWhereInput = Prisma.ForgeRecipeWhereInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeOrderByInput`
 */
export type ForgeRecipeOrderByInput = Prisma.ForgeRecipeOrderByInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeWhereUniqueInput`
 */
export type ForgeRecipeWhereUniqueInput = Prisma.ForgeRecipeWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetWhereInput`
 */
export type ArtifactSetWhereInput = Prisma.ArtifactSetWhereInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetOrderByInput`
 */
export type ArtifactSetOrderByInput = Prisma.ArtifactSetOrderByInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetWhereUniqueInput`
 */
export type ArtifactSetWhereUniqueInput = Prisma.ArtifactSetWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.ArtifactWhereInput`
 */
export type ArtifactWhereInput = Prisma.ArtifactWhereInput

/**
 * @deprecated Renamed to `Prisma.ArtifactOrderByInput`
 */
export type ArtifactOrderByInput = Prisma.ArtifactOrderByInput

/**
 * @deprecated Renamed to `Prisma.ArtifactWhereUniqueInput`
 */
export type ArtifactWhereUniqueInput = Prisma.ArtifactWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.GadgetWhereInput`
 */
export type GadgetWhereInput = Prisma.GadgetWhereInput

/**
 * @deprecated Renamed to `Prisma.GadgetOrderByInput`
 */
export type GadgetOrderByInput = Prisma.GadgetOrderByInput

/**
 * @deprecated Renamed to `Prisma.GadgetWhereUniqueInput`
 */
export type GadgetWhereUniqueInput = Prisma.GadgetWhereUniqueInput

/**
 * @deprecated Renamed to `Prisma.UserCreateInput`
 */
export type UserCreateInput = Prisma.UserCreateInput

/**
 * @deprecated Renamed to `Prisma.UserUncheckedCreateInput`
 */
export type UserUncheckedCreateInput = Prisma.UserUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.UserUpdateInput`
 */
export type UserUpdateInput = Prisma.UserUpdateInput

/**
 * @deprecated Renamed to `Prisma.UserUncheckedUpdateInput`
 */
export type UserUncheckedUpdateInput = Prisma.UserUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.UserUpdateManyMutationInput`
 */
export type UserUpdateManyMutationInput = Prisma.UserUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.UserUncheckedUpdateManyInput`
 */
export type UserUncheckedUpdateManyInput = Prisma.UserUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.UserSecretCreateInput`
 */
export type UserSecretCreateInput = Prisma.UserSecretCreateInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUncheckedCreateInput`
 */
export type UserSecretUncheckedCreateInput = Prisma.UserSecretUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUpdateInput`
 */
export type UserSecretUpdateInput = Prisma.UserSecretUpdateInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUncheckedUpdateInput`
 */
export type UserSecretUncheckedUpdateInput = Prisma.UserSecretUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUpdateManyMutationInput`
 */
export type UserSecretUpdateManyMutationInput = Prisma.UserSecretUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUncheckedUpdateManyInput`
 */
export type UserSecretUncheckedUpdateManyInput = Prisma.UserSecretUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateInput`
 */
export type CharacterCreateInput = Prisma.CharacterCreateInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedCreateInput`
 */
export type CharacterUncheckedCreateInput = Prisma.CharacterUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateInput`
 */
export type CharacterUpdateInput = Prisma.CharacterUpdateInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedUpdateInput`
 */
export type CharacterUncheckedUpdateInput = Prisma.CharacterUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateManyMutationInput`
 */
export type CharacterUpdateManyMutationInput = Prisma.CharacterUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedUpdateManyInput`
 */
export type CharacterUncheckedUpdateManyInput = Prisma.CharacterUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateInput`
 */
export type CharacterAscensionCreateInput = Prisma.CharacterAscensionCreateInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedCreateInput`
 */
export type CharacterAscensionUncheckedCreateInput = Prisma.CharacterAscensionUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateInput`
 */
export type CharacterAscensionUpdateInput = Prisma.CharacterAscensionUpdateInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedUpdateInput`
 */
export type CharacterAscensionUncheckedUpdateInput = Prisma.CharacterAscensionUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateManyMutationInput`
 */
export type CharacterAscensionUpdateManyMutationInput = Prisma.CharacterAscensionUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedUpdateManyInput`
 */
export type CharacterAscensionUncheckedUpdateManyInput = Prisma.CharacterAscensionUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateInput`
 */
export type CharacterProfileCreateInput = Prisma.CharacterProfileCreateInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedCreateInput`
 */
export type CharacterProfileUncheckedCreateInput = Prisma.CharacterProfileUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateInput`
 */
export type CharacterProfileUpdateInput = Prisma.CharacterProfileUpdateInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedUpdateInput`
 */
export type CharacterProfileUncheckedUpdateInput = Prisma.CharacterProfileUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateManyMutationInput`
 */
export type CharacterProfileUpdateManyMutationInput = Prisma.CharacterProfileUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedUpdateManyInput`
 */
export type CharacterProfileUncheckedUpdateManyInput = Prisma.CharacterProfileUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.TalentCreateInput`
 */
export type TalentCreateInput = Prisma.TalentCreateInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedCreateInput`
 */
export type TalentUncheckedCreateInput = Prisma.TalentUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.TalentUpdateInput`
 */
export type TalentUpdateInput = Prisma.TalentUpdateInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedUpdateInput`
 */
export type TalentUncheckedUpdateInput = Prisma.TalentUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.TalentUpdateManyMutationInput`
 */
export type TalentUpdateManyMutationInput = Prisma.TalentUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedUpdateManyInput`
 */
export type TalentUncheckedUpdateManyInput = Prisma.TalentUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.ElementCreateInput`
 */
export type ElementCreateInput = Prisma.ElementCreateInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedCreateInput`
 */
export type ElementUncheckedCreateInput = Prisma.ElementUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.ElementUpdateInput`
 */
export type ElementUpdateInput = Prisma.ElementUpdateInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedUpdateInput`
 */
export type ElementUncheckedUpdateInput = Prisma.ElementUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.ElementUpdateManyMutationInput`
 */
export type ElementUpdateManyMutationInput = Prisma.ElementUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedUpdateManyInput`
 */
export type ElementUncheckedUpdateManyInput = Prisma.ElementUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.RegionCreateInput`
 */
export type RegionCreateInput = Prisma.RegionCreateInput

/**
 * @deprecated Renamed to `Prisma.RegionUncheckedCreateInput`
 */
export type RegionUncheckedCreateInput = Prisma.RegionUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.RegionUpdateInput`
 */
export type RegionUpdateInput = Prisma.RegionUpdateInput

/**
 * @deprecated Renamed to `Prisma.RegionUncheckedUpdateInput`
 */
export type RegionUncheckedUpdateInput = Prisma.RegionUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.RegionUpdateManyMutationInput`
 */
export type RegionUpdateManyMutationInput = Prisma.RegionUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.RegionUncheckedUpdateManyInput`
 */
export type RegionUncheckedUpdateManyInput = Prisma.RegionUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.WeaponCreateInput`
 */
export type WeaponCreateInput = Prisma.WeaponCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponUncheckedCreateInput`
 */
export type WeaponUncheckedCreateInput = Prisma.WeaponUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponUpdateInput`
 */
export type WeaponUpdateInput = Prisma.WeaponUpdateInput

/**
 * @deprecated Renamed to `Prisma.WeaponUncheckedUpdateInput`
 */
export type WeaponUncheckedUpdateInput = Prisma.WeaponUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.WeaponUpdateManyMutationInput`
 */
export type WeaponUpdateManyMutationInput = Prisma.WeaponUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.WeaponUncheckedUpdateManyInput`
 */
export type WeaponUncheckedUpdateManyInput = Prisma.WeaponUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateInput`
 */
export type WeaponAscensionCreateInput = Prisma.WeaponAscensionCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedCreateInput`
 */
export type WeaponAscensionUncheckedCreateInput = Prisma.WeaponAscensionUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateInput`
 */
export type WeaponAscensionUpdateInput = Prisma.WeaponAscensionUpdateInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedUpdateInput`
 */
export type WeaponAscensionUncheckedUpdateInput = Prisma.WeaponAscensionUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateManyMutationInput`
 */
export type WeaponAscensionUpdateManyMutationInput = Prisma.WeaponAscensionUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedUpdateManyInput`
 */
export type WeaponAscensionUncheckedUpdateManyInput = Prisma.WeaponAscensionUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialCreateInput`
 */
export type CommonAscensionMaterialCreateInput = Prisma.CommonAscensionMaterialCreateInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUncheckedCreateInput`
 */
export type CommonAscensionMaterialUncheckedCreateInput = Prisma.CommonAscensionMaterialUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateInput`
 */
export type CommonAscensionMaterialUpdateInput = Prisma.CommonAscensionMaterialUpdateInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUncheckedUpdateInput`
 */
export type CommonAscensionMaterialUncheckedUpdateInput = Prisma.CommonAscensionMaterialUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateManyMutationInput`
 */
export type CommonAscensionMaterialUpdateManyMutationInput = Prisma.CommonAscensionMaterialUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUncheckedUpdateManyInput`
 */
export type CommonAscensionMaterialUncheckedUpdateManyInput = Prisma.CommonAscensionMaterialUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialCreateInput`
 */
export type WeaponAscensionMaterialCreateInput = Prisma.WeaponAscensionMaterialCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUncheckedCreateInput`
 */
export type WeaponAscensionMaterialUncheckedCreateInput = Prisma.WeaponAscensionMaterialUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpdateInput`
 */
export type WeaponAscensionMaterialUpdateInput = Prisma.WeaponAscensionMaterialUpdateInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUncheckedUpdateInput`
 */
export type WeaponAscensionMaterialUncheckedUpdateInput = Prisma.WeaponAscensionMaterialUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpdateManyMutationInput`
 */
export type WeaponAscensionMaterialUpdateManyMutationInput = Prisma.WeaponAscensionMaterialUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUncheckedUpdateManyInput`
 */
export type WeaponAscensionMaterialUncheckedUpdateManyInput = Prisma.WeaponAscensionMaterialUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialCreateInput`
 */
export type WeaponEnhancementMaterialCreateInput = Prisma.WeaponEnhancementMaterialCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUncheckedCreateInput`
 */
export type WeaponEnhancementMaterialUncheckedCreateInput = Prisma.WeaponEnhancementMaterialUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpdateInput`
 */
export type WeaponEnhancementMaterialUpdateInput = Prisma.WeaponEnhancementMaterialUpdateInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUncheckedUpdateInput`
 */
export type WeaponEnhancementMaterialUncheckedUpdateInput = Prisma.WeaponEnhancementMaterialUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpdateManyMutationInput`
 */
export type WeaponEnhancementMaterialUpdateManyMutationInput = Prisma.WeaponEnhancementMaterialUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUncheckedUpdateManyInput`
 */
export type WeaponEnhancementMaterialUncheckedUpdateManyInput = Prisma.WeaponEnhancementMaterialUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialCreateInput`
 */
export type CharacterAscensionMaterialCreateInput = Prisma.CharacterAscensionMaterialCreateInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUncheckedCreateInput`
 */
export type CharacterAscensionMaterialUncheckedCreateInput = Prisma.CharacterAscensionMaterialUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUpdateInput`
 */
export type CharacterAscensionMaterialUpdateInput = Prisma.CharacterAscensionMaterialUpdateInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUncheckedUpdateInput`
 */
export type CharacterAscensionMaterialUncheckedUpdateInput = Prisma.CharacterAscensionMaterialUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUpdateManyMutationInput`
 */
export type CharacterAscensionMaterialUpdateManyMutationInput = Prisma.CharacterAscensionMaterialUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUncheckedUpdateManyInput`
 */
export type CharacterAscensionMaterialUncheckedUpdateManyInput = Prisma.CharacterAscensionMaterialUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialCreateInput`
 */
export type TalentLevelUpMaterialCreateInput = Prisma.TalentLevelUpMaterialCreateInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUncheckedCreateInput`
 */
export type TalentLevelUpMaterialUncheckedCreateInput = Prisma.TalentLevelUpMaterialUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpdateInput`
 */
export type TalentLevelUpMaterialUpdateInput = Prisma.TalentLevelUpMaterialUpdateInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUncheckedUpdateInput`
 */
export type TalentLevelUpMaterialUncheckedUpdateInput = Prisma.TalentLevelUpMaterialUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpdateManyMutationInput`
 */
export type TalentLevelUpMaterialUpdateManyMutationInput = Prisma.TalentLevelUpMaterialUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUncheckedUpdateManyInput`
 */
export type TalentLevelUpMaterialUncheckedUpdateManyInput = Prisma.TalentLevelUpMaterialUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialCreateInput`
 */
export type CraftingMaterialCreateInput = Prisma.CraftingMaterialCreateInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUncheckedCreateInput`
 */
export type CraftingMaterialUncheckedCreateInput = Prisma.CraftingMaterialUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUpdateInput`
 */
export type CraftingMaterialUpdateInput = Prisma.CraftingMaterialUpdateInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUncheckedUpdateInput`
 */
export type CraftingMaterialUncheckedUpdateInput = Prisma.CraftingMaterialUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUpdateManyMutationInput`
 */
export type CraftingMaterialUpdateManyMutationInput = Prisma.CraftingMaterialUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUncheckedUpdateManyInput`
 */
export type CraftingMaterialUncheckedUpdateManyInput = Prisma.CraftingMaterialUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialCreateInput`
 */
export type CookingMaterialCreateInput = Prisma.CookingMaterialCreateInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUncheckedCreateInput`
 */
export type CookingMaterialUncheckedCreateInput = Prisma.CookingMaterialUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpdateInput`
 */
export type CookingMaterialUpdateInput = Prisma.CookingMaterialUpdateInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUncheckedUpdateInput`
 */
export type CookingMaterialUncheckedUpdateInput = Prisma.CookingMaterialUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpdateManyMutationInput`
 */
export type CookingMaterialUpdateManyMutationInput = Prisma.CookingMaterialUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUncheckedUpdateManyInput`
 */
export type CookingMaterialUncheckedUpdateManyInput = Prisma.CookingMaterialUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.CommonMaterialCreateInput`
 */
export type CommonMaterialCreateInput = Prisma.CommonMaterialCreateInput

/**
 * @deprecated Renamed to `Prisma.CommonMaterialUncheckedCreateInput`
 */
export type CommonMaterialUncheckedCreateInput = Prisma.CommonMaterialUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.CommonMaterialUpdateInput`
 */
export type CommonMaterialUpdateInput = Prisma.CommonMaterialUpdateInput

/**
 * @deprecated Renamed to `Prisma.CommonMaterialUncheckedUpdateInput`
 */
export type CommonMaterialUncheckedUpdateInput = Prisma.CommonMaterialUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.CommonMaterialUpdateManyMutationInput`
 */
export type CommonMaterialUpdateManyMutationInput = Prisma.CommonMaterialUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.CommonMaterialUncheckedUpdateManyInput`
 */
export type CommonMaterialUncheckedUpdateManyInput = Prisma.CommonMaterialUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateInput`
 */
export type DomainCreateInput = Prisma.DomainCreateInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedCreateInput`
 */
export type DomainUncheckedCreateInput = Prisma.DomainUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateInput`
 */
export type DomainUpdateInput = Prisma.DomainUpdateInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedUpdateInput`
 */
export type DomainUncheckedUpdateInput = Prisma.DomainUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateManyMutationInput`
 */
export type DomainUpdateManyMutationInput = Prisma.DomainUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedUpdateManyInput`
 */
export type DomainUncheckedUpdateManyInput = Prisma.DomainUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableCreateInput`
 */
export type ConsumeableCreateInput = Prisma.ConsumeableCreateInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUncheckedCreateInput`
 */
export type ConsumeableUncheckedCreateInput = Prisma.ConsumeableUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpdateInput`
 */
export type ConsumeableUpdateInput = Prisma.ConsumeableUpdateInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUncheckedUpdateInput`
 */
export type ConsumeableUncheckedUpdateInput = Prisma.ConsumeableUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpdateManyMutationInput`
 */
export type ConsumeableUpdateManyMutationInput = Prisma.ConsumeableUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUncheckedUpdateManyInput`
 */
export type ConsumeableUncheckedUpdateManyInput = Prisma.ConsumeableUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateInput`
 */
export type ConsumeableRecipeCreateInput = Prisma.ConsumeableRecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedCreateInput`
 */
export type ConsumeableRecipeUncheckedCreateInput = Prisma.ConsumeableRecipeUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateInput`
 */
export type ConsumeableRecipeUpdateInput = Prisma.ConsumeableRecipeUpdateInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedUpdateInput`
 */
export type ConsumeableRecipeUncheckedUpdateInput = Prisma.ConsumeableRecipeUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateManyMutationInput`
 */
export type ConsumeableRecipeUpdateManyMutationInput = Prisma.ConsumeableRecipeUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedUpdateManyInput`
 */
export type ConsumeableRecipeUncheckedUpdateManyInput = Prisma.ConsumeableRecipeUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeCreateInput`
 */
export type ProcessRecipeCreateInput = Prisma.ProcessRecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUncheckedCreateInput`
 */
export type ProcessRecipeUncheckedCreateInput = Prisma.ProcessRecipeUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUpdateInput`
 */
export type ProcessRecipeUpdateInput = Prisma.ProcessRecipeUpdateInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUncheckedUpdateInput`
 */
export type ProcessRecipeUncheckedUpdateInput = Prisma.ProcessRecipeUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUpdateManyMutationInput`
 */
export type ProcessRecipeUpdateManyMutationInput = Prisma.ProcessRecipeUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUncheckedUpdateManyInput`
 */
export type ProcessRecipeUncheckedUpdateManyInput = Prisma.ProcessRecipeUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateInput`
 */
export type ForgeRecipeCreateInput = Prisma.ForgeRecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedCreateInput`
 */
export type ForgeRecipeUncheckedCreateInput = Prisma.ForgeRecipeUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpdateInput`
 */
export type ForgeRecipeUpdateInput = Prisma.ForgeRecipeUpdateInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedUpdateInput`
 */
export type ForgeRecipeUncheckedUpdateInput = Prisma.ForgeRecipeUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpdateManyMutationInput`
 */
export type ForgeRecipeUpdateManyMutationInput = Prisma.ForgeRecipeUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedUpdateManyInput`
 */
export type ForgeRecipeUncheckedUpdateManyInput = Prisma.ForgeRecipeUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetCreateInput`
 */
export type ArtifactSetCreateInput = Prisma.ArtifactSetCreateInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUncheckedCreateInput`
 */
export type ArtifactSetUncheckedCreateInput = Prisma.ArtifactSetUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUpdateInput`
 */
export type ArtifactSetUpdateInput = Prisma.ArtifactSetUpdateInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUncheckedUpdateInput`
 */
export type ArtifactSetUncheckedUpdateInput = Prisma.ArtifactSetUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUpdateManyMutationInput`
 */
export type ArtifactSetUpdateManyMutationInput = Prisma.ArtifactSetUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUncheckedUpdateManyInput`
 */
export type ArtifactSetUncheckedUpdateManyInput = Prisma.ArtifactSetUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.ArtifactCreateInput`
 */
export type ArtifactCreateInput = Prisma.ArtifactCreateInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedCreateInput`
 */
export type ArtifactUncheckedCreateInput = Prisma.ArtifactUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateInput`
 */
export type ArtifactUpdateInput = Prisma.ArtifactUpdateInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedUpdateInput`
 */
export type ArtifactUncheckedUpdateInput = Prisma.ArtifactUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateManyMutationInput`
 */
export type ArtifactUpdateManyMutationInput = Prisma.ArtifactUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedUpdateManyInput`
 */
export type ArtifactUncheckedUpdateManyInput = Prisma.ArtifactUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.GadgetCreateInput`
 */
export type GadgetCreateInput = Prisma.GadgetCreateInput

/**
 * @deprecated Renamed to `Prisma.GadgetUncheckedCreateInput`
 */
export type GadgetUncheckedCreateInput = Prisma.GadgetUncheckedCreateInput

/**
 * @deprecated Renamed to `Prisma.GadgetUpdateInput`
 */
export type GadgetUpdateInput = Prisma.GadgetUpdateInput

/**
 * @deprecated Renamed to `Prisma.GadgetUncheckedUpdateInput`
 */
export type GadgetUncheckedUpdateInput = Prisma.GadgetUncheckedUpdateInput

/**
 * @deprecated Renamed to `Prisma.GadgetUpdateManyMutationInput`
 */
export type GadgetUpdateManyMutationInput = Prisma.GadgetUpdateManyMutationInput

/**
 * @deprecated Renamed to `Prisma.GadgetUncheckedUpdateManyInput`
 */
export type GadgetUncheckedUpdateManyInput = Prisma.GadgetUncheckedUpdateManyInput

/**
 * @deprecated Renamed to `Prisma.StringFilter`
 */
export type StringFilter = Prisma.StringFilter

/**
 * @deprecated Renamed to `Prisma.DateTimeFilter`
 */
export type DateTimeFilter = Prisma.DateTimeFilter

/**
 * @deprecated Renamed to `Prisma.StringNullableFilter`
 */
export type StringNullableFilter = Prisma.StringNullableFilter

/**
 * @deprecated Renamed to `Prisma.EnumRoleFilter`
 */
export type EnumRoleFilter = Prisma.EnumRoleFilter

/**
 * @deprecated Renamed to `Prisma.UserSecretRelationFilter`
 */
export type UserSecretRelationFilter = Prisma.UserSecretRelationFilter

/**
 * @deprecated Renamed to `Prisma.BoolFilter`
 */
export type BoolFilter = Prisma.BoolFilter

/**
 * @deprecated Renamed to `Prisma.IntFilter`
 */
export type IntFilter = Prisma.IntFilter

/**
 * @deprecated Renamed to `Prisma.DateTimeNullableFilter`
 */
export type DateTimeNullableFilter = Prisma.DateTimeNullableFilter

/**
 * @deprecated Renamed to `Prisma.UserRelationFilter`
 */
export type UserRelationFilter = Prisma.UserRelationFilter

/**
 * @deprecated Renamed to `Prisma.JsonNullableFilter`
 */
export type JsonNullableFilter = Prisma.JsonNullableFilter

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionListRelationFilter`
 */
export type CharacterAscensionListRelationFilter = Prisma.CharacterAscensionListRelationFilter

/**
 * @deprecated Renamed to `Prisma.CharacterProfileRelationFilter`
 */
export type CharacterProfileRelationFilter = Prisma.CharacterProfileRelationFilter

/**
 * @deprecated Renamed to `Prisma.ElementListRelationFilter`
 */
export type ElementListRelationFilter = Prisma.ElementListRelationFilter

/**
 * @deprecated Renamed to `Prisma.TalentListRelationFilter`
 */
export type TalentListRelationFilter = Prisma.TalentListRelationFilter

/**
 * @deprecated Renamed to `Prisma.EnumWeaponTypeNullableFilter`
 */
export type EnumWeaponTypeNullableFilter = Prisma.EnumWeaponTypeNullableFilter

/**
 * @deprecated Renamed to `Prisma.CharacterRelationFilter`
 */
export type CharacterRelationFilter = Prisma.CharacterRelationFilter

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialRelationFilter`
 */
export type CharacterAscensionMaterialRelationFilter = Prisma.CharacterAscensionMaterialRelationFilter

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialListRelationFilter`
 */
export type CommonAscensionMaterialListRelationFilter = Prisma.CommonAscensionMaterialListRelationFilter

/**
 * @deprecated Renamed to `Prisma.RegionRelationFilter`
 */
export type RegionRelationFilter = Prisma.RegionRelationFilter

/**
 * @deprecated Renamed to `Prisma.ConsumeableRelationFilter`
 */
export type ConsumeableRelationFilter = Prisma.ConsumeableRelationFilter

/**
 * @deprecated Renamed to `Prisma.ElementRelationFilter`
 */
export type ElementRelationFilter = Prisma.ElementRelationFilter

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialRelationFilter`
 */
export type TalentLevelUpMaterialRelationFilter = Prisma.TalentLevelUpMaterialRelationFilter

/**
 * @deprecated Renamed to `Prisma.CharacterListRelationFilter`
 */
export type CharacterListRelationFilter = Prisma.CharacterListRelationFilter

/**
 * @deprecated Renamed to `Prisma.CharacterProfileListRelationFilter`
 */
export type CharacterProfileListRelationFilter = Prisma.CharacterProfileListRelationFilter

/**
 * @deprecated Renamed to `Prisma.DomainListRelationFilter`
 */
export type DomainListRelationFilter = Prisma.DomainListRelationFilter

/**
 * @deprecated Renamed to `Prisma.IntNullableFilter`
 */
export type IntNullableFilter = Prisma.IntNullableFilter

/**
 * @deprecated Renamed to `Prisma.EnumWeaponSecondaryStatTypeNullableFilter`
 */
export type EnumWeaponSecondaryStatTypeNullableFilter = Prisma.EnumWeaponSecondaryStatTypeNullableFilter

/**
 * @deprecated Renamed to `Prisma.EnumWeaponTypeFilter`
 */
export type EnumWeaponTypeFilter = Prisma.EnumWeaponTypeFilter

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionListRelationFilter`
 */
export type WeaponAscensionListRelationFilter = Prisma.WeaponAscensionListRelationFilter

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeRelationFilter`
 */
export type ForgeRecipeRelationFilter = Prisma.ForgeRecipeRelationFilter

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialRelationFilter`
 */
export type WeaponAscensionMaterialRelationFilter = Prisma.WeaponAscensionMaterialRelationFilter

/**
 * @deprecated Renamed to `Prisma.WeaponRelationFilter`
 */
export type WeaponRelationFilter = Prisma.WeaponRelationFilter

/**
 * @deprecated Renamed to `Prisma.EnumCommonAscensionMaterialGroupFilter`
 */
export type EnumCommonAscensionMaterialGroupFilter = Prisma.EnumCommonAscensionMaterialGroupFilter

/**
 * @deprecated Renamed to `Prisma.EnumWeaponAscensionMaterialGroupFilter`
 */
export type EnumWeaponAscensionMaterialGroupFilter = Prisma.EnumWeaponAscensionMaterialGroupFilter

/**
 * @deprecated Renamed to `Prisma.DomainRelationFilter`
 */
export type DomainRelationFilter = Prisma.DomainRelationFilter

/**
 * @deprecated Renamed to `Prisma.EnumTalentLevelUpMaterialGroupFilter`
 */
export type EnumTalentLevelUpMaterialGroupFilter = Prisma.EnumTalentLevelUpMaterialGroupFilter

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeListRelationFilter`
 */
export type ConsumeableRecipeListRelationFilter = Prisma.ConsumeableRecipeListRelationFilter

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeRelationFilter`
 */
export type ProcessRecipeRelationFilter = Prisma.ProcessRecipeRelationFilter

/**
 * @deprecated Renamed to `Prisma.ArtifactListRelationFilter`
 */
export type ArtifactListRelationFilter = Prisma.ArtifactListRelationFilter

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialListRelationFilter`
 */
export type TalentLevelUpMaterialListRelationFilter = Prisma.TalentLevelUpMaterialListRelationFilter

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialListRelationFilter`
 */
export type WeaponAscensionMaterialListRelationFilter = Prisma.WeaponAscensionMaterialListRelationFilter

/**
 * @deprecated Renamed to `Prisma.EnumConsumableTypeFilter`
 */
export type EnumConsumableTypeFilter = Prisma.EnumConsumableTypeFilter

/**
 * @deprecated Renamed to `Prisma.EnumFoodTypeFilter`
 */
export type EnumFoodTypeFilter = Prisma.EnumFoodTypeFilter

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeRelationFilter`
 */
export type ConsumeableRecipeRelationFilter = Prisma.ConsumeableRecipeRelationFilter

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialListRelationFilter`
 */
export type CraftingMaterialListRelationFilter = Prisma.CraftingMaterialListRelationFilter

/**
 * @deprecated Renamed to `Prisma.CookingMaterialListRelationFilter`
 */
export type CookingMaterialListRelationFilter = Prisma.CookingMaterialListRelationFilter

/**
 * @deprecated Renamed to `Prisma.CookingMaterialRelationFilter`
 */
export type CookingMaterialRelationFilter = Prisma.CookingMaterialRelationFilter

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialListRelationFilter`
 */
export type WeaponEnhancementMaterialListRelationFilter = Prisma.WeaponEnhancementMaterialListRelationFilter

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialRelationFilter`
 */
export type WeaponEnhancementMaterialRelationFilter = Prisma.WeaponEnhancementMaterialRelationFilter

/**
 * @deprecated Renamed to `Prisma.EnumArtifactTypeFilter`
 */
export type EnumArtifactTypeFilter = Prisma.EnumArtifactTypeFilter

/**
 * @deprecated Renamed to `Prisma.ArtifactSetRelationFilter`
 */
export type ArtifactSetRelationFilter = Prisma.ArtifactSetRelationFilter

/**
 * @deprecated Renamed to `Prisma.UserSecretCreateOneWithoutUserInput`
 */
export type UserSecretCreateOneWithoutUserInput = Prisma.UserSecretCreateOneWithoutUserInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUncheckedCreateOneWithoutUserInput`
 */
export type UserSecretUncheckedCreateOneWithoutUserInput = Prisma.UserSecretUncheckedCreateOneWithoutUserInput

/**
 * @deprecated Renamed to `Prisma.StringFieldUpdateOperationsInput`
 */
export type StringFieldUpdateOperationsInput = Prisma.StringFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.DateTimeFieldUpdateOperationsInput`
 */
export type DateTimeFieldUpdateOperationsInput = Prisma.DateTimeFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.NullableStringFieldUpdateOperationsInput`
 */
export type NullableStringFieldUpdateOperationsInput = Prisma.NullableStringFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.EnumRoleFieldUpdateOperationsInput`
 */
export type EnumRoleFieldUpdateOperationsInput = Prisma.EnumRoleFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUpdateOneWithoutUserInput`
 */
export type UserSecretUpdateOneWithoutUserInput = Prisma.UserSecretUpdateOneWithoutUserInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUncheckedUpdateOneWithoutUserInput`
 */
export type UserSecretUncheckedUpdateOneWithoutUserInput = Prisma.UserSecretUncheckedUpdateOneWithoutUserInput

/**
 * @deprecated Renamed to `Prisma.UserCreateOneWithoutUserSecretInput`
 */
export type UserCreateOneWithoutUserSecretInput = Prisma.UserCreateOneWithoutUserSecretInput

/**
 * @deprecated Renamed to `Prisma.BoolFieldUpdateOperationsInput`
 */
export type BoolFieldUpdateOperationsInput = Prisma.BoolFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.IntFieldUpdateOperationsInput`
 */
export type IntFieldUpdateOperationsInput = Prisma.IntFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.NullableDateTimeFieldUpdateOperationsInput`
 */
export type NullableDateTimeFieldUpdateOperationsInput = Prisma.NullableDateTimeFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.UserUpdateOneRequiredWithoutUserSecretInput`
 */
export type UserUpdateOneRequiredWithoutUserSecretInput = Prisma.UserUpdateOneRequiredWithoutUserSecretInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateManyWithoutCharacterInput`
 */
export type CharacterAscensionCreateManyWithoutCharacterInput = Prisma.CharacterAscensionCreateManyWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateOneWithoutCharacterInput`
 */
export type CharacterProfileCreateOneWithoutCharacterInput = Prisma.CharacterProfileCreateOneWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.ElementCreateManyWithoutCharactersInput`
 */
export type ElementCreateManyWithoutCharactersInput = Prisma.ElementCreateManyWithoutCharactersInput

/**
 * @deprecated Renamed to `Prisma.TalentCreateManyWithoutCharacterInput`
 */
export type TalentCreateManyWithoutCharacterInput = Prisma.TalentCreateManyWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedCreateManyWithoutCharacterInput`
 */
export type CharacterAscensionUncheckedCreateManyWithoutCharacterInput = Prisma.CharacterAscensionUncheckedCreateManyWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedCreateManyWithoutCharacterInput`
 */
export type TalentUncheckedCreateManyWithoutCharacterInput = Prisma.TalentUncheckedCreateManyWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.NullableEnumWeaponTypeFieldUpdateOperationsInput`
 */
export type NullableEnumWeaponTypeFieldUpdateOperationsInput = Prisma.NullableEnumWeaponTypeFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateManyWithoutCharacterInput`
 */
export type CharacterAscensionUpdateManyWithoutCharacterInput = Prisma.CharacterAscensionUpdateManyWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateOneWithoutCharacterInput`
 */
export type CharacterProfileUpdateOneWithoutCharacterInput = Prisma.CharacterProfileUpdateOneWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.ElementUpdateManyWithoutCharactersInput`
 */
export type ElementUpdateManyWithoutCharactersInput = Prisma.ElementUpdateManyWithoutCharactersInput

/**
 * @deprecated Renamed to `Prisma.TalentUpdateManyWithoutCharacterInput`
 */
export type TalentUpdateManyWithoutCharacterInput = Prisma.TalentUpdateManyWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedUpdateManyWithoutCharacterInput`
 */
export type CharacterAscensionUncheckedUpdateManyWithoutCharacterInput = Prisma.CharacterAscensionUncheckedUpdateManyWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedUpdateManyWithoutCharacterInput`
 */
export type TalentUncheckedUpdateManyWithoutCharacterInput = Prisma.TalentUncheckedUpdateManyWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateOneWithoutAscensionsInput`
 */
export type CharacterCreateOneWithoutAscensionsInput = Prisma.CharacterCreateOneWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialCreateOneWithoutCharacterAscensionsInput`
 */
export type CharacterAscensionMaterialCreateOneWithoutCharacterAscensionsInput = Prisma.CharacterAscensionMaterialCreateOneWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialCreateManyWithoutCharacterAscensionsInput`
 */
export type CommonAscensionMaterialCreateManyWithoutCharacterAscensionsInput = Prisma.CommonAscensionMaterialCreateManyWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateOneWithoutAscensionsInput`
 */
export type CharacterUpdateOneWithoutAscensionsInput = Prisma.CharacterUpdateOneWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUpdateOneWithoutCharacterAscensionsInput`
 */
export type CharacterAscensionMaterialUpdateOneWithoutCharacterAscensionsInput = Prisma.CharacterAscensionMaterialUpdateOneWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateManyWithoutCharacterAscensionsInput`
 */
export type CommonAscensionMaterialUpdateManyWithoutCharacterAscensionsInput = Prisma.CommonAscensionMaterialUpdateManyWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.RegionCreateOneWithoutCharacterProfilesInput`
 */
export type RegionCreateOneWithoutCharacterProfilesInput = Prisma.RegionCreateOneWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableCreateOneWithoutCharacterSpecialtyInput`
 */
export type ConsumeableCreateOneWithoutCharacterSpecialtyInput = Prisma.ConsumeableCreateOneWithoutCharacterSpecialtyInput

/**
 * @deprecated Renamed to `Prisma.ElementCreateOneWithoutCharacterProfilesInput`
 */
export type ElementCreateOneWithoutCharacterProfilesInput = Prisma.ElementCreateOneWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateOneWithoutCharacterProfileInput`
 */
export type CharacterCreateOneWithoutCharacterProfileInput = Prisma.CharacterCreateOneWithoutCharacterProfileInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUncheckedCreateOneWithoutCharacterSpecialtyInput`
 */
export type ConsumeableUncheckedCreateOneWithoutCharacterSpecialtyInput = Prisma.ConsumeableUncheckedCreateOneWithoutCharacterSpecialtyInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedCreateOneWithoutCharacterProfileInput`
 */
export type CharacterUncheckedCreateOneWithoutCharacterProfileInput = Prisma.CharacterUncheckedCreateOneWithoutCharacterProfileInput

/**
 * @deprecated Renamed to `Prisma.RegionUpdateOneWithoutCharacterProfilesInput`
 */
export type RegionUpdateOneWithoutCharacterProfilesInput = Prisma.RegionUpdateOneWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpdateOneWithoutCharacterSpecialtyInput`
 */
export type ConsumeableUpdateOneWithoutCharacterSpecialtyInput = Prisma.ConsumeableUpdateOneWithoutCharacterSpecialtyInput

/**
 * @deprecated Renamed to `Prisma.ElementUpdateOneWithoutCharacterProfilesInput`
 */
export type ElementUpdateOneWithoutCharacterProfilesInput = Prisma.ElementUpdateOneWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateOneWithoutCharacterProfileInput`
 */
export type CharacterUpdateOneWithoutCharacterProfileInput = Prisma.CharacterUpdateOneWithoutCharacterProfileInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUncheckedUpdateOneWithoutCharacterSpecialtyInput`
 */
export type ConsumeableUncheckedUpdateOneWithoutCharacterSpecialtyInput = Prisma.ConsumeableUncheckedUpdateOneWithoutCharacterSpecialtyInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedUpdateOneWithoutCharacterProfileInput`
 */
export type CharacterUncheckedUpdateOneWithoutCharacterProfileInput = Prisma.CharacterUncheckedUpdateOneWithoutCharacterProfileInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateOneWithoutTalentsInput`
 */
export type CharacterCreateOneWithoutTalentsInput = Prisma.CharacterCreateOneWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialCreateOneWithoutTalentsInput`
 */
export type TalentLevelUpMaterialCreateOneWithoutTalentsInput = Prisma.TalentLevelUpMaterialCreateOneWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateOneRequiredWithoutTalentsInput`
 */
export type CharacterUpdateOneRequiredWithoutTalentsInput = Prisma.CharacterUpdateOneRequiredWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpdateOneWithoutTalentsInput`
 */
export type TalentLevelUpMaterialUpdateOneWithoutTalentsInput = Prisma.TalentLevelUpMaterialUpdateOneWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateManyWithoutElementsInput`
 */
export type CharacterCreateManyWithoutElementsInput = Prisma.CharacterCreateManyWithoutElementsInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateManyWithoutVisionInput`
 */
export type CharacterProfileCreateManyWithoutVisionInput = Prisma.CharacterProfileCreateManyWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.RegionCreateOneWithoutElementInput`
 */
export type RegionCreateOneWithoutElementInput = Prisma.RegionCreateOneWithoutElementInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedCreateManyWithoutVisionInput`
 */
export type CharacterProfileUncheckedCreateManyWithoutVisionInput = Prisma.CharacterProfileUncheckedCreateManyWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateManyWithoutElementsInput`
 */
export type CharacterUpdateManyWithoutElementsInput = Prisma.CharacterUpdateManyWithoutElementsInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateManyWithoutVisionInput`
 */
export type CharacterProfileUpdateManyWithoutVisionInput = Prisma.CharacterProfileUpdateManyWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.RegionUpdateOneWithoutElementInput`
 */
export type RegionUpdateOneWithoutElementInput = Prisma.RegionUpdateOneWithoutElementInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedUpdateManyWithoutVisionInput`
 */
export type CharacterProfileUncheckedUpdateManyWithoutVisionInput = Prisma.CharacterProfileUncheckedUpdateManyWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateManyWithoutRegionInput`
 */
export type CharacterProfileCreateManyWithoutRegionInput = Prisma.CharacterProfileCreateManyWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateManyWithoutRegionInput`
 */
export type DomainCreateManyWithoutRegionInput = Prisma.DomainCreateManyWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.ElementCreateOneWithoutRegionInput`
 */
export type ElementCreateOneWithoutRegionInput = Prisma.ElementCreateOneWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedCreateManyWithoutRegionInput`
 */
export type CharacterProfileUncheckedCreateManyWithoutRegionInput = Prisma.CharacterProfileUncheckedCreateManyWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedCreateManyWithoutRegionInput`
 */
export type DomainUncheckedCreateManyWithoutRegionInput = Prisma.DomainUncheckedCreateManyWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedCreateOneWithoutRegionInput`
 */
export type ElementUncheckedCreateOneWithoutRegionInput = Prisma.ElementUncheckedCreateOneWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateManyWithoutRegionInput`
 */
export type CharacterProfileUpdateManyWithoutRegionInput = Prisma.CharacterProfileUpdateManyWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateManyWithoutRegionInput`
 */
export type DomainUpdateManyWithoutRegionInput = Prisma.DomainUpdateManyWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.ElementUpdateOneWithoutRegionInput`
 */
export type ElementUpdateOneWithoutRegionInput = Prisma.ElementUpdateOneWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedUpdateManyWithoutRegionInput`
 */
export type CharacterProfileUncheckedUpdateManyWithoutRegionInput = Prisma.CharacterProfileUncheckedUpdateManyWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedUpdateManyWithoutRegionInput`
 */
export type DomainUncheckedUpdateManyWithoutRegionInput = Prisma.DomainUncheckedUpdateManyWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedUpdateOneWithoutRegionInput`
 */
export type ElementUncheckedUpdateOneWithoutRegionInput = Prisma.ElementUncheckedUpdateOneWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateManyWithoutWeaponInput`
 */
export type WeaponAscensionCreateManyWithoutWeaponInput = Prisma.WeaponAscensionCreateManyWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateOneWithoutWeaponInput`
 */
export type ForgeRecipeCreateOneWithoutWeaponInput = Prisma.ForgeRecipeCreateOneWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedCreateManyWithoutWeaponInput`
 */
export type WeaponAscensionUncheckedCreateManyWithoutWeaponInput = Prisma.WeaponAscensionUncheckedCreateManyWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedCreateOneWithoutWeaponInput`
 */
export type ForgeRecipeUncheckedCreateOneWithoutWeaponInput = Prisma.ForgeRecipeUncheckedCreateOneWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.NullableIntFieldUpdateOperationsInput`
 */
export type NullableIntFieldUpdateOperationsInput = Prisma.NullableIntFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput`
 */
export type NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput = Prisma.NullableEnumWeaponSecondaryStatTypeFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.EnumWeaponTypeFieldUpdateOperationsInput`
 */
export type EnumWeaponTypeFieldUpdateOperationsInput = Prisma.EnumWeaponTypeFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateManyWithoutWeaponInput`
 */
export type WeaponAscensionUpdateManyWithoutWeaponInput = Prisma.WeaponAscensionUpdateManyWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpdateOneWithoutWeaponInput`
 */
export type ForgeRecipeUpdateOneWithoutWeaponInput = Prisma.ForgeRecipeUpdateOneWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedUpdateManyWithoutWeaponInput`
 */
export type WeaponAscensionUncheckedUpdateManyWithoutWeaponInput = Prisma.WeaponAscensionUncheckedUpdateManyWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedUpdateOneWithoutWeaponInput`
 */
export type ForgeRecipeUncheckedUpdateOneWithoutWeaponInput = Prisma.ForgeRecipeUncheckedUpdateOneWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialCreateManyWithoutWeaponAscensionsInput`
 */
export type CommonAscensionMaterialCreateManyWithoutWeaponAscensionsInput = Prisma.CommonAscensionMaterialCreateManyWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialCreateOneWithoutWeaponAscensionsInput`
 */
export type WeaponAscensionMaterialCreateOneWithoutWeaponAscensionsInput = Prisma.WeaponAscensionMaterialCreateOneWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponCreateOneWithoutAscensionsInput`
 */
export type WeaponCreateOneWithoutAscensionsInput = Prisma.WeaponCreateOneWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateManyWithoutWeaponAscensionsInput`
 */
export type CommonAscensionMaterialUpdateManyWithoutWeaponAscensionsInput = Prisma.CommonAscensionMaterialUpdateManyWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpdateOneWithoutWeaponAscensionsInput`
 */
export type WeaponAscensionMaterialUpdateOneWithoutWeaponAscensionsInput = Prisma.WeaponAscensionMaterialUpdateOneWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponUpdateOneWithoutAscensionsInput`
 */
export type WeaponUpdateOneWithoutAscensionsInput = Prisma.WeaponUpdateOneWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateManyWithoutCommonAscensionMaterialsInput`
 */
export type CharacterAscensionCreateManyWithoutCommonAscensionMaterialsInput = Prisma.CharacterAscensionCreateManyWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateManyWithoutCommonAscensionMaterialsInput`
 */
export type WeaponAscensionCreateManyWithoutCommonAscensionMaterialsInput = Prisma.WeaponAscensionCreateManyWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput`
 */
export type EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput = Prisma.EnumCommonAscensionMaterialGroupFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateManyWithoutCommonAscensionMaterialsInput`
 */
export type CharacterAscensionUpdateManyWithoutCommonAscensionMaterialsInput = Prisma.CharacterAscensionUpdateManyWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateManyWithoutCommonAscensionMaterialsInput`
 */
export type WeaponAscensionUpdateManyWithoutCommonAscensionMaterialsInput = Prisma.WeaponAscensionUpdateManyWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateOneWithoutWeaponAscensionMaterialsInput`
 */
export type DomainCreateOneWithoutWeaponAscensionMaterialsInput = Prisma.DomainCreateOneWithoutWeaponAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateManyWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionCreateManyWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionCreateManyWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedCreateManyWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionUncheckedCreateManyWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionUncheckedCreateManyWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput`
 */
export type EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput = Prisma.EnumWeaponAscensionMaterialGroupFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateOneWithoutWeaponAscensionMaterialsInput`
 */
export type DomainUpdateOneWithoutWeaponAscensionMaterialsInput = Prisma.DomainUpdateOneWithoutWeaponAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateManyWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionUpdateManyWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionUpdateManyWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialInput`
 */
export type ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialInput = Prisma.ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialsInput`
 */
export type ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialsInput = Prisma.ForgeRecipeCreateOneWithoutWeaponEnhancementMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedCreateOneWithoutWeaponEnhancementMaterialInput`
 */
export type ForgeRecipeUncheckedCreateOneWithoutWeaponEnhancementMaterialInput = Prisma.ForgeRecipeUncheckedCreateOneWithoutWeaponEnhancementMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialInput`
 */
export type ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialInput = Prisma.ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialsInput`
 */
export type ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialsInput = Prisma.ForgeRecipeUpdateOneWithoutWeaponEnhancementMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedUpdateOneWithoutWeaponEnhancementMaterialInput`
 */
export type ForgeRecipeUncheckedUpdateOneWithoutWeaponEnhancementMaterialInput = Prisma.ForgeRecipeUncheckedUpdateOneWithoutWeaponEnhancementMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateManyWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionCreateManyWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionCreateManyWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedCreateManyWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionUncheckedCreateManyWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionUncheckedCreateManyWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateManyWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionUpdateManyWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionUpdateManyWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateOneWithoutTalentLevelUpMaterialsInput`
 */
export type DomainCreateOneWithoutTalentLevelUpMaterialsInput = Prisma.DomainCreateOneWithoutTalentLevelUpMaterialsInput

/**
 * @deprecated Renamed to `Prisma.TalentCreateManyWithoutTalentLevelUpMaterialInput`
 */
export type TalentCreateManyWithoutTalentLevelUpMaterialInput = Prisma.TalentCreateManyWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedCreateManyWithoutTalentLevelUpMaterialInput`
 */
export type TalentUncheckedCreateManyWithoutTalentLevelUpMaterialInput = Prisma.TalentUncheckedCreateManyWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput`
 */
export type EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput = Prisma.EnumTalentLevelUpMaterialGroupFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateOneWithoutTalentLevelUpMaterialsInput`
 */
export type DomainUpdateOneWithoutTalentLevelUpMaterialsInput = Prisma.DomainUpdateOneWithoutTalentLevelUpMaterialsInput

/**
 * @deprecated Renamed to `Prisma.TalentUpdateManyWithoutTalentLevelUpMaterialInput`
 */
export type TalentUpdateManyWithoutTalentLevelUpMaterialInput = Prisma.TalentUpdateManyWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedUpdateManyWithoutTalentLevelUpMaterialInput`
 */
export type TalentUncheckedUpdateManyWithoutTalentLevelUpMaterialInput = Prisma.TalentUncheckedUpdateManyWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateManyWithoutCraftingMaterialsInput`
 */
export type ConsumeableRecipeCreateManyWithoutCraftingMaterialsInput = Prisma.ConsumeableRecipeCreateManyWithoutCraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateManyWithoutCraftingMaterialsInput`
 */
export type ConsumeableRecipeUpdateManyWithoutCraftingMaterialsInput = Prisma.ConsumeableRecipeUpdateManyWithoutCraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeCreateOneWithoutMaterialInput`
 */
export type ProcessRecipeCreateOneWithoutMaterialInput = Prisma.ProcessRecipeCreateOneWithoutMaterialInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateManyWithoutCookingMaterialsInput`
 */
export type ConsumeableRecipeCreateManyWithoutCookingMaterialsInput = Prisma.ConsumeableRecipeCreateManyWithoutCookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUncheckedCreateOneWithoutMaterialInput`
 */
export type ProcessRecipeUncheckedCreateOneWithoutMaterialInput = Prisma.ProcessRecipeUncheckedCreateOneWithoutMaterialInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUpdateOneWithoutMaterialInput`
 */
export type ProcessRecipeUpdateOneWithoutMaterialInput = Prisma.ProcessRecipeUpdateOneWithoutMaterialInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateManyWithoutCookingMaterialsInput`
 */
export type ConsumeableRecipeUpdateManyWithoutCookingMaterialsInput = Prisma.ConsumeableRecipeUpdateManyWithoutCookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUncheckedUpdateOneWithoutMaterialInput`
 */
export type ProcessRecipeUncheckedUpdateOneWithoutMaterialInput = Prisma.ProcessRecipeUncheckedUpdateOneWithoutMaterialInput

/**
 * @deprecated Renamed to `Prisma.ArtifactCreateManyWithoutDomainInput`
 */
export type ArtifactCreateManyWithoutDomainInput = Prisma.ArtifactCreateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.RegionCreateOneWithoutDomainsInput`
 */
export type RegionCreateOneWithoutDomainsInput = Prisma.RegionCreateOneWithoutDomainsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialCreateManyWithoutDomainInput`
 */
export type TalentLevelUpMaterialCreateManyWithoutDomainInput = Prisma.TalentLevelUpMaterialCreateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialCreateManyWithoutDomainInput`
 */
export type WeaponAscensionMaterialCreateManyWithoutDomainInput = Prisma.WeaponAscensionMaterialCreateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedCreateManyWithoutDomainInput`
 */
export type ArtifactUncheckedCreateManyWithoutDomainInput = Prisma.ArtifactUncheckedCreateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUncheckedCreateManyWithoutDomainInput`
 */
export type TalentLevelUpMaterialUncheckedCreateManyWithoutDomainInput = Prisma.TalentLevelUpMaterialUncheckedCreateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUncheckedCreateManyWithoutDomainInput`
 */
export type WeaponAscensionMaterialUncheckedCreateManyWithoutDomainInput = Prisma.WeaponAscensionMaterialUncheckedCreateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateManyWithoutDomainInput`
 */
export type ArtifactUpdateManyWithoutDomainInput = Prisma.ArtifactUpdateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.RegionUpdateOneWithoutDomainsInput`
 */
export type RegionUpdateOneWithoutDomainsInput = Prisma.RegionUpdateOneWithoutDomainsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpdateManyWithoutDomainInput`
 */
export type TalentLevelUpMaterialUpdateManyWithoutDomainInput = Prisma.TalentLevelUpMaterialUpdateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpdateManyWithoutDomainInput`
 */
export type WeaponAscensionMaterialUpdateManyWithoutDomainInput = Prisma.WeaponAscensionMaterialUpdateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedUpdateManyWithoutDomainInput`
 */
export type ArtifactUncheckedUpdateManyWithoutDomainInput = Prisma.ArtifactUncheckedUpdateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUncheckedUpdateManyWithoutDomainInput`
 */
export type TalentLevelUpMaterialUncheckedUpdateManyWithoutDomainInput = Prisma.TalentLevelUpMaterialUncheckedUpdateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUncheckedUpdateManyWithoutDomainInput`
 */
export type WeaponAscensionMaterialUncheckedUpdateManyWithoutDomainInput = Prisma.WeaponAscensionMaterialUncheckedUpdateManyWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateOneWithoutSpecialtyDishInput`
 */
export type CharacterProfileCreateOneWithoutSpecialtyDishInput = Prisma.CharacterProfileCreateOneWithoutSpecialtyDishInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateOneWithoutConsumeableInput`
 */
export type ConsumeableRecipeCreateOneWithoutConsumeableInput = Prisma.ConsumeableRecipeCreateOneWithoutConsumeableInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedCreateOneWithoutConsumeableInput`
 */
export type ConsumeableRecipeUncheckedCreateOneWithoutConsumeableInput = Prisma.ConsumeableRecipeUncheckedCreateOneWithoutConsumeableInput

/**
 * @deprecated Renamed to `Prisma.EnumConsumableTypeFieldUpdateOperationsInput`
 */
export type EnumConsumableTypeFieldUpdateOperationsInput = Prisma.EnumConsumableTypeFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.EnumFoodTypeFieldUpdateOperationsInput`
 */
export type EnumFoodTypeFieldUpdateOperationsInput = Prisma.EnumFoodTypeFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateOneWithoutSpecialtyDishInput`
 */
export type CharacterProfileUpdateOneWithoutSpecialtyDishInput = Prisma.CharacterProfileUpdateOneWithoutSpecialtyDishInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateOneWithoutConsumeableInput`
 */
export type ConsumeableRecipeUpdateOneWithoutConsumeableInput = Prisma.ConsumeableRecipeUpdateOneWithoutConsumeableInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedUpdateOneWithoutConsumeableInput`
 */
export type ConsumeableRecipeUncheckedUpdateOneWithoutConsumeableInput = Prisma.ConsumeableRecipeUncheckedUpdateOneWithoutConsumeableInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableCreateOneWithoutRecipeInput`
 */
export type ConsumeableCreateOneWithoutRecipeInput = Prisma.ConsumeableCreateOneWithoutRecipeInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialCreateManyWithoutRecipesInput`
 */
export type CraftingMaterialCreateManyWithoutRecipesInput = Prisma.CraftingMaterialCreateManyWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialCreateManyWithoutRecipesInput`
 */
export type CookingMaterialCreateManyWithoutRecipesInput = Prisma.CookingMaterialCreateManyWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpdateOneWithoutRecipeInput`
 */
export type ConsumeableUpdateOneWithoutRecipeInput = Prisma.ConsumeableUpdateOneWithoutRecipeInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUpdateManyWithoutRecipesInput`
 */
export type CraftingMaterialUpdateManyWithoutRecipesInput = Prisma.CraftingMaterialUpdateManyWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpdateManyWithoutRecipesInput`
 */
export type CookingMaterialUpdateManyWithoutRecipesInput = Prisma.CookingMaterialUpdateManyWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialCreateOneWithoutProcessingRecipeInput`
 */
export type CookingMaterialCreateOneWithoutProcessingRecipeInput = Prisma.CookingMaterialCreateOneWithoutProcessingRecipeInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpdateOneWithoutProcessingRecipeInput`
 */
export type CookingMaterialUpdateOneWithoutProcessingRecipeInput = Prisma.CookingMaterialUpdateOneWithoutProcessingRecipeInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialCreateManyWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialCreateManyWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialCreateManyWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialCreateOneWithoutRecipeCreateInput`
 */
export type WeaponEnhancementMaterialCreateOneWithoutRecipeCreateInput = Prisma.WeaponEnhancementMaterialCreateOneWithoutRecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponCreateOneWithoutForgeRecipeInput`
 */
export type WeaponCreateOneWithoutForgeRecipeInput = Prisma.WeaponCreateOneWithoutForgeRecipeInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUncheckedCreateManyWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialUncheckedCreateManyWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialUncheckedCreateManyWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpdateManyWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialUpdateManyWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialUpdateManyWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpdateOneWithoutRecipeCreateInput`
 */
export type WeaponEnhancementMaterialUpdateOneWithoutRecipeCreateInput = Prisma.WeaponEnhancementMaterialUpdateOneWithoutRecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponUpdateOneWithoutForgeRecipeInput`
 */
export type WeaponUpdateOneWithoutForgeRecipeInput = Prisma.WeaponUpdateOneWithoutForgeRecipeInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUncheckedUpdateManyWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialUncheckedUpdateManyWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialUncheckedUpdateManyWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.ArtifactCreateManyWithoutSetInput`
 */
export type ArtifactCreateManyWithoutSetInput = Prisma.ArtifactCreateManyWithoutSetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedCreateManyWithoutSetInput`
 */
export type ArtifactUncheckedCreateManyWithoutSetInput = Prisma.ArtifactUncheckedCreateManyWithoutSetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateManyWithoutSetInput`
 */
export type ArtifactUpdateManyWithoutSetInput = Prisma.ArtifactUpdateManyWithoutSetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedUpdateManyWithoutSetInput`
 */
export type ArtifactUncheckedUpdateManyWithoutSetInput = Prisma.ArtifactUncheckedUpdateManyWithoutSetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetCreateOneWithoutArtifactsInput`
 */
export type ArtifactSetCreateOneWithoutArtifactsInput = Prisma.ArtifactSetCreateOneWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateOneWithoutArtifactsInput`
 */
export type DomainCreateOneWithoutArtifactsInput = Prisma.DomainCreateOneWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.EnumArtifactTypeFieldUpdateOperationsInput`
 */
export type EnumArtifactTypeFieldUpdateOperationsInput = Prisma.EnumArtifactTypeFieldUpdateOperationsInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUpdateOneWithoutArtifactsInput`
 */
export type ArtifactSetUpdateOneWithoutArtifactsInput = Prisma.ArtifactSetUpdateOneWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateOneWithoutArtifactsInput`
 */
export type DomainUpdateOneWithoutArtifactsInput = Prisma.DomainUpdateOneWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.NestedStringFilter`
 */
export type NestedStringFilter = Prisma.NestedStringFilter

/**
 * @deprecated Renamed to `Prisma.NestedDateTimeFilter`
 */
export type NestedDateTimeFilter = Prisma.NestedDateTimeFilter

/**
 * @deprecated Renamed to `Prisma.NestedStringNullableFilter`
 */
export type NestedStringNullableFilter = Prisma.NestedStringNullableFilter

/**
 * @deprecated Renamed to `Prisma.NestedEnumRoleFilter`
 */
export type NestedEnumRoleFilter = Prisma.NestedEnumRoleFilter

/**
 * @deprecated Renamed to `Prisma.NestedBoolFilter`
 */
export type NestedBoolFilter = Prisma.NestedBoolFilter

/**
 * @deprecated Renamed to `Prisma.NestedIntFilter`
 */
export type NestedIntFilter = Prisma.NestedIntFilter

/**
 * @deprecated Renamed to `Prisma.NestedDateTimeNullableFilter`
 */
export type NestedDateTimeNullableFilter = Prisma.NestedDateTimeNullableFilter

/**
 * @deprecated Renamed to `Prisma.NestedEnumWeaponTypeNullableFilter`
 */
export type NestedEnumWeaponTypeNullableFilter = Prisma.NestedEnumWeaponTypeNullableFilter

/**
 * @deprecated Renamed to `Prisma.NestedIntNullableFilter`
 */
export type NestedIntNullableFilter = Prisma.NestedIntNullableFilter

/**
 * @deprecated Renamed to `Prisma.NestedEnumWeaponSecondaryStatTypeNullableFilter`
 */
export type NestedEnumWeaponSecondaryStatTypeNullableFilter = Prisma.NestedEnumWeaponSecondaryStatTypeNullableFilter

/**
 * @deprecated Renamed to `Prisma.NestedEnumWeaponTypeFilter`
 */
export type NestedEnumWeaponTypeFilter = Prisma.NestedEnumWeaponTypeFilter

/**
 * @deprecated Renamed to `Prisma.NestedEnumCommonAscensionMaterialGroupFilter`
 */
export type NestedEnumCommonAscensionMaterialGroupFilter = Prisma.NestedEnumCommonAscensionMaterialGroupFilter

/**
 * @deprecated Renamed to `Prisma.NestedEnumWeaponAscensionMaterialGroupFilter`
 */
export type NestedEnumWeaponAscensionMaterialGroupFilter = Prisma.NestedEnumWeaponAscensionMaterialGroupFilter

/**
 * @deprecated Renamed to `Prisma.NestedEnumTalentLevelUpMaterialGroupFilter`
 */
export type NestedEnumTalentLevelUpMaterialGroupFilter = Prisma.NestedEnumTalentLevelUpMaterialGroupFilter

/**
 * @deprecated Renamed to `Prisma.NestedEnumConsumableTypeFilter`
 */
export type NestedEnumConsumableTypeFilter = Prisma.NestedEnumConsumableTypeFilter

/**
 * @deprecated Renamed to `Prisma.NestedEnumFoodTypeFilter`
 */
export type NestedEnumFoodTypeFilter = Prisma.NestedEnumFoodTypeFilter

/**
 * @deprecated Renamed to `Prisma.NestedEnumArtifactTypeFilter`
 */
export type NestedEnumArtifactTypeFilter = Prisma.NestedEnumArtifactTypeFilter

/**
 * @deprecated Renamed to `Prisma.UserSecretCreateWithoutUserInput`
 */
export type UserSecretCreateWithoutUserInput = Prisma.UserSecretCreateWithoutUserInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUncheckedCreateWithoutUserInput`
 */
export type UserSecretUncheckedCreateWithoutUserInput = Prisma.UserSecretUncheckedCreateWithoutUserInput

/**
 * @deprecated Renamed to `Prisma.UserSecretCreateOrConnectWithoutuserInput`
 */
export type UserSecretCreateOrConnectWithoutuserInput = Prisma.UserSecretCreateOrConnectWithoutuserInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUpdateWithoutUserInput`
 */
export type UserSecretUpdateWithoutUserInput = Prisma.UserSecretUpdateWithoutUserInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUncheckedUpdateWithoutUserInput`
 */
export type UserSecretUncheckedUpdateWithoutUserInput = Prisma.UserSecretUncheckedUpdateWithoutUserInput

/**
 * @deprecated Renamed to `Prisma.UserSecretUpsertWithoutUserInput`
 */
export type UserSecretUpsertWithoutUserInput = Prisma.UserSecretUpsertWithoutUserInput

/**
 * @deprecated Renamed to `Prisma.UserCreateWithoutUserSecretInput`
 */
export type UserCreateWithoutUserSecretInput = Prisma.UserCreateWithoutUserSecretInput

/**
 * @deprecated Renamed to `Prisma.UserUncheckedCreateWithoutUserSecretInput`
 */
export type UserUncheckedCreateWithoutUserSecretInput = Prisma.UserUncheckedCreateWithoutUserSecretInput

/**
 * @deprecated Renamed to `Prisma.UserCreateOrConnectWithoutuserSecretInput`
 */
export type UserCreateOrConnectWithoutuserSecretInput = Prisma.UserCreateOrConnectWithoutuserSecretInput

/**
 * @deprecated Renamed to `Prisma.UserUpdateWithoutUserSecretInput`
 */
export type UserUpdateWithoutUserSecretInput = Prisma.UserUpdateWithoutUserSecretInput

/**
 * @deprecated Renamed to `Prisma.UserUncheckedUpdateWithoutUserSecretInput`
 */
export type UserUncheckedUpdateWithoutUserSecretInput = Prisma.UserUncheckedUpdateWithoutUserSecretInput

/**
 * @deprecated Renamed to `Prisma.UserUpsertWithoutUserSecretInput`
 */
export type UserUpsertWithoutUserSecretInput = Prisma.UserUpsertWithoutUserSecretInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateWithoutCharacterInput`
 */
export type CharacterAscensionCreateWithoutCharacterInput = Prisma.CharacterAscensionCreateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedCreateWithoutCharacterInput`
 */
export type CharacterAscensionUncheckedCreateWithoutCharacterInput = Prisma.CharacterAscensionUncheckedCreateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateOrConnectWithoutcharacterInput`
 */
export type CharacterAscensionCreateOrConnectWithoutcharacterInput = Prisma.CharacterAscensionCreateOrConnectWithoutcharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateWithoutCharacterInput`
 */
export type CharacterProfileCreateWithoutCharacterInput = Prisma.CharacterProfileCreateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedCreateWithoutCharacterInput`
 */
export type CharacterProfileUncheckedCreateWithoutCharacterInput = Prisma.CharacterProfileUncheckedCreateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateOrConnectWithoutcharacterInput`
 */
export type CharacterProfileCreateOrConnectWithoutcharacterInput = Prisma.CharacterProfileCreateOrConnectWithoutcharacterInput

/**
 * @deprecated Renamed to `Prisma.ElementCreateWithoutCharactersInput`
 */
export type ElementCreateWithoutCharactersInput = Prisma.ElementCreateWithoutCharactersInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedCreateWithoutCharactersInput`
 */
export type ElementUncheckedCreateWithoutCharactersInput = Prisma.ElementUncheckedCreateWithoutCharactersInput

/**
 * @deprecated Renamed to `Prisma.ElementCreateOrConnectWithoutcharactersInput`
 */
export type ElementCreateOrConnectWithoutcharactersInput = Prisma.ElementCreateOrConnectWithoutcharactersInput

/**
 * @deprecated Renamed to `Prisma.TalentCreateWithoutCharacterInput`
 */
export type TalentCreateWithoutCharacterInput = Prisma.TalentCreateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedCreateWithoutCharacterInput`
 */
export type TalentUncheckedCreateWithoutCharacterInput = Prisma.TalentUncheckedCreateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.TalentCreateOrConnectWithoutcharacterInput`
 */
export type TalentCreateOrConnectWithoutcharacterInput = Prisma.TalentCreateOrConnectWithoutcharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateWithWhereUniqueWithoutCharacterInput`
 */
export type CharacterAscensionUpdateWithWhereUniqueWithoutCharacterInput = Prisma.CharacterAscensionUpdateWithWhereUniqueWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateManyWithWhereWithoutCharacterInput`
 */
export type CharacterAscensionUpdateManyWithWhereWithoutCharacterInput = Prisma.CharacterAscensionUpdateManyWithWhereWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionScalarWhereInput`
 */
export type CharacterAscensionScalarWhereInput = Prisma.CharacterAscensionScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpsertWithWhereUniqueWithoutCharacterInput`
 */
export type CharacterAscensionUpsertWithWhereUniqueWithoutCharacterInput = Prisma.CharacterAscensionUpsertWithWhereUniqueWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateWithoutCharacterInput`
 */
export type CharacterProfileUpdateWithoutCharacterInput = Prisma.CharacterProfileUpdateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedUpdateWithoutCharacterInput`
 */
export type CharacterProfileUncheckedUpdateWithoutCharacterInput = Prisma.CharacterProfileUncheckedUpdateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpsertWithoutCharacterInput`
 */
export type CharacterProfileUpsertWithoutCharacterInput = Prisma.CharacterProfileUpsertWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.ElementUpdateWithWhereUniqueWithoutCharactersInput`
 */
export type ElementUpdateWithWhereUniqueWithoutCharactersInput = Prisma.ElementUpdateWithWhereUniqueWithoutCharactersInput

/**
 * @deprecated Renamed to `Prisma.ElementUpdateManyWithWhereWithoutCharactersInput`
 */
export type ElementUpdateManyWithWhereWithoutCharactersInput = Prisma.ElementUpdateManyWithWhereWithoutCharactersInput

/**
 * @deprecated Renamed to `Prisma.ElementScalarWhereInput`
 */
export type ElementScalarWhereInput = Prisma.ElementScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.ElementUpsertWithWhereUniqueWithoutCharactersInput`
 */
export type ElementUpsertWithWhereUniqueWithoutCharactersInput = Prisma.ElementUpsertWithWhereUniqueWithoutCharactersInput

/**
 * @deprecated Renamed to `Prisma.TalentUpdateWithWhereUniqueWithoutCharacterInput`
 */
export type TalentUpdateWithWhereUniqueWithoutCharacterInput = Prisma.TalentUpdateWithWhereUniqueWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.TalentUpdateManyWithWhereWithoutCharacterInput`
 */
export type TalentUpdateManyWithWhereWithoutCharacterInput = Prisma.TalentUpdateManyWithWhereWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.TalentScalarWhereInput`
 */
export type TalentScalarWhereInput = Prisma.TalentScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.TalentUpsertWithWhereUniqueWithoutCharacterInput`
 */
export type TalentUpsertWithWhereUniqueWithoutCharacterInput = Prisma.TalentUpsertWithWhereUniqueWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateWithoutAscensionsInput`
 */
export type CharacterCreateWithoutAscensionsInput = Prisma.CharacterCreateWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedCreateWithoutAscensionsInput`
 */
export type CharacterUncheckedCreateWithoutAscensionsInput = Prisma.CharacterUncheckedCreateWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateOrConnectWithoutascensionsInput`
 */
export type CharacterCreateOrConnectWithoutascensionsInput = Prisma.CharacterCreateOrConnectWithoutascensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialCreateWithoutCharacterAscensionsInput`
 */
export type CharacterAscensionMaterialCreateWithoutCharacterAscensionsInput = Prisma.CharacterAscensionMaterialCreateWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput`
 */
export type CharacterAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput = Prisma.CharacterAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput`
 */
export type CharacterAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput = Prisma.CharacterAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialCreateWithoutCharacterAscensionsInput`
 */
export type CommonAscensionMaterialCreateWithoutCharacterAscensionsInput = Prisma.CommonAscensionMaterialCreateWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput`
 */
export type CommonAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput = Prisma.CommonAscensionMaterialUncheckedCreateWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput`
 */
export type CommonAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput = Prisma.CommonAscensionMaterialCreateOrConnectWithoutcharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateWithoutAscensionsInput`
 */
export type CharacterUpdateWithoutAscensionsInput = Prisma.CharacterUpdateWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedUpdateWithoutAscensionsInput`
 */
export type CharacterUncheckedUpdateWithoutAscensionsInput = Prisma.CharacterUncheckedUpdateWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpsertWithoutAscensionsInput`
 */
export type CharacterUpsertWithoutAscensionsInput = Prisma.CharacterUpsertWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUpdateWithoutCharacterAscensionsInput`
 */
export type CharacterAscensionMaterialUpdateWithoutCharacterAscensionsInput = Prisma.CharacterAscensionMaterialUpdateWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput`
 */
export type CharacterAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput = Prisma.CharacterAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionMaterialUpsertWithoutCharacterAscensionsInput`
 */
export type CharacterAscensionMaterialUpsertWithoutCharacterAscensionsInput = Prisma.CharacterAscensionMaterialUpsertWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateWithWhereUniqueWithoutCharacterAscensionsInput`
 */
export type CommonAscensionMaterialUpdateWithWhereUniqueWithoutCharacterAscensionsInput = Prisma.CommonAscensionMaterialUpdateWithWhereUniqueWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateManyWithWhereWithoutCharacterAscensionsInput`
 */
export type CommonAscensionMaterialUpdateManyWithWhereWithoutCharacterAscensionsInput = Prisma.CommonAscensionMaterialUpdateManyWithWhereWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialScalarWhereInput`
 */
export type CommonAscensionMaterialScalarWhereInput = Prisma.CommonAscensionMaterialScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpsertWithWhereUniqueWithoutCharacterAscensionsInput`
 */
export type CommonAscensionMaterialUpsertWithWhereUniqueWithoutCharacterAscensionsInput = Prisma.CommonAscensionMaterialUpsertWithWhereUniqueWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.RegionCreateWithoutCharacterProfilesInput`
 */
export type RegionCreateWithoutCharacterProfilesInput = Prisma.RegionCreateWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.RegionUncheckedCreateWithoutCharacterProfilesInput`
 */
export type RegionUncheckedCreateWithoutCharacterProfilesInput = Prisma.RegionUncheckedCreateWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.RegionCreateOrConnectWithoutcharacterProfilesInput`
 */
export type RegionCreateOrConnectWithoutcharacterProfilesInput = Prisma.RegionCreateOrConnectWithoutcharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableCreateWithoutCharacterSpecialtyInput`
 */
export type ConsumeableCreateWithoutCharacterSpecialtyInput = Prisma.ConsumeableCreateWithoutCharacterSpecialtyInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUncheckedCreateWithoutCharacterSpecialtyInput`
 */
export type ConsumeableUncheckedCreateWithoutCharacterSpecialtyInput = Prisma.ConsumeableUncheckedCreateWithoutCharacterSpecialtyInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableCreateOrConnectWithoutcharacterSpecialtyInput`
 */
export type ConsumeableCreateOrConnectWithoutcharacterSpecialtyInput = Prisma.ConsumeableCreateOrConnectWithoutcharacterSpecialtyInput

/**
 * @deprecated Renamed to `Prisma.ElementCreateWithoutCharacterProfilesInput`
 */
export type ElementCreateWithoutCharacterProfilesInput = Prisma.ElementCreateWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedCreateWithoutCharacterProfilesInput`
 */
export type ElementUncheckedCreateWithoutCharacterProfilesInput = Prisma.ElementUncheckedCreateWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.ElementCreateOrConnectWithoutcharacterProfilesInput`
 */
export type ElementCreateOrConnectWithoutcharacterProfilesInput = Prisma.ElementCreateOrConnectWithoutcharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateWithoutCharacterProfileInput`
 */
export type CharacterCreateWithoutCharacterProfileInput = Prisma.CharacterCreateWithoutCharacterProfileInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedCreateWithoutCharacterProfileInput`
 */
export type CharacterUncheckedCreateWithoutCharacterProfileInput = Prisma.CharacterUncheckedCreateWithoutCharacterProfileInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateOrConnectWithoutcharacterProfileInput`
 */
export type CharacterCreateOrConnectWithoutcharacterProfileInput = Prisma.CharacterCreateOrConnectWithoutcharacterProfileInput

/**
 * @deprecated Renamed to `Prisma.RegionUpdateWithoutCharacterProfilesInput`
 */
export type RegionUpdateWithoutCharacterProfilesInput = Prisma.RegionUpdateWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.RegionUncheckedUpdateWithoutCharacterProfilesInput`
 */
export type RegionUncheckedUpdateWithoutCharacterProfilesInput = Prisma.RegionUncheckedUpdateWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.RegionUpsertWithoutCharacterProfilesInput`
 */
export type RegionUpsertWithoutCharacterProfilesInput = Prisma.RegionUpsertWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpdateWithoutCharacterSpecialtyInput`
 */
export type ConsumeableUpdateWithoutCharacterSpecialtyInput = Prisma.ConsumeableUpdateWithoutCharacterSpecialtyInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUncheckedUpdateWithoutCharacterSpecialtyInput`
 */
export type ConsumeableUncheckedUpdateWithoutCharacterSpecialtyInput = Prisma.ConsumeableUncheckedUpdateWithoutCharacterSpecialtyInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpsertWithoutCharacterSpecialtyInput`
 */
export type ConsumeableUpsertWithoutCharacterSpecialtyInput = Prisma.ConsumeableUpsertWithoutCharacterSpecialtyInput

/**
 * @deprecated Renamed to `Prisma.ElementUpdateWithoutCharacterProfilesInput`
 */
export type ElementUpdateWithoutCharacterProfilesInput = Prisma.ElementUpdateWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedUpdateWithoutCharacterProfilesInput`
 */
export type ElementUncheckedUpdateWithoutCharacterProfilesInput = Prisma.ElementUncheckedUpdateWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.ElementUpsertWithoutCharacterProfilesInput`
 */
export type ElementUpsertWithoutCharacterProfilesInput = Prisma.ElementUpsertWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateWithoutCharacterProfileInput`
 */
export type CharacterUpdateWithoutCharacterProfileInput = Prisma.CharacterUpdateWithoutCharacterProfileInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedUpdateWithoutCharacterProfileInput`
 */
export type CharacterUncheckedUpdateWithoutCharacterProfileInput = Prisma.CharacterUncheckedUpdateWithoutCharacterProfileInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpsertWithoutCharacterProfileInput`
 */
export type CharacterUpsertWithoutCharacterProfileInput = Prisma.CharacterUpsertWithoutCharacterProfileInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateWithoutTalentsInput`
 */
export type CharacterCreateWithoutTalentsInput = Prisma.CharacterCreateWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedCreateWithoutTalentsInput`
 */
export type CharacterUncheckedCreateWithoutTalentsInput = Prisma.CharacterUncheckedCreateWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateOrConnectWithouttalentsInput`
 */
export type CharacterCreateOrConnectWithouttalentsInput = Prisma.CharacterCreateOrConnectWithouttalentsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialCreateWithoutTalentsInput`
 */
export type TalentLevelUpMaterialCreateWithoutTalentsInput = Prisma.TalentLevelUpMaterialCreateWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUncheckedCreateWithoutTalentsInput`
 */
export type TalentLevelUpMaterialUncheckedCreateWithoutTalentsInput = Prisma.TalentLevelUpMaterialUncheckedCreateWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialCreateOrConnectWithouttalentsInput`
 */
export type TalentLevelUpMaterialCreateOrConnectWithouttalentsInput = Prisma.TalentLevelUpMaterialCreateOrConnectWithouttalentsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateWithoutTalentsInput`
 */
export type CharacterUpdateWithoutTalentsInput = Prisma.CharacterUpdateWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedUpdateWithoutTalentsInput`
 */
export type CharacterUncheckedUpdateWithoutTalentsInput = Prisma.CharacterUncheckedUpdateWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpsertWithoutTalentsInput`
 */
export type CharacterUpsertWithoutTalentsInput = Prisma.CharacterUpsertWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpdateWithoutTalentsInput`
 */
export type TalentLevelUpMaterialUpdateWithoutTalentsInput = Prisma.TalentLevelUpMaterialUpdateWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUncheckedUpdateWithoutTalentsInput`
 */
export type TalentLevelUpMaterialUncheckedUpdateWithoutTalentsInput = Prisma.TalentLevelUpMaterialUncheckedUpdateWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpsertWithoutTalentsInput`
 */
export type TalentLevelUpMaterialUpsertWithoutTalentsInput = Prisma.TalentLevelUpMaterialUpsertWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateWithoutElementsInput`
 */
export type CharacterCreateWithoutElementsInput = Prisma.CharacterCreateWithoutElementsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedCreateWithoutElementsInput`
 */
export type CharacterUncheckedCreateWithoutElementsInput = Prisma.CharacterUncheckedCreateWithoutElementsInput

/**
 * @deprecated Renamed to `Prisma.CharacterCreateOrConnectWithoutelementsInput`
 */
export type CharacterCreateOrConnectWithoutelementsInput = Prisma.CharacterCreateOrConnectWithoutelementsInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateWithoutVisionInput`
 */
export type CharacterProfileCreateWithoutVisionInput = Prisma.CharacterProfileCreateWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedCreateWithoutVisionInput`
 */
export type CharacterProfileUncheckedCreateWithoutVisionInput = Prisma.CharacterProfileUncheckedCreateWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateOrConnectWithoutvisionInput`
 */
export type CharacterProfileCreateOrConnectWithoutvisionInput = Prisma.CharacterProfileCreateOrConnectWithoutvisionInput

/**
 * @deprecated Renamed to `Prisma.RegionCreateWithoutElementInput`
 */
export type RegionCreateWithoutElementInput = Prisma.RegionCreateWithoutElementInput

/**
 * @deprecated Renamed to `Prisma.RegionUncheckedCreateWithoutElementInput`
 */
export type RegionUncheckedCreateWithoutElementInput = Prisma.RegionUncheckedCreateWithoutElementInput

/**
 * @deprecated Renamed to `Prisma.RegionCreateOrConnectWithoutelementInput`
 */
export type RegionCreateOrConnectWithoutelementInput = Prisma.RegionCreateOrConnectWithoutelementInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateWithWhereUniqueWithoutElementsInput`
 */
export type CharacterUpdateWithWhereUniqueWithoutElementsInput = Prisma.CharacterUpdateWithWhereUniqueWithoutElementsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateManyWithWhereWithoutElementsInput`
 */
export type CharacterUpdateManyWithWhereWithoutElementsInput = Prisma.CharacterUpdateManyWithWhereWithoutElementsInput

/**
 * @deprecated Renamed to `Prisma.CharacterScalarWhereInput`
 */
export type CharacterScalarWhereInput = Prisma.CharacterScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpsertWithWhereUniqueWithoutElementsInput`
 */
export type CharacterUpsertWithWhereUniqueWithoutElementsInput = Prisma.CharacterUpsertWithWhereUniqueWithoutElementsInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateWithWhereUniqueWithoutVisionInput`
 */
export type CharacterProfileUpdateWithWhereUniqueWithoutVisionInput = Prisma.CharacterProfileUpdateWithWhereUniqueWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateManyWithWhereWithoutVisionInput`
 */
export type CharacterProfileUpdateManyWithWhereWithoutVisionInput = Prisma.CharacterProfileUpdateManyWithWhereWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileScalarWhereInput`
 */
export type CharacterProfileScalarWhereInput = Prisma.CharacterProfileScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpsertWithWhereUniqueWithoutVisionInput`
 */
export type CharacterProfileUpsertWithWhereUniqueWithoutVisionInput = Prisma.CharacterProfileUpsertWithWhereUniqueWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.RegionUpdateWithoutElementInput`
 */
export type RegionUpdateWithoutElementInput = Prisma.RegionUpdateWithoutElementInput

/**
 * @deprecated Renamed to `Prisma.RegionUncheckedUpdateWithoutElementInput`
 */
export type RegionUncheckedUpdateWithoutElementInput = Prisma.RegionUncheckedUpdateWithoutElementInput

/**
 * @deprecated Renamed to `Prisma.RegionUpsertWithoutElementInput`
 */
export type RegionUpsertWithoutElementInput = Prisma.RegionUpsertWithoutElementInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateWithoutRegionInput`
 */
export type CharacterProfileCreateWithoutRegionInput = Prisma.CharacterProfileCreateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedCreateWithoutRegionInput`
 */
export type CharacterProfileUncheckedCreateWithoutRegionInput = Prisma.CharacterProfileUncheckedCreateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateOrConnectWithoutregionInput`
 */
export type CharacterProfileCreateOrConnectWithoutregionInput = Prisma.CharacterProfileCreateOrConnectWithoutregionInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateWithoutRegionInput`
 */
export type DomainCreateWithoutRegionInput = Prisma.DomainCreateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedCreateWithoutRegionInput`
 */
export type DomainUncheckedCreateWithoutRegionInput = Prisma.DomainUncheckedCreateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateOrConnectWithoutregionInput`
 */
export type DomainCreateOrConnectWithoutregionInput = Prisma.DomainCreateOrConnectWithoutregionInput

/**
 * @deprecated Renamed to `Prisma.ElementCreateWithoutRegionInput`
 */
export type ElementCreateWithoutRegionInput = Prisma.ElementCreateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedCreateWithoutRegionInput`
 */
export type ElementUncheckedCreateWithoutRegionInput = Prisma.ElementUncheckedCreateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.ElementCreateOrConnectWithoutregionInput`
 */
export type ElementCreateOrConnectWithoutregionInput = Prisma.ElementCreateOrConnectWithoutregionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateWithWhereUniqueWithoutRegionInput`
 */
export type CharacterProfileUpdateWithWhereUniqueWithoutRegionInput = Prisma.CharacterProfileUpdateWithWhereUniqueWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateManyWithWhereWithoutRegionInput`
 */
export type CharacterProfileUpdateManyWithWhereWithoutRegionInput = Prisma.CharacterProfileUpdateManyWithWhereWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpsertWithWhereUniqueWithoutRegionInput`
 */
export type CharacterProfileUpsertWithWhereUniqueWithoutRegionInput = Prisma.CharacterProfileUpsertWithWhereUniqueWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateWithWhereUniqueWithoutRegionInput`
 */
export type DomainUpdateWithWhereUniqueWithoutRegionInput = Prisma.DomainUpdateWithWhereUniqueWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateManyWithWhereWithoutRegionInput`
 */
export type DomainUpdateManyWithWhereWithoutRegionInput = Prisma.DomainUpdateManyWithWhereWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainScalarWhereInput`
 */
export type DomainScalarWhereInput = Prisma.DomainScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.DomainUpsertWithWhereUniqueWithoutRegionInput`
 */
export type DomainUpsertWithWhereUniqueWithoutRegionInput = Prisma.DomainUpsertWithWhereUniqueWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.ElementUpdateWithoutRegionInput`
 */
export type ElementUpdateWithoutRegionInput = Prisma.ElementUpdateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedUpdateWithoutRegionInput`
 */
export type ElementUncheckedUpdateWithoutRegionInput = Prisma.ElementUncheckedUpdateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.ElementUpsertWithoutRegionInput`
 */
export type ElementUpsertWithoutRegionInput = Prisma.ElementUpsertWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateWithoutWeaponInput`
 */
export type WeaponAscensionCreateWithoutWeaponInput = Prisma.WeaponAscensionCreateWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedCreateWithoutWeaponInput`
 */
export type WeaponAscensionUncheckedCreateWithoutWeaponInput = Prisma.WeaponAscensionUncheckedCreateWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateOrConnectWithoutweaponInput`
 */
export type WeaponAscensionCreateOrConnectWithoutweaponInput = Prisma.WeaponAscensionCreateOrConnectWithoutweaponInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateWithoutWeaponInput`
 */
export type ForgeRecipeCreateWithoutWeaponInput = Prisma.ForgeRecipeCreateWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedCreateWithoutWeaponInput`
 */
export type ForgeRecipeUncheckedCreateWithoutWeaponInput = Prisma.ForgeRecipeUncheckedCreateWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateOrConnectWithoutweaponInput`
 */
export type ForgeRecipeCreateOrConnectWithoutweaponInput = Prisma.ForgeRecipeCreateOrConnectWithoutweaponInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateWithWhereUniqueWithoutWeaponInput`
 */
export type WeaponAscensionUpdateWithWhereUniqueWithoutWeaponInput = Prisma.WeaponAscensionUpdateWithWhereUniqueWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateManyWithWhereWithoutWeaponInput`
 */
export type WeaponAscensionUpdateManyWithWhereWithoutWeaponInput = Prisma.WeaponAscensionUpdateManyWithWhereWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionScalarWhereInput`
 */
export type WeaponAscensionScalarWhereInput = Prisma.WeaponAscensionScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpsertWithWhereUniqueWithoutWeaponInput`
 */
export type WeaponAscensionUpsertWithWhereUniqueWithoutWeaponInput = Prisma.WeaponAscensionUpsertWithWhereUniqueWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpdateWithoutWeaponInput`
 */
export type ForgeRecipeUpdateWithoutWeaponInput = Prisma.ForgeRecipeUpdateWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedUpdateWithoutWeaponInput`
 */
export type ForgeRecipeUncheckedUpdateWithoutWeaponInput = Prisma.ForgeRecipeUncheckedUpdateWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpsertWithoutWeaponInput`
 */
export type ForgeRecipeUpsertWithoutWeaponInput = Prisma.ForgeRecipeUpsertWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialCreateWithoutWeaponAscensionsInput`
 */
export type CommonAscensionMaterialCreateWithoutWeaponAscensionsInput = Prisma.CommonAscensionMaterialCreateWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput`
 */
export type CommonAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput = Prisma.CommonAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput`
 */
export type CommonAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput = Prisma.CommonAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialCreateWithoutWeaponAscensionsInput`
 */
export type WeaponAscensionMaterialCreateWithoutWeaponAscensionsInput = Prisma.WeaponAscensionMaterialCreateWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput`
 */
export type WeaponAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput = Prisma.WeaponAscensionMaterialUncheckedCreateWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput`
 */
export type WeaponAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput = Prisma.WeaponAscensionMaterialCreateOrConnectWithoutweaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponCreateWithoutAscensionsInput`
 */
export type WeaponCreateWithoutAscensionsInput = Prisma.WeaponCreateWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponUncheckedCreateWithoutAscensionsInput`
 */
export type WeaponUncheckedCreateWithoutAscensionsInput = Prisma.WeaponUncheckedCreateWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponCreateOrConnectWithoutascensionsInput`
 */
export type WeaponCreateOrConnectWithoutascensionsInput = Prisma.WeaponCreateOrConnectWithoutascensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateWithWhereUniqueWithoutWeaponAscensionsInput`
 */
export type CommonAscensionMaterialUpdateWithWhereUniqueWithoutWeaponAscensionsInput = Prisma.CommonAscensionMaterialUpdateWithWhereUniqueWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateManyWithWhereWithoutWeaponAscensionsInput`
 */
export type CommonAscensionMaterialUpdateManyWithWhereWithoutWeaponAscensionsInput = Prisma.CommonAscensionMaterialUpdateManyWithWhereWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpsertWithWhereUniqueWithoutWeaponAscensionsInput`
 */
export type CommonAscensionMaterialUpsertWithWhereUniqueWithoutWeaponAscensionsInput = Prisma.CommonAscensionMaterialUpsertWithWhereUniqueWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpdateWithoutWeaponAscensionsInput`
 */
export type WeaponAscensionMaterialUpdateWithoutWeaponAscensionsInput = Prisma.WeaponAscensionMaterialUpdateWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput`
 */
export type WeaponAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput = Prisma.WeaponAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpsertWithoutWeaponAscensionsInput`
 */
export type WeaponAscensionMaterialUpsertWithoutWeaponAscensionsInput = Prisma.WeaponAscensionMaterialUpsertWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponUpdateWithoutAscensionsInput`
 */
export type WeaponUpdateWithoutAscensionsInput = Prisma.WeaponUpdateWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponUncheckedUpdateWithoutAscensionsInput`
 */
export type WeaponUncheckedUpdateWithoutAscensionsInput = Prisma.WeaponUncheckedUpdateWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponUpsertWithoutAscensionsInput`
 */
export type WeaponUpsertWithoutAscensionsInput = Prisma.WeaponUpsertWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateWithoutCommonAscensionMaterialsInput`
 */
export type CharacterAscensionCreateWithoutCommonAscensionMaterialsInput = Prisma.CharacterAscensionCreateWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput`
 */
export type CharacterAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput = Prisma.CharacterAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput`
 */
export type CharacterAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput = Prisma.CharacterAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateWithoutCommonAscensionMaterialsInput`
 */
export type WeaponAscensionCreateWithoutCommonAscensionMaterialsInput = Prisma.WeaponAscensionCreateWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput`
 */
export type WeaponAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput = Prisma.WeaponAscensionUncheckedCreateWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput`
 */
export type WeaponAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput = Prisma.WeaponAscensionCreateOrConnectWithoutcommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateWithWhereUniqueWithoutCommonAscensionMaterialsInput`
 */
export type CharacterAscensionUpdateWithWhereUniqueWithoutCommonAscensionMaterialsInput = Prisma.CharacterAscensionUpdateWithWhereUniqueWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateManyWithWhereWithoutCommonAscensionMaterialsInput`
 */
export type CharacterAscensionUpdateManyWithWhereWithoutCommonAscensionMaterialsInput = Prisma.CharacterAscensionUpdateManyWithWhereWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpsertWithWhereUniqueWithoutCommonAscensionMaterialsInput`
 */
export type CharacterAscensionUpsertWithWhereUniqueWithoutCommonAscensionMaterialsInput = Prisma.CharacterAscensionUpsertWithWhereUniqueWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateWithWhereUniqueWithoutCommonAscensionMaterialsInput`
 */
export type WeaponAscensionUpdateWithWhereUniqueWithoutCommonAscensionMaterialsInput = Prisma.WeaponAscensionUpdateWithWhereUniqueWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateManyWithWhereWithoutCommonAscensionMaterialsInput`
 */
export type WeaponAscensionUpdateManyWithWhereWithoutCommonAscensionMaterialsInput = Prisma.WeaponAscensionUpdateManyWithWhereWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpsertWithWhereUniqueWithoutCommonAscensionMaterialsInput`
 */
export type WeaponAscensionUpsertWithWhereUniqueWithoutCommonAscensionMaterialsInput = Prisma.WeaponAscensionUpsertWithWhereUniqueWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateWithoutWeaponAscensionMaterialsInput`
 */
export type DomainCreateWithoutWeaponAscensionMaterialsInput = Prisma.DomainCreateWithoutWeaponAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedCreateWithoutWeaponAscensionMaterialsInput`
 */
export type DomainUncheckedCreateWithoutWeaponAscensionMaterialsInput = Prisma.DomainUncheckedCreateWithoutWeaponAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateOrConnectWithoutweaponAscensionMaterialsInput`
 */
export type DomainCreateOrConnectWithoutweaponAscensionMaterialsInput = Prisma.DomainCreateOrConnectWithoutweaponAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionCreateWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionCreateWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedCreateWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionUncheckedCreateWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionUncheckedCreateWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionCreateOrConnectWithoutweaponAscensionMaterialInput`
 */
export type WeaponAscensionCreateOrConnectWithoutweaponAscensionMaterialInput = Prisma.WeaponAscensionCreateOrConnectWithoutweaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateWithoutWeaponAscensionMaterialsInput`
 */
export type DomainUpdateWithoutWeaponAscensionMaterialsInput = Prisma.DomainUpdateWithoutWeaponAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedUpdateWithoutWeaponAscensionMaterialsInput`
 */
export type DomainUncheckedUpdateWithoutWeaponAscensionMaterialsInput = Prisma.DomainUncheckedUpdateWithoutWeaponAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.DomainUpsertWithoutWeaponAscensionMaterialsInput`
 */
export type DomainUpsertWithoutWeaponAscensionMaterialsInput = Prisma.DomainUpsertWithoutWeaponAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateWithWhereUniqueWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionUpdateWithWhereUniqueWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionUpdateWithWhereUniqueWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateManyWithWhereWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionUpdateManyWithWhereWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionUpdateManyWithWhereWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpsertWithWhereUniqueWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionUpsertWithWhereUniqueWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionUpsertWithWhereUniqueWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateWithoutWeaponEnhancementMaterialInput`
 */
export type ForgeRecipeCreateWithoutWeaponEnhancementMaterialInput = Prisma.ForgeRecipeCreateWithoutWeaponEnhancementMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialInput`
 */
export type ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialInput = Prisma.ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialInput`
 */
export type ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialInput = Prisma.ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateWithoutWeaponEnhancementMaterialsInput`
 */
export type ForgeRecipeCreateWithoutWeaponEnhancementMaterialsInput = Prisma.ForgeRecipeCreateWithoutWeaponEnhancementMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialsInput`
 */
export type ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialsInput = Prisma.ForgeRecipeUncheckedCreateWithoutWeaponEnhancementMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialsInput`
 */
export type ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialsInput = Prisma.ForgeRecipeCreateOrConnectWithoutweaponEnhancementMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpdateWithoutWeaponEnhancementMaterialInput`
 */
export type ForgeRecipeUpdateWithoutWeaponEnhancementMaterialInput = Prisma.ForgeRecipeUpdateWithoutWeaponEnhancementMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialInput`
 */
export type ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialInput = Prisma.ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpsertWithoutWeaponEnhancementMaterialInput`
 */
export type ForgeRecipeUpsertWithoutWeaponEnhancementMaterialInput = Prisma.ForgeRecipeUpsertWithoutWeaponEnhancementMaterialInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpdateWithoutWeaponEnhancementMaterialsInput`
 */
export type ForgeRecipeUpdateWithoutWeaponEnhancementMaterialsInput = Prisma.ForgeRecipeUpdateWithoutWeaponEnhancementMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialsInput`
 */
export type ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialsInput = Prisma.ForgeRecipeUncheckedUpdateWithoutWeaponEnhancementMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ForgeRecipeUpsertWithoutWeaponEnhancementMaterialsInput`
 */
export type ForgeRecipeUpsertWithoutWeaponEnhancementMaterialsInput = Prisma.ForgeRecipeUpsertWithoutWeaponEnhancementMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionCreateWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionCreateWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedCreateWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionUncheckedCreateWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionUncheckedCreateWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionCreateOrConnectWithoutcharacterAscensionMaterialInput`
 */
export type CharacterAscensionCreateOrConnectWithoutcharacterAscensionMaterialInput = Prisma.CharacterAscensionCreateOrConnectWithoutcharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateWithWhereUniqueWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionUpdateWithWhereUniqueWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionUpdateWithWhereUniqueWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateManyWithWhereWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionUpdateManyWithWhereWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionUpdateManyWithWhereWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpsertWithWhereUniqueWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionUpsertWithWhereUniqueWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionUpsertWithWhereUniqueWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateWithoutTalentLevelUpMaterialsInput`
 */
export type DomainCreateWithoutTalentLevelUpMaterialsInput = Prisma.DomainCreateWithoutTalentLevelUpMaterialsInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedCreateWithoutTalentLevelUpMaterialsInput`
 */
export type DomainUncheckedCreateWithoutTalentLevelUpMaterialsInput = Prisma.DomainUncheckedCreateWithoutTalentLevelUpMaterialsInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateOrConnectWithouttalentLevelUpMaterialsInput`
 */
export type DomainCreateOrConnectWithouttalentLevelUpMaterialsInput = Prisma.DomainCreateOrConnectWithouttalentLevelUpMaterialsInput

/**
 * @deprecated Renamed to `Prisma.TalentCreateWithoutTalentLevelUpMaterialInput`
 */
export type TalentCreateWithoutTalentLevelUpMaterialInput = Prisma.TalentCreateWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedCreateWithoutTalentLevelUpMaterialInput`
 */
export type TalentUncheckedCreateWithoutTalentLevelUpMaterialInput = Prisma.TalentUncheckedCreateWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.TalentCreateOrConnectWithouttalentLevelUpMaterialInput`
 */
export type TalentCreateOrConnectWithouttalentLevelUpMaterialInput = Prisma.TalentCreateOrConnectWithouttalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateWithoutTalentLevelUpMaterialsInput`
 */
export type DomainUpdateWithoutTalentLevelUpMaterialsInput = Prisma.DomainUpdateWithoutTalentLevelUpMaterialsInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedUpdateWithoutTalentLevelUpMaterialsInput`
 */
export type DomainUncheckedUpdateWithoutTalentLevelUpMaterialsInput = Prisma.DomainUncheckedUpdateWithoutTalentLevelUpMaterialsInput

/**
 * @deprecated Renamed to `Prisma.DomainUpsertWithoutTalentLevelUpMaterialsInput`
 */
export type DomainUpsertWithoutTalentLevelUpMaterialsInput = Prisma.DomainUpsertWithoutTalentLevelUpMaterialsInput

/**
 * @deprecated Renamed to `Prisma.TalentUpdateWithWhereUniqueWithoutTalentLevelUpMaterialInput`
 */
export type TalentUpdateWithWhereUniqueWithoutTalentLevelUpMaterialInput = Prisma.TalentUpdateWithWhereUniqueWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.TalentUpdateManyWithWhereWithoutTalentLevelUpMaterialInput`
 */
export type TalentUpdateManyWithWhereWithoutTalentLevelUpMaterialInput = Prisma.TalentUpdateManyWithWhereWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.TalentUpsertWithWhereUniqueWithoutTalentLevelUpMaterialInput`
 */
export type TalentUpsertWithWhereUniqueWithoutTalentLevelUpMaterialInput = Prisma.TalentUpsertWithWhereUniqueWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateWithoutCraftingMaterialsInput`
 */
export type ConsumeableRecipeCreateWithoutCraftingMaterialsInput = Prisma.ConsumeableRecipeCreateWithoutCraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedCreateWithoutCraftingMaterialsInput`
 */
export type ConsumeableRecipeUncheckedCreateWithoutCraftingMaterialsInput = Prisma.ConsumeableRecipeUncheckedCreateWithoutCraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateOrConnectWithoutcraftingMaterialsInput`
 */
export type ConsumeableRecipeCreateOrConnectWithoutcraftingMaterialsInput = Prisma.ConsumeableRecipeCreateOrConnectWithoutcraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateWithWhereUniqueWithoutCraftingMaterialsInput`
 */
export type ConsumeableRecipeUpdateWithWhereUniqueWithoutCraftingMaterialsInput = Prisma.ConsumeableRecipeUpdateWithWhereUniqueWithoutCraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateManyWithWhereWithoutCraftingMaterialsInput`
 */
export type ConsumeableRecipeUpdateManyWithWhereWithoutCraftingMaterialsInput = Prisma.ConsumeableRecipeUpdateManyWithWhereWithoutCraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeScalarWhereInput`
 */
export type ConsumeableRecipeScalarWhereInput = Prisma.ConsumeableRecipeScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpsertWithWhereUniqueWithoutCraftingMaterialsInput`
 */
export type ConsumeableRecipeUpsertWithWhereUniqueWithoutCraftingMaterialsInput = Prisma.ConsumeableRecipeUpsertWithWhereUniqueWithoutCraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeCreateWithoutMaterialInput`
 */
export type ProcessRecipeCreateWithoutMaterialInput = Prisma.ProcessRecipeCreateWithoutMaterialInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUncheckedCreateWithoutMaterialInput`
 */
export type ProcessRecipeUncheckedCreateWithoutMaterialInput = Prisma.ProcessRecipeUncheckedCreateWithoutMaterialInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeCreateOrConnectWithoutmaterialInput`
 */
export type ProcessRecipeCreateOrConnectWithoutmaterialInput = Prisma.ProcessRecipeCreateOrConnectWithoutmaterialInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateWithoutCookingMaterialsInput`
 */
export type ConsumeableRecipeCreateWithoutCookingMaterialsInput = Prisma.ConsumeableRecipeCreateWithoutCookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedCreateWithoutCookingMaterialsInput`
 */
export type ConsumeableRecipeUncheckedCreateWithoutCookingMaterialsInput = Prisma.ConsumeableRecipeUncheckedCreateWithoutCookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateOrConnectWithoutcookingMaterialsInput`
 */
export type ConsumeableRecipeCreateOrConnectWithoutcookingMaterialsInput = Prisma.ConsumeableRecipeCreateOrConnectWithoutcookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUpdateWithoutMaterialInput`
 */
export type ProcessRecipeUpdateWithoutMaterialInput = Prisma.ProcessRecipeUpdateWithoutMaterialInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUncheckedUpdateWithoutMaterialInput`
 */
export type ProcessRecipeUncheckedUpdateWithoutMaterialInput = Prisma.ProcessRecipeUncheckedUpdateWithoutMaterialInput

/**
 * @deprecated Renamed to `Prisma.ProcessRecipeUpsertWithoutMaterialInput`
 */
export type ProcessRecipeUpsertWithoutMaterialInput = Prisma.ProcessRecipeUpsertWithoutMaterialInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateWithWhereUniqueWithoutCookingMaterialsInput`
 */
export type ConsumeableRecipeUpdateWithWhereUniqueWithoutCookingMaterialsInput = Prisma.ConsumeableRecipeUpdateWithWhereUniqueWithoutCookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateManyWithWhereWithoutCookingMaterialsInput`
 */
export type ConsumeableRecipeUpdateManyWithWhereWithoutCookingMaterialsInput = Prisma.ConsumeableRecipeUpdateManyWithWhereWithoutCookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpsertWithWhereUniqueWithoutCookingMaterialsInput`
 */
export type ConsumeableRecipeUpsertWithWhereUniqueWithoutCookingMaterialsInput = Prisma.ConsumeableRecipeUpsertWithWhereUniqueWithoutCookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ArtifactCreateWithoutDomainInput`
 */
export type ArtifactCreateWithoutDomainInput = Prisma.ArtifactCreateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedCreateWithoutDomainInput`
 */
export type ArtifactUncheckedCreateWithoutDomainInput = Prisma.ArtifactUncheckedCreateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.ArtifactCreateOrConnectWithoutdomainInput`
 */
export type ArtifactCreateOrConnectWithoutdomainInput = Prisma.ArtifactCreateOrConnectWithoutdomainInput

/**
 * @deprecated Renamed to `Prisma.RegionCreateWithoutDomainsInput`
 */
export type RegionCreateWithoutDomainsInput = Prisma.RegionCreateWithoutDomainsInput

/**
 * @deprecated Renamed to `Prisma.RegionUncheckedCreateWithoutDomainsInput`
 */
export type RegionUncheckedCreateWithoutDomainsInput = Prisma.RegionUncheckedCreateWithoutDomainsInput

/**
 * @deprecated Renamed to `Prisma.RegionCreateOrConnectWithoutdomainsInput`
 */
export type RegionCreateOrConnectWithoutdomainsInput = Prisma.RegionCreateOrConnectWithoutdomainsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialCreateWithoutDomainInput`
 */
export type TalentLevelUpMaterialCreateWithoutDomainInput = Prisma.TalentLevelUpMaterialCreateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUncheckedCreateWithoutDomainInput`
 */
export type TalentLevelUpMaterialUncheckedCreateWithoutDomainInput = Prisma.TalentLevelUpMaterialUncheckedCreateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialCreateOrConnectWithoutdomainInput`
 */
export type TalentLevelUpMaterialCreateOrConnectWithoutdomainInput = Prisma.TalentLevelUpMaterialCreateOrConnectWithoutdomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialCreateWithoutDomainInput`
 */
export type WeaponAscensionMaterialCreateWithoutDomainInput = Prisma.WeaponAscensionMaterialCreateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUncheckedCreateWithoutDomainInput`
 */
export type WeaponAscensionMaterialUncheckedCreateWithoutDomainInput = Prisma.WeaponAscensionMaterialUncheckedCreateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialCreateOrConnectWithoutdomainInput`
 */
export type WeaponAscensionMaterialCreateOrConnectWithoutdomainInput = Prisma.WeaponAscensionMaterialCreateOrConnectWithoutdomainInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateWithWhereUniqueWithoutDomainInput`
 */
export type ArtifactUpdateWithWhereUniqueWithoutDomainInput = Prisma.ArtifactUpdateWithWhereUniqueWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateManyWithWhereWithoutDomainInput`
 */
export type ArtifactUpdateManyWithWhereWithoutDomainInput = Prisma.ArtifactUpdateManyWithWhereWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.ArtifactScalarWhereInput`
 */
export type ArtifactScalarWhereInput = Prisma.ArtifactScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpsertWithWhereUniqueWithoutDomainInput`
 */
export type ArtifactUpsertWithWhereUniqueWithoutDomainInput = Prisma.ArtifactUpsertWithWhereUniqueWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.RegionUpdateWithoutDomainsInput`
 */
export type RegionUpdateWithoutDomainsInput = Prisma.RegionUpdateWithoutDomainsInput

/**
 * @deprecated Renamed to `Prisma.RegionUncheckedUpdateWithoutDomainsInput`
 */
export type RegionUncheckedUpdateWithoutDomainsInput = Prisma.RegionUncheckedUpdateWithoutDomainsInput

/**
 * @deprecated Renamed to `Prisma.RegionUpsertWithoutDomainsInput`
 */
export type RegionUpsertWithoutDomainsInput = Prisma.RegionUpsertWithoutDomainsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpdateWithWhereUniqueWithoutDomainInput`
 */
export type TalentLevelUpMaterialUpdateWithWhereUniqueWithoutDomainInput = Prisma.TalentLevelUpMaterialUpdateWithWhereUniqueWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpdateManyWithWhereWithoutDomainInput`
 */
export type TalentLevelUpMaterialUpdateManyWithWhereWithoutDomainInput = Prisma.TalentLevelUpMaterialUpdateManyWithWhereWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialScalarWhereInput`
 */
export type TalentLevelUpMaterialScalarWhereInput = Prisma.TalentLevelUpMaterialScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpsertWithWhereUniqueWithoutDomainInput`
 */
export type TalentLevelUpMaterialUpsertWithWhereUniqueWithoutDomainInput = Prisma.TalentLevelUpMaterialUpsertWithWhereUniqueWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpdateWithWhereUniqueWithoutDomainInput`
 */
export type WeaponAscensionMaterialUpdateWithWhereUniqueWithoutDomainInput = Prisma.WeaponAscensionMaterialUpdateWithWhereUniqueWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpdateManyWithWhereWithoutDomainInput`
 */
export type WeaponAscensionMaterialUpdateManyWithWhereWithoutDomainInput = Prisma.WeaponAscensionMaterialUpdateManyWithWhereWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialScalarWhereInput`
 */
export type WeaponAscensionMaterialScalarWhereInput = Prisma.WeaponAscensionMaterialScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpsertWithWhereUniqueWithoutDomainInput`
 */
export type WeaponAscensionMaterialUpsertWithWhereUniqueWithoutDomainInput = Prisma.WeaponAscensionMaterialUpsertWithWhereUniqueWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateWithoutSpecialtyDishInput`
 */
export type CharacterProfileCreateWithoutSpecialtyDishInput = Prisma.CharacterProfileCreateWithoutSpecialtyDishInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedCreateWithoutSpecialtyDishInput`
 */
export type CharacterProfileUncheckedCreateWithoutSpecialtyDishInput = Prisma.CharacterProfileUncheckedCreateWithoutSpecialtyDishInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileCreateOrConnectWithoutspecialtyDishInput`
 */
export type CharacterProfileCreateOrConnectWithoutspecialtyDishInput = Prisma.CharacterProfileCreateOrConnectWithoutspecialtyDishInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateWithoutConsumeableInput`
 */
export type ConsumeableRecipeCreateWithoutConsumeableInput = Prisma.ConsumeableRecipeCreateWithoutConsumeableInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedCreateWithoutConsumeableInput`
 */
export type ConsumeableRecipeUncheckedCreateWithoutConsumeableInput = Prisma.ConsumeableRecipeUncheckedCreateWithoutConsumeableInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeCreateOrConnectWithoutconsumeableInput`
 */
export type ConsumeableRecipeCreateOrConnectWithoutconsumeableInput = Prisma.ConsumeableRecipeCreateOrConnectWithoutconsumeableInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateWithoutSpecialtyDishInput`
 */
export type CharacterProfileUpdateWithoutSpecialtyDishInput = Prisma.CharacterProfileUpdateWithoutSpecialtyDishInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedUpdateWithoutSpecialtyDishInput`
 */
export type CharacterProfileUncheckedUpdateWithoutSpecialtyDishInput = Prisma.CharacterProfileUncheckedUpdateWithoutSpecialtyDishInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpsertWithoutSpecialtyDishInput`
 */
export type CharacterProfileUpsertWithoutSpecialtyDishInput = Prisma.CharacterProfileUpsertWithoutSpecialtyDishInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateWithoutConsumeableInput`
 */
export type ConsumeableRecipeUpdateWithoutConsumeableInput = Prisma.ConsumeableRecipeUpdateWithoutConsumeableInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedUpdateWithoutConsumeableInput`
 */
export type ConsumeableRecipeUncheckedUpdateWithoutConsumeableInput = Prisma.ConsumeableRecipeUncheckedUpdateWithoutConsumeableInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpsertWithoutConsumeableInput`
 */
export type ConsumeableRecipeUpsertWithoutConsumeableInput = Prisma.ConsumeableRecipeUpsertWithoutConsumeableInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableCreateWithoutRecipeInput`
 */
export type ConsumeableCreateWithoutRecipeInput = Prisma.ConsumeableCreateWithoutRecipeInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUncheckedCreateWithoutRecipeInput`
 */
export type ConsumeableUncheckedCreateWithoutRecipeInput = Prisma.ConsumeableUncheckedCreateWithoutRecipeInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableCreateOrConnectWithoutrecipeInput`
 */
export type ConsumeableCreateOrConnectWithoutrecipeInput = Prisma.ConsumeableCreateOrConnectWithoutrecipeInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialCreateWithoutRecipesInput`
 */
export type CraftingMaterialCreateWithoutRecipesInput = Prisma.CraftingMaterialCreateWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUncheckedCreateWithoutRecipesInput`
 */
export type CraftingMaterialUncheckedCreateWithoutRecipesInput = Prisma.CraftingMaterialUncheckedCreateWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialCreateOrConnectWithoutrecipesInput`
 */
export type CraftingMaterialCreateOrConnectWithoutrecipesInput = Prisma.CraftingMaterialCreateOrConnectWithoutrecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialCreateWithoutRecipesInput`
 */
export type CookingMaterialCreateWithoutRecipesInput = Prisma.CookingMaterialCreateWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUncheckedCreateWithoutRecipesInput`
 */
export type CookingMaterialUncheckedCreateWithoutRecipesInput = Prisma.CookingMaterialUncheckedCreateWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialCreateOrConnectWithoutrecipesInput`
 */
export type CookingMaterialCreateOrConnectWithoutrecipesInput = Prisma.CookingMaterialCreateOrConnectWithoutrecipesInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpdateWithoutRecipeInput`
 */
export type ConsumeableUpdateWithoutRecipeInput = Prisma.ConsumeableUpdateWithoutRecipeInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUncheckedUpdateWithoutRecipeInput`
 */
export type ConsumeableUncheckedUpdateWithoutRecipeInput = Prisma.ConsumeableUncheckedUpdateWithoutRecipeInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableUpsertWithoutRecipeInput`
 */
export type ConsumeableUpsertWithoutRecipeInput = Prisma.ConsumeableUpsertWithoutRecipeInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUpdateWithWhereUniqueWithoutRecipesInput`
 */
export type CraftingMaterialUpdateWithWhereUniqueWithoutRecipesInput = Prisma.CraftingMaterialUpdateWithWhereUniqueWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUpdateManyWithWhereWithoutRecipesInput`
 */
export type CraftingMaterialUpdateManyWithWhereWithoutRecipesInput = Prisma.CraftingMaterialUpdateManyWithWhereWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialScalarWhereInput`
 */
export type CraftingMaterialScalarWhereInput = Prisma.CraftingMaterialScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUpsertWithWhereUniqueWithoutRecipesInput`
 */
export type CraftingMaterialUpsertWithWhereUniqueWithoutRecipesInput = Prisma.CraftingMaterialUpsertWithWhereUniqueWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpdateWithWhereUniqueWithoutRecipesInput`
 */
export type CookingMaterialUpdateWithWhereUniqueWithoutRecipesInput = Prisma.CookingMaterialUpdateWithWhereUniqueWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpdateManyWithWhereWithoutRecipesInput`
 */
export type CookingMaterialUpdateManyWithWhereWithoutRecipesInput = Prisma.CookingMaterialUpdateManyWithWhereWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialScalarWhereInput`
 */
export type CookingMaterialScalarWhereInput = Prisma.CookingMaterialScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpsertWithWhereUniqueWithoutRecipesInput`
 */
export type CookingMaterialUpsertWithWhereUniqueWithoutRecipesInput = Prisma.CookingMaterialUpsertWithWhereUniqueWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialCreateWithoutProcessingRecipeInput`
 */
export type CookingMaterialCreateWithoutProcessingRecipeInput = Prisma.CookingMaterialCreateWithoutProcessingRecipeInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUncheckedCreateWithoutProcessingRecipeInput`
 */
export type CookingMaterialUncheckedCreateWithoutProcessingRecipeInput = Prisma.CookingMaterialUncheckedCreateWithoutProcessingRecipeInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialCreateOrConnectWithoutprocessingRecipeInput`
 */
export type CookingMaterialCreateOrConnectWithoutprocessingRecipeInput = Prisma.CookingMaterialCreateOrConnectWithoutprocessingRecipeInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpdateWithoutProcessingRecipeInput`
 */
export type CookingMaterialUpdateWithoutProcessingRecipeInput = Prisma.CookingMaterialUpdateWithoutProcessingRecipeInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUncheckedUpdateWithoutProcessingRecipeInput`
 */
export type CookingMaterialUncheckedUpdateWithoutProcessingRecipeInput = Prisma.CookingMaterialUncheckedUpdateWithoutProcessingRecipeInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpsertWithoutProcessingRecipeInput`
 */
export type CookingMaterialUpsertWithoutProcessingRecipeInput = Prisma.CookingMaterialUpsertWithoutProcessingRecipeInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialCreateWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialCreateWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialCreateWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUncheckedCreateWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialUncheckedCreateWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialUncheckedCreateWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialCreateOrConnectWithoutrecipeUseInput`
 */
export type WeaponEnhancementMaterialCreateOrConnectWithoutrecipeUseInput = Prisma.WeaponEnhancementMaterialCreateOrConnectWithoutrecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialCreateWithoutRecipeCreateInput`
 */
export type WeaponEnhancementMaterialCreateWithoutRecipeCreateInput = Prisma.WeaponEnhancementMaterialCreateWithoutRecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUncheckedCreateWithoutRecipeCreateInput`
 */
export type WeaponEnhancementMaterialUncheckedCreateWithoutRecipeCreateInput = Prisma.WeaponEnhancementMaterialUncheckedCreateWithoutRecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialCreateOrConnectWithoutrecipeCreateInput`
 */
export type WeaponEnhancementMaterialCreateOrConnectWithoutrecipeCreateInput = Prisma.WeaponEnhancementMaterialCreateOrConnectWithoutrecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponCreateWithoutForgeRecipeInput`
 */
export type WeaponCreateWithoutForgeRecipeInput = Prisma.WeaponCreateWithoutForgeRecipeInput

/**
 * @deprecated Renamed to `Prisma.WeaponUncheckedCreateWithoutForgeRecipeInput`
 */
export type WeaponUncheckedCreateWithoutForgeRecipeInput = Prisma.WeaponUncheckedCreateWithoutForgeRecipeInput

/**
 * @deprecated Renamed to `Prisma.WeaponCreateOrConnectWithoutforgeRecipeInput`
 */
export type WeaponCreateOrConnectWithoutforgeRecipeInput = Prisma.WeaponCreateOrConnectWithoutforgeRecipeInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpdateWithWhereUniqueWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialUpdateWithWhereUniqueWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialUpdateWithWhereUniqueWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpdateManyWithWhereWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialUpdateManyWithWhereWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialUpdateManyWithWhereWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialScalarWhereInput`
 */
export type WeaponEnhancementMaterialScalarWhereInput = Prisma.WeaponEnhancementMaterialScalarWhereInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpsertWithWhereUniqueWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialUpsertWithWhereUniqueWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialUpsertWithWhereUniqueWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpdateWithoutRecipeCreateInput`
 */
export type WeaponEnhancementMaterialUpdateWithoutRecipeCreateInput = Prisma.WeaponEnhancementMaterialUpdateWithoutRecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeCreateInput`
 */
export type WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeCreateInput = Prisma.WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpsertWithoutRecipeCreateInput`
 */
export type WeaponEnhancementMaterialUpsertWithoutRecipeCreateInput = Prisma.WeaponEnhancementMaterialUpsertWithoutRecipeCreateInput

/**
 * @deprecated Renamed to `Prisma.WeaponUpdateWithoutForgeRecipeInput`
 */
export type WeaponUpdateWithoutForgeRecipeInput = Prisma.WeaponUpdateWithoutForgeRecipeInput

/**
 * @deprecated Renamed to `Prisma.WeaponUncheckedUpdateWithoutForgeRecipeInput`
 */
export type WeaponUncheckedUpdateWithoutForgeRecipeInput = Prisma.WeaponUncheckedUpdateWithoutForgeRecipeInput

/**
 * @deprecated Renamed to `Prisma.WeaponUpsertWithoutForgeRecipeInput`
 */
export type WeaponUpsertWithoutForgeRecipeInput = Prisma.WeaponUpsertWithoutForgeRecipeInput

/**
 * @deprecated Renamed to `Prisma.ArtifactCreateWithoutSetInput`
 */
export type ArtifactCreateWithoutSetInput = Prisma.ArtifactCreateWithoutSetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedCreateWithoutSetInput`
 */
export type ArtifactUncheckedCreateWithoutSetInput = Prisma.ArtifactUncheckedCreateWithoutSetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactCreateOrConnectWithoutsetInput`
 */
export type ArtifactCreateOrConnectWithoutsetInput = Prisma.ArtifactCreateOrConnectWithoutsetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateWithWhereUniqueWithoutSetInput`
 */
export type ArtifactUpdateWithWhereUniqueWithoutSetInput = Prisma.ArtifactUpdateWithWhereUniqueWithoutSetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateManyWithWhereWithoutSetInput`
 */
export type ArtifactUpdateManyWithWhereWithoutSetInput = Prisma.ArtifactUpdateManyWithWhereWithoutSetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpsertWithWhereUniqueWithoutSetInput`
 */
export type ArtifactUpsertWithWhereUniqueWithoutSetInput = Prisma.ArtifactUpsertWithWhereUniqueWithoutSetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetCreateWithoutArtifactsInput`
 */
export type ArtifactSetCreateWithoutArtifactsInput = Prisma.ArtifactSetCreateWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUncheckedCreateWithoutArtifactsInput`
 */
export type ArtifactSetUncheckedCreateWithoutArtifactsInput = Prisma.ArtifactSetUncheckedCreateWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetCreateOrConnectWithoutartifactsInput`
 */
export type ArtifactSetCreateOrConnectWithoutartifactsInput = Prisma.ArtifactSetCreateOrConnectWithoutartifactsInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateWithoutArtifactsInput`
 */
export type DomainCreateWithoutArtifactsInput = Prisma.DomainCreateWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedCreateWithoutArtifactsInput`
 */
export type DomainUncheckedCreateWithoutArtifactsInput = Prisma.DomainUncheckedCreateWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.DomainCreateOrConnectWithoutartifactsInput`
 */
export type DomainCreateOrConnectWithoutartifactsInput = Prisma.DomainCreateOrConnectWithoutartifactsInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUpdateWithoutArtifactsInput`
 */
export type ArtifactSetUpdateWithoutArtifactsInput = Prisma.ArtifactSetUpdateWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUncheckedUpdateWithoutArtifactsInput`
 */
export type ArtifactSetUncheckedUpdateWithoutArtifactsInput = Prisma.ArtifactSetUncheckedUpdateWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.ArtifactSetUpsertWithoutArtifactsInput`
 */
export type ArtifactSetUpsertWithoutArtifactsInput = Prisma.ArtifactSetUpsertWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateWithoutArtifactsInput`
 */
export type DomainUpdateWithoutArtifactsInput = Prisma.DomainUpdateWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedUpdateWithoutArtifactsInput`
 */
export type DomainUncheckedUpdateWithoutArtifactsInput = Prisma.DomainUncheckedUpdateWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.DomainUpsertWithoutArtifactsInput`
 */
export type DomainUpsertWithoutArtifactsInput = Prisma.DomainUpsertWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateWithoutCharacterInput`
 */
export type CharacterAscensionUpdateWithoutCharacterInput = Prisma.CharacterAscensionUpdateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedUpdateWithoutCharacterInput`
 */
export type CharacterAscensionUncheckedUpdateWithoutCharacterInput = Prisma.CharacterAscensionUncheckedUpdateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedUpdateManyWithoutAscensionsInput`
 */
export type CharacterAscensionUncheckedUpdateManyWithoutAscensionsInput = Prisma.CharacterAscensionUncheckedUpdateManyWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.ElementUpdateWithoutCharactersInput`
 */
export type ElementUpdateWithoutCharactersInput = Prisma.ElementUpdateWithoutCharactersInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedUpdateWithoutCharactersInput`
 */
export type ElementUncheckedUpdateWithoutCharactersInput = Prisma.ElementUncheckedUpdateWithoutCharactersInput

/**
 * @deprecated Renamed to `Prisma.ElementUncheckedUpdateManyWithoutElementsInput`
 */
export type ElementUncheckedUpdateManyWithoutElementsInput = Prisma.ElementUncheckedUpdateManyWithoutElementsInput

/**
 * @deprecated Renamed to `Prisma.TalentUpdateWithoutCharacterInput`
 */
export type TalentUpdateWithoutCharacterInput = Prisma.TalentUpdateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedUpdateWithoutCharacterInput`
 */
export type TalentUncheckedUpdateWithoutCharacterInput = Prisma.TalentUncheckedUpdateWithoutCharacterInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedUpdateManyWithoutTalentsInput`
 */
export type TalentUncheckedUpdateManyWithoutTalentsInput = Prisma.TalentUncheckedUpdateManyWithoutTalentsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateWithoutCharacterAscensionsInput`
 */
export type CommonAscensionMaterialUpdateWithoutCharacterAscensionsInput = Prisma.CommonAscensionMaterialUpdateWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput`
 */
export type CommonAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput = Prisma.CommonAscensionMaterialUncheckedUpdateWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUncheckedUpdateManyWithoutCommonAscensionMaterialsInput`
 */
export type CommonAscensionMaterialUncheckedUpdateManyWithoutCommonAscensionMaterialsInput = Prisma.CommonAscensionMaterialUncheckedUpdateManyWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUpdateWithoutElementsInput`
 */
export type CharacterUpdateWithoutElementsInput = Prisma.CharacterUpdateWithoutElementsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedUpdateWithoutElementsInput`
 */
export type CharacterUncheckedUpdateWithoutElementsInput = Prisma.CharacterUncheckedUpdateWithoutElementsInput

/**
 * @deprecated Renamed to `Prisma.CharacterUncheckedUpdateManyWithoutCharactersInput`
 */
export type CharacterUncheckedUpdateManyWithoutCharactersInput = Prisma.CharacterUncheckedUpdateManyWithoutCharactersInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateWithoutVisionInput`
 */
export type CharacterProfileUpdateWithoutVisionInput = Prisma.CharacterProfileUpdateWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedUpdateWithoutVisionInput`
 */
export type CharacterProfileUncheckedUpdateWithoutVisionInput = Prisma.CharacterProfileUncheckedUpdateWithoutVisionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedUpdateManyWithoutCharacterProfilesInput`
 */
export type CharacterProfileUncheckedUpdateManyWithoutCharacterProfilesInput = Prisma.CharacterProfileUncheckedUpdateManyWithoutCharacterProfilesInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUpdateWithoutRegionInput`
 */
export type CharacterProfileUpdateWithoutRegionInput = Prisma.CharacterProfileUpdateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.CharacterProfileUncheckedUpdateWithoutRegionInput`
 */
export type CharacterProfileUncheckedUpdateWithoutRegionInput = Prisma.CharacterProfileUncheckedUpdateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainUpdateWithoutRegionInput`
 */
export type DomainUpdateWithoutRegionInput = Prisma.DomainUpdateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedUpdateWithoutRegionInput`
 */
export type DomainUncheckedUpdateWithoutRegionInput = Prisma.DomainUncheckedUpdateWithoutRegionInput

/**
 * @deprecated Renamed to `Prisma.DomainUncheckedUpdateManyWithoutDomainsInput`
 */
export type DomainUncheckedUpdateManyWithoutDomainsInput = Prisma.DomainUncheckedUpdateManyWithoutDomainsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateWithoutWeaponInput`
 */
export type WeaponAscensionUpdateWithoutWeaponInput = Prisma.WeaponAscensionUpdateWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedUpdateWithoutWeaponInput`
 */
export type WeaponAscensionUncheckedUpdateWithoutWeaponInput = Prisma.WeaponAscensionUncheckedUpdateWithoutWeaponInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedUpdateManyWithoutAscensionsInput`
 */
export type WeaponAscensionUncheckedUpdateManyWithoutAscensionsInput = Prisma.WeaponAscensionUncheckedUpdateManyWithoutAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUpdateWithoutWeaponAscensionsInput`
 */
export type CommonAscensionMaterialUpdateWithoutWeaponAscensionsInput = Prisma.CommonAscensionMaterialUpdateWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CommonAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput`
 */
export type CommonAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput = Prisma.CommonAscensionMaterialUncheckedUpdateWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateWithoutCommonAscensionMaterialsInput`
 */
export type CharacterAscensionUpdateWithoutCommonAscensionMaterialsInput = Prisma.CharacterAscensionUpdateWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput`
 */
export type CharacterAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput = Prisma.CharacterAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionsInput`
 */
export type CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionsInput = Prisma.CharacterAscensionUncheckedUpdateManyWithoutCharacterAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateWithoutCommonAscensionMaterialsInput`
 */
export type WeaponAscensionUpdateWithoutCommonAscensionMaterialsInput = Prisma.WeaponAscensionUpdateWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput`
 */
export type WeaponAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput = Prisma.WeaponAscensionUncheckedUpdateWithoutCommonAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionsInput`
 */
export type WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionsInput = Prisma.WeaponAscensionUncheckedUpdateManyWithoutWeaponAscensionsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUpdateWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionUpdateWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionUpdateWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionUncheckedUpdateWithoutWeaponAscensionMaterialInput`
 */
export type WeaponAscensionUncheckedUpdateWithoutWeaponAscensionMaterialInput = Prisma.WeaponAscensionUncheckedUpdateWithoutWeaponAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUpdateWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionUpdateWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionUpdateWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.CharacterAscensionUncheckedUpdateWithoutCharacterAscensionMaterialInput`
 */
export type CharacterAscensionUncheckedUpdateWithoutCharacterAscensionMaterialInput = Prisma.CharacterAscensionUncheckedUpdateWithoutCharacterAscensionMaterialInput

/**
 * @deprecated Renamed to `Prisma.TalentUpdateWithoutTalentLevelUpMaterialInput`
 */
export type TalentUpdateWithoutTalentLevelUpMaterialInput = Prisma.TalentUpdateWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.TalentUncheckedUpdateWithoutTalentLevelUpMaterialInput`
 */
export type TalentUncheckedUpdateWithoutTalentLevelUpMaterialInput = Prisma.TalentUncheckedUpdateWithoutTalentLevelUpMaterialInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateWithoutCraftingMaterialsInput`
 */
export type ConsumeableRecipeUpdateWithoutCraftingMaterialsInput = Prisma.ConsumeableRecipeUpdateWithoutCraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedUpdateWithoutCraftingMaterialsInput`
 */
export type ConsumeableRecipeUncheckedUpdateWithoutCraftingMaterialsInput = Prisma.ConsumeableRecipeUncheckedUpdateWithoutCraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedUpdateManyWithoutRecipesInput`
 */
export type ConsumeableRecipeUncheckedUpdateManyWithoutRecipesInput = Prisma.ConsumeableRecipeUncheckedUpdateManyWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUpdateWithoutCookingMaterialsInput`
 */
export type ConsumeableRecipeUpdateWithoutCookingMaterialsInput = Prisma.ConsumeableRecipeUpdateWithoutCookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ConsumeableRecipeUncheckedUpdateWithoutCookingMaterialsInput`
 */
export type ConsumeableRecipeUncheckedUpdateWithoutCookingMaterialsInput = Prisma.ConsumeableRecipeUncheckedUpdateWithoutCookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateWithoutDomainInput`
 */
export type ArtifactUpdateWithoutDomainInput = Prisma.ArtifactUpdateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedUpdateWithoutDomainInput`
 */
export type ArtifactUncheckedUpdateWithoutDomainInput = Prisma.ArtifactUncheckedUpdateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedUpdateManyWithoutArtifactsInput`
 */
export type ArtifactUncheckedUpdateManyWithoutArtifactsInput = Prisma.ArtifactUncheckedUpdateManyWithoutArtifactsInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUpdateWithoutDomainInput`
 */
export type TalentLevelUpMaterialUpdateWithoutDomainInput = Prisma.TalentLevelUpMaterialUpdateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUncheckedUpdateWithoutDomainInput`
 */
export type TalentLevelUpMaterialUncheckedUpdateWithoutDomainInput = Prisma.TalentLevelUpMaterialUncheckedUpdateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.TalentLevelUpMaterialUncheckedUpdateManyWithoutTalentLevelUpMaterialsInput`
 */
export type TalentLevelUpMaterialUncheckedUpdateManyWithoutTalentLevelUpMaterialsInput = Prisma.TalentLevelUpMaterialUncheckedUpdateManyWithoutTalentLevelUpMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUpdateWithoutDomainInput`
 */
export type WeaponAscensionMaterialUpdateWithoutDomainInput = Prisma.WeaponAscensionMaterialUpdateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUncheckedUpdateWithoutDomainInput`
 */
export type WeaponAscensionMaterialUncheckedUpdateWithoutDomainInput = Prisma.WeaponAscensionMaterialUncheckedUpdateWithoutDomainInput

/**
 * @deprecated Renamed to `Prisma.WeaponAscensionMaterialUncheckedUpdateManyWithoutWeaponAscensionMaterialsInput`
 */
export type WeaponAscensionMaterialUncheckedUpdateManyWithoutWeaponAscensionMaterialsInput = Prisma.WeaponAscensionMaterialUncheckedUpdateManyWithoutWeaponAscensionMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUpdateWithoutRecipesInput`
 */
export type CraftingMaterialUpdateWithoutRecipesInput = Prisma.CraftingMaterialUpdateWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUncheckedUpdateWithoutRecipesInput`
 */
export type CraftingMaterialUncheckedUpdateWithoutRecipesInput = Prisma.CraftingMaterialUncheckedUpdateWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CraftingMaterialUncheckedUpdateManyWithoutCraftingMaterialsInput`
 */
export type CraftingMaterialUncheckedUpdateManyWithoutCraftingMaterialsInput = Prisma.CraftingMaterialUncheckedUpdateManyWithoutCraftingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUpdateWithoutRecipesInput`
 */
export type CookingMaterialUpdateWithoutRecipesInput = Prisma.CookingMaterialUpdateWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUncheckedUpdateWithoutRecipesInput`
 */
export type CookingMaterialUncheckedUpdateWithoutRecipesInput = Prisma.CookingMaterialUncheckedUpdateWithoutRecipesInput

/**
 * @deprecated Renamed to `Prisma.CookingMaterialUncheckedUpdateManyWithoutCookingMaterialsInput`
 */
export type CookingMaterialUncheckedUpdateManyWithoutCookingMaterialsInput = Prisma.CookingMaterialUncheckedUpdateManyWithoutCookingMaterialsInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUpdateWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialUpdateWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialUpdateWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeUseInput`
 */
export type WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeUseInput = Prisma.WeaponEnhancementMaterialUncheckedUpdateWithoutRecipeUseInput

/**
 * @deprecated Renamed to `Prisma.WeaponEnhancementMaterialUncheckedUpdateManyWithoutWeaponEnhancementMaterialsInput`
 */
export type WeaponEnhancementMaterialUncheckedUpdateManyWithoutWeaponEnhancementMaterialsInput = Prisma.WeaponEnhancementMaterialUncheckedUpdateManyWithoutWeaponEnhancementMaterialsInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUpdateWithoutSetInput`
 */
export type ArtifactUpdateWithoutSetInput = Prisma.ArtifactUpdateWithoutSetInput

/**
 * @deprecated Renamed to `Prisma.ArtifactUncheckedUpdateWithoutSetInput`
 */
export type ArtifactUncheckedUpdateWithoutSetInput = Prisma.ArtifactUncheckedUpdateWithoutSetInput